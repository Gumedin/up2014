&НаСервереБезКонтекста
Функция КлиентНайтиКонтрагентаПоИННКПП(ИННКонтрагента, КППКонтрагента)
		Отбор = НОВЫЙ Структура("ИНН");
		Отбор.ИНН = ИННКонтрагента;
		
		Выборка = Справочники.Контрагенты.Выбрать( , , Отбор);
		Пока Выборка.Следующий() Цикл
			Если Выборка.КПП = КППКонтрагента Тогда
				Возврат Выборка.Ссылка;
			КонецЕсли;
		КонецЦикла;
		Возврат Неопределено;
КонецФункции
      
&НаСервереБезКонтекста
Функция НайтиДоговорПоНомеру( НомерДоговора, ДатаДоговора)
		Договор = Документы.Договор.НайтиПоНомеру( НомерДоговора, ДатаДоговора);
		Если Договор.Пустая() Тогда Возврат Неопределено; КонецЕсли;
		Возврат Договор;
КонецФункции

&НаСервереБезКонтекста
Функция НайтиОрганизациюПоПрефиксу( Префикс );		
		Возврат Справочники.Организации.НайтиПоРеквизиту( "Префикс", Префикс);
КонецФункции

&НаКлиенте
Процедура ИзменитьФлажки( Таб,  Переносить )
	Для Каждого Стр Из Таб Цикл
		Стр.Переносить = Переносить;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	ИзменитьФлажки( Объект.ТабАктовРеализаций, Истина );
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	ИзменитьФлажки( Объект.ТабАктовРеализаций,  Ложь );
КонецПроцедуры

&НаКлиенте
Функция ЗагрузитьПодразделение( ОЛЕПодразделение )
	Если ОЛЕПодразделение.Пустая() Тогда Возврат Неопределено; КонецЕсли;
	НаименованиеПодразделения = СокрЛП( ОЛЕПодразделение.Наименование );
	Если НЕ ЗначениеЗаполнено(НаименованиеПодразделения) Тогда Возврат Неопределено; КонецЕсли;
	
	Возврат ЗагрузитьПодразделение_НаСервере( НаименованиеПодразделения );
КонецФункции

&НаСервереБезКонтекста
Функция ЗагрузитьПодразделение_НаСервере( НаименованиеПодразделения )
	СпрСс = Справочники.Подразделения.НайтиПоНаименованию( НаименованиеПодразделения, Истина);
	Если СпрСс.Пустая() Тогда 
		СпРОб = Справочники.Подразделения.СоздатьЭлемент();
		СпрОб.Наименование = НаименованиеПодразделения;
		Попытка
			СпрОб.Записать();
			Возврат СпрОб.Ссылка;
		Исключение
			Сообщить("Не удалось записать подразделение " + НаименованиеПодразделения + ", " + ОписаниеОшибки());
			Возврат Неопределено;
		КонецПопытки;
	Конецесли;
	Возврат СпрСс;
КонецФункции

&НаСервереБезКонтекста
Функция ЗагрузитьСотрудника( Название )			
	Возврат Справочники.ФизическиеЛица.НайтиПоНаименованию( Название, Истина );
КонецФункции

&НаСервереБезКонтекста
Функция ОрганизацияПоДоговору( Договор )
	Если ЗначениеЗаполнено( Договор ) Тогда
		Возврат Договор.Организация;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции


&НаКлиенте
Процедура ЗаполнитьТаблицуПоВидуДокумента_НаКлиенте(БазаОЛЕ, ВидДокумента )
	
	ВыборкаОЛЕ = БазаОЛЕ.Документы[ВидДокумента].Выбрать( НачалоДня(ПериодОтбора.ДатаНачала), КонецДня( ПериодОтбора.ДатаОкончания )); 

	Пока ВыборкаОЛЕ.Следующий()  Цикл
		// не проведен
		Если НЕ ВыборкаОЛЕ.Проведен	Тогда Продолжить; КонецЕсли;
		
		// аннулирован
		Аннулирован	= УП_ПереносДанных.ОЛЕЗначениеДопРеквизита( БазаОЛЕ, ВыборкаОЛЕ.Ссылка, "Аннулирован");
		Если Аннулирован = Неопределено Тогда
		// не указано, т.е не аннулирован
		ИначеЕсли Аннулирован 			Тогда 
			Продолжить; 
		КонецЕсли;
		
		// в реализацию
		ВРеализацию			= УП_ПереносДанных.ОЛЕЗначениеДопРеквизита( БазаОЛЕ, ВыборкаОЛЕ.Ссылка, "В реализацию");
		Если ВРеализацию = Неопределено Тогда
			Продолжить; // не указан
		ИначеЕсли Не ВРеализацию 		Тогда 
			Продолжить; 
		КонецЕсли;
		//
		// 		
		ИННКонтрагента 	= СокрЛП(ВыборкаОЛЕ.Контрагент.ИНН);
		КППКонтрагента 	= СокрЛП(ВыборкаОЛЕ.Контрагент.КПП);
		Контрагент 		= КлиентНайтиКонтрагентаПоИННКПП( ИННКонтрагента,  КППКонтрагента);
		Если Контрагент = Неопределено Тогда
			Сообщить("Нет контрагента с ИНН [" + ИННКонтрагента + "], КПП [" + КППКонтрагента +"]");
			Продолжить;
		КонецЕсли;
		
		СтрДок 						= Объект.ТабАктовРеализаций.Добавить();
		СтрДок.ЭтоАкт 				= (ВидДокумента = "АктВыполненныхРабот"); 	
		СтрДок.Дата					= ВыборкаОЛЕ.Дата;
		СтрДок.НомерАктаРеализации  = ВыборкаОЛЕ.Номер;
		СтрДок.Контрагент			= Контрагент;
		СтрДок.Договор				= НайтиДоговорПоНомеру( ВыборкаОЛЕ.ЗаказКлиента.Номер,	ВыборкаОЛЕ.ЗаказКлиента.Дата );
		СтрДок.Организация			= ОрганизацияПоДоговору( СтрДок.Договор );
		СтрДок.Подразделение 		= ЗагрузитьПодразделение( ВыборкаОЛЕ.Подразделение );
		
		
		// не заполняется в торговле, если будет то тип - физ.лицо
		ОЛЕФизЛицо				= УП_ПереносДанных.ОЛЕЗначениеДопРеквизита( БазаОЛЕ, ВыборкаОЛЕ.Ссылка, "Сотрудник");
		Если БазаОЛЕ.ЗначениеЗаполнено( ОЛЕФизЛицо ) Тогда
			СтрДок.ФизическоеЛицо	= ЗагрузитьФизическоеЛицо( БазаОЛЕ, ОЛЕФизЛицо );
		
		КонецЕсли;
		СтрДок.Сумма				= ВыборкаОЛЕ.СуммаДокумента;
		
	КонецЦикла;
	
	
КонецПроцедуры



&НаСервереБезКонтекста
Функция ЗагрузитьФизическоеЛицо( БазаОЛЕ, ОЛЕФизЛицо )
	Если НЕ БазаОЛЕ.ЗначениеЗаполнено( ОЛЕФизЛицо ) Тогда
		Возврат Неопределено;
	КонецЕсли;
	сФизическоеЛицо = Новый Структура;
	сФизическоеЛицо.Вставить("Код", 			ОЛЕФизЛицо.Наименование );
	сФизическоеЛицо.Вставить("Наименование", 	ОЛЕФизЛицо.Наименование);
	сФизическоеЛицо.Вставить("ДатаРождения", 	ОЛЕФизЛицо.ДатаРождения );
	сФизическоеЛицо.Вставить("Пол", 			(БазаОЛЕ.String(ОЛЕФизЛицо.Пол)= "Мужской"));
	
	Возврат УП_ПереносДанных.ЗагрузитьФизическоеЛицо( сФизическоеЛицо );

КонецФункции



&НаКлиенте
Процедура ЗаполнитьТаблицу(Команда)
	//
	БазаОЛЕ 	= УП_Клиент.КлиентПодключитьсяКБазеОЛЕ_ПоИмени( "УправлениеТорговлей" );
	Если БазаОЛЕ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	//
	Объект.ТабАктовРеализаций.Очистить();
	
	ЗаполнитьТаблицуПоВидуДокумента_НаКлиенте(БазаОЛЕ, "АктВыполненныхРабот");
	
	// указание Голуба, 10,02,2013 - не переносим Реализации
	//ЗаполнитьТаблицуПоВидуДокумента_НаКлиенте(БазаОЛЕ, "РеализацияТоваровУслуг");
	
	БазаОЛЕ = "";
	ПоказатьПредупреждение(,"Таблица документов заполнена!", 10);
	
	
КонецПроцедуры


//*************************************************************************
//	Номер акта и реализации модет совпадать
//  
//	
//
//
&НаСервере
Процедура ЗагрузитьДокументы_НаСервере( )
	Для Каждого Док Из Объект.ТабАктовРеализаций Цикл
		Если НЕ Док.Переносить Тогда Продолжить; КонецЕсли;
		
		// ищем документ
		Отбор = Новый Структура;
		Отбор.Вставить("НомерАктаРеализации", Док.НомерАктаРеализации );
		ВыборкаДок = Документы.АктТиражногоПодразделения.Выбрать(НачалоГода(Док.Дата), КонецГода(Док.Дата), Отбор ); 
		Нашли = Ложь;
		Пока ВыборкаДок.Следующий() Цикл
			//Если ВыборкаДок.ЭтоАкт = Док.ЭтоАкт Тогда
				ДокОб = ВыборкаДок.Ссылка.ПолучитьОбъект();
				Нашли = Истина;
				Прервать;
			//КонецЕсли;
		КонецЦикла;
		//
		Если НЕ Нашли Тогда
			ДокОб 						= Документы.АктТиражногоПодразделения.СоздатьДокумент();
			ДокОб.Дата					= Док.Дата;
			//ДокОб.ЭтоАкт				= Док.ЭтоАкт;
			ДокОб.НомерАктаРеализации	= Док.НомерАктаРеализации;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств( ДокОб, Док );
		// 
		Док.Переносить				= Ложь;
		
		Попытка
			ДокОб.Записать( РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный );
		Исключение
			
			Сообщить( "Не удалось записать акт (реализацию)" + Док.НомерАктаРеализации +", " + ОписаниеОшибки());
		КонецПопытки;
	КонецЦикла;		
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДокументы(Команда)
	ЗагрузитьДокументы_НаСервере();
	ПоказатьПредупреждение(,"Акты и реализации загружена", 10);
КонецПроцедуры

