
#Область ПолучениеТекущихДанны


&НаСервере
Процедура ЗаполнитьДанныеПлановРабот()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФронтРаботОбороты.ПланРабот КАК ПланРаботТиражный,
		|	ФронтРаботОбороты.ТарифнаяСтавка КАК Номенклатура,
		|	СУММА(ВЫБОР
		|			КОГДА ФронтРаботОбороты.ТипСуммы = 0
		|				ТОГДА ФронтРаботОбороты.КоличествоОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоПлан,
		|	СУММА(ВЫБОР
		|			КОГДА ФронтРаботОбороты.ТипСуммы = 1
		|				ТОГДА ФронтРаботОбороты.КоличествоОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоФакт,
		|	СУММА(ВЫБОР
		|			КОГДА ФронтРаботОбороты.ТипСуммы = 0
		|				ТОГДА ВЫБОР
		|						КОГДА ФронтРаботОбороты.Месяц = &Месяц
		|							ТОГДА ФронтРаботОбороты.КоличествоОборот
		|						ИНАЧЕ 0
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоПланМесяц,
		|	СУММА(ВЫБОР
		|			КОГДА ФронтРаботОбороты.ТипСуммы = 0
		|				ТОГДА ФронтРаботОбороты.КоличествоОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ - ВЫБОР
		|			КОГДА ФронтРаботОбороты.ТипСуммы = 1
		|				ТОГДА ФронтРаботОбороты.КоличествоОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ОстатокПлан,
		|	ФронтРаботОбороты.ПланРабот.Номер КАК ПланРаботНомер,
		|	ФронтРаботОбороты.ТарифнаяСтавка.Артикул КАК Артикул,
		|	ФронтРаботОбороты.ПланРабот.Закрыт КАК Закрыт
		|ИЗ
		|	РегистрНакопления.ФронтРабот.Обороты КАК ФронтРаботОбороты
		|ГДЕ
		|	ТИПЗНАЧЕНИЯ(ФронтРаботОбороты.ПланРабот) = ТИП(Документ.ПланРаботТиражный)
		|	И (НЕ ФронтРаботОбороты.ПланРабот.Закрыт
		|			ИЛИ ФронтРаботОбороты.ПланРабот.Ссылка В (&ДополнительныеПланыРабот))
		|	И ФронтРаботОбороты.ПланРабот.Подразделение = &Подразделение
		|
		|СГРУППИРОВАТЬ ПО
		|	ФронтРаботОбороты.ТарифнаяСтавка,
		|	ФронтРаботОбороты.ПланРабот,
		|	ФронтРаботОбороты.ПланРабот.Номер,
		|	ФронтРаботОбороты.ТарифнаяСтавка.Артикул
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПланРаботНомер";
		
		
	Запрос.УстановитьПараметр("Подразделение", 				Подразделение );
	Запрос.УстановитьПараметр("Месяц", 						НачалоМесяца( Месяц.Дата ));
	
	// если посетили по закрытому плану работ
	тзДополнительныхПлановРабот = ПосещенияКонтрагентов.Выгрузить(,"ПланРаботТиражный");
	тзДополнительныхПлановРабот.Свернуть("ПланРаботТиражный");
	
	Запрос.УстановитьПараметр("ДополнительныеПланыРабот", 	тзДополнительныхПлановРабот.ВыгрузитьКолонку("ПланРаботТиражный") );
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	// если посещения были по номенклатуре, не включенной в план (в фронт работ ) то надо их добавить
	// по результатам посещений
	ОбновитьПоПосещениям( РезультатЗапроса );
	РезультатЗапроса.Сортировать("ПланРаботНомер,Артикул");
	
	ФронтРаботПоПланамРабот.Загрузить( РезультатЗапроса );
	
КонецПроцедуры


&НаСервере
Процедура ОбновитьПоПосещениям( РезультатЗапроса )
	
	тзПосещения = ПосещенияКонтрагентов.Выгрузить();
	тзПосещения.Свернуть("ПланРаботТиражный,Номенклатура", "");
	Для Каждого СтрПосещения ИЗ тзПосещения Цикл
		Отбор = Новый Структура("ПланРаботТиражный,Номенклатура", СтрПосещения.ПланРаботТиражный, СтрПосещения.Номенклатура);
		Строк = РезультатЗапроса.НайтиСтроки( Отбор );
		Если Строк.Количество() = 0 Тогда
			СтрРез = РезультатЗапроса.Добавить();
			ЗаполнитьЗначенияСвойств( СтрРез, СтрПосещения );
			// дополнительно
			СтрРез.Артикул 				= СтрПосещения.Номенклатура.Артикул;
			СтрРез.Закрыт				= СтрПосещения.ПланРаботТиражный.Закрыт;
			СтрРез.ПланРаботНомер		= СтрПосещения.ПланРаботТиражный.Номер;
			СтрРез.КоличествоПлан		= 0;
			СтрРез.КоличествоПланМесяц	= 0;
			СтрРез.КоличествоФакт		= 0;
			СтрРез.ОстатокПлан			= 0;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПосещений()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПосещенияКонтрагентов.ПредметПосещения КАК ПланРаботТиражный,
		|	ПосещенияКонтрагентов.Уточнение КАК Номенклатура,
		|	ПосещенияКонтрагентов.ФизическоеЛицо,
		|	СУММА(ВЫБОР
		|			КОГДА ПосещенияКонтрагентов.Отработано
		|				ТОГДА 0
		|			ИНАЧЕ ПосещенияКонтрагентов.Количество
		|		КОНЕЦ) КАК КоличествоНеОтработано,
		|	СУММА(ВЫБОР
		|			КОГДА ПосещенияКонтрагентов.Отработано
		|				ТОГДА ПосещенияКонтрагентов.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоОтработано
		|ИЗ
		|	Справочник.ПосещенияКонтрагентов КАК ПосещенияКонтрагентов
		|ГДЕ
		|	НЕ ПосещенияКонтрагентов.ПометкаУдаления
		|	И ПосещенияКонтрагентов.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
		|	И ПосещенияКонтрагентов.ПредметПосещения.Подразделение = &Подразделение
		|	И ПосещенияКонтрагентов.Количество <> 0
		|	И ТИПЗНАЧЕНИЯ(ПосещенияКонтрагентов.ПредметПосещения) = ТИП(Документ.ПланРаботТиражный)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПосещенияКонтрагентов.ПредметПосещения,
		|	ПосещенияКонтрагентов.Уточнение,
		|	ПосещенияКонтрагентов.ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("НачалоМесяца", 	НачалоМесяца(Месяц.Дата));
	Запрос.УстановитьПараметр("КонецМесяца", 	КонецМесяца(Месяц.Дата));
	Запрос.УстановитьПараметр("Подразделение", 	Подразделение);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	ПосещенияКонтрагентов.Загрузить( РезультатЗапроса );
	
	
КонецПроцедуры

// сотрудников подразделения не берем
// 2. исполнители задач проектов
// 3. посетившие по планам работ
// 4. имеющие контрагентов посещений по планам работ
&НаСервере
Процедура ЗаполнитьИсполнителей()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПланРаботТиражный.ЗадачаПроекта
		|ПОМЕСТИТЬ ВТ_ЗадачиПоПланамРабот
		|ИЗ
		|	Документ.ПланРаботТиражный КАК ПланРаботТиражный
		|ГДЕ
		|	НЕ ПланРаботТиражный.Закрыт
		|	И ПланРаботТиражный.Подразделение = &Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗадачиПроектовИсполнители.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ИсполнителиЗадач
		|ИЗ
		|	Справочник.ЗадачиПроектов.Исполнители КАК ЗадачиПроектовИсполнители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗадачиПоПланамРабот КАК ВТ_ЗадачиПоПланамРабот
		|		ПО ЗадачиПроектовИсполнители.Ссылка = ВТ_ЗадачиПоПланамРабот.ЗадачаПроекта
		|ГДЕ
		|	ЗадачиПроектовИсполнители.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтрагентыПосещений.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ИсполнителиКонтрагентыПосещений
		|ИЗ
		|	РегистрСведений.КонтрагентыПосещений КАК КонтрагентыПосещений
		|ГДЕ
		|	НЕ КонтрагентыПосещений.ПредметПосещения.Закрыт
		|	И ТИПЗНАЧЕНИЯ(КонтрагентыПосещений.ПредметПосещения) = ТИП(Документ.ПланРаботТиражный)
		|	И КонтрагентыПосещений.ПредметПосещения.Подразделение = &Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсполнителиПосещений.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ИсполнителиПосещений
		|ИЗ
		|	&ИсполнителиПосещений КАК ИсполнителиПосещений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИсполнителиЗадач.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ВсеФизическиеЛица
		|ИЗ
		|	ВТ_ИсполнителиЗадач КАК ВТ_ИсполнителиЗадач
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ИсполнителиКонтрагентыПосещений.ФизическоеЛицо
		|ИЗ
		|	ВТ_ИсполнителиКонтрагентыПосещений КАК ВТ_ИсполнителиКонтрагентыПосещений
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ИсполнителиПосещений.ФизическоеЛицо
		|ИЗ
		|	ВТ_ИсполнителиПосещений КАК ВТ_ИсполнителиПосещений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ВсеФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТ_ВсеФизическиеЛица.ФизическоеЛицо.Наименование КАК ФизическоеЛицоНаименование
		|ИЗ
		|	ВТ_ВсеФизическиеЛица КАК ВТ_ВсеФизическиеЛица
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицоНаименование";
	
	Запрос.УстановитьПараметр("Подразделение", 			Подразделение);
	Запрос.УстановитьПараметр("ИсполнителиПосещений",	ПосещенияКонтрагентов.Выгрузить(,"ФизическоеЛицо"));
	
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	ИсполнителиПлановРабот.Загрузить( РезультатЗапроса );
	

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеДляОтчета()
	// сначала посещения
	ЗаполнитьДанныеПосещений();
	// в планы работ включаем все из посещений
	ЗаполнитьДанныеПлановРабот();
	// в исполнителей не включаем сотрудников?
	ЗаполнитьИсполнителей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТекущиеДанные(Команда)
	ЗаполнитьДанныеДляОтчета();
	
КонецПроцедуры

#КонецОбласти

#Область ВыводОтчета

&НаСервере
Процедура ВывестиШапку( Макет, ТаблицаРезультат )
	ПрефиксСтроки = "Шапка";
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ПланыРабот");
	Область.Параметры.МесяцПланирования = Формат( Месяц.Дата, "ДФ=MM.yyyy");
	ТаблицаРезультат.Вывести( Область );
	
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ИсполнителиНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого Исполнитель ИЗ ИсполнителиПлановРабот Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Исполнитель");
		ЗаполнитьЗначенияСвойств( Область.Параметры, Исполнитель );
		
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПосещенияПоПлануРабот( ПланРаботТиражный, Номенклатура )
	Отбор = Новый Структура;
	Отбор.Вставить("ПланРаботТиражный", ПланРаботТиражный );
	Отбор.Вставить("Номенклатура", 		Номенклатура);
	ПосещенияПоПлануРабот = ПосещенияКонтрагентов.Выгрузить( Отбор );
	Возврат ПосещенияПоПлануРабот;
КонецФункции

&НаСервере
Функция ПланИсполнителяПоПлануРабот( ПланРаботТиражный, Номенклатура, ФизическоеЛицо)
	Если ПланРаботТиражный.Номер = 650 Тогда
		с=4;
	КонецЕсли;
	Отбор = Новый Структура;
	Отбор.Вставить("ПланРаботТиражный", ПланРаботТиражный);
	Отбор.Вставить("Номенклатура", 		Номенклатура);
	Отбор.Вставить("ФизическоеЛицо", 	ФизическоеЛицо);
	мСтрок = ПосещенияКонтрагентов.НайтиСтроки( Отбор );
	Если мСтрок.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	
	возврат мСтрок[0].КоличествоОтработано + мСтрок[0].КоличествоНеОтработано;
		
КонецФункции                                                                                  


&НаСервере
Функция ПланИсполнителяВсего( ФизическоеЛицо)
	Отбор = Новый Структура;
	Отбор.Вставить("ФизическоеЛицо", 	ФизическоеЛицо);
	ПосещенияФЛ = ПосещенияКонтрагентов.Выгрузить( Отбор );
	Возврат ПосещенияФЛ.Итог("КоличествоОтработано") + ПосещенияФЛ.Итог("КоличествоНеОтработано");
КонецФункции

//&НаСервере
//Функция ПланПоПлануРабот( ПланРаботТиражный )
//	Отбор = Новый Структура;
//	Отбор.Вставить("ПланРаботТиражный", 	ПланРаботТиражный);
//	ПосещенияПР = ПосещенияКонтрагентов.Выгрузить( Отбор );
//	Возврат ПосещенияФЛ.Итог("КоличествоОтработано") + ПосещенияФЛ.Итог("КоличествоНеОтработано");
//КонецФункции


&НаСервере
Процедура ВывестиСтрокуПоПлануРабот( НомерПоПорядку, СтрокаПланаРабот, Макет, ТаблицаРезультат )
	// потом вынесем на форму
	ТолькоСдвижениемПоПредмету = Истина;
	// показатели строки плана работ
	ПланРабот		= СтрокаПланаРабот.ПланРаботТиражный;
	Номенклатура    = СтрокаПланаРабот.Номенклатура;
	// запланированные и отработанные посещения
	Посещения		= ПосещенияПоПлануРабот( ПланРабот, Номенклатура );
	
	ПрефиксСтроки = "ПланРабот";
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки+ "|ПланыРабот");
	// 
	ЗаполнитьЗначенияСвойств( Область.Параметры, СтрокаПланаРабот );
	Область.Параметры.НомерПоПорядку 	= НомерПоПорядку;
	НомерПоПорядку						= НомерПоПорядку + 1;
	//ПланРабот			= СтрокаПланаРабот.ПланРабот;
	Область.Параметры.ПланРабот			= ПланРабот;
	Область.Параметры.НомерПланаРабот 	= ПланРабот.Номер;
	ЗадачаПроекта 						= ПланРабот.ЗадачаПроекта;
	КодПроекта 							= ЗадачаПроекта.Владелец.Код;
	Область.Параметры.ЗадачаПроекта		= ЗадачаПроекта;
	Область.Параметры.НазваниеЗадачи 	= КодПроекта + ", " + ЗадачаПроекта;
	СтрокаПланаРабот.Контрагент			= УП_ПланыРаботПоПроектам.КонтрагентЗадачиПроекта( ЗадачаПроекта );
	Область.Параметры.Контрагент		= СтрокаПланаРабот.Контрагент;
	Область.Параметры.МнемоКонтрагента	= УП_ПланыРаботПоПроектам.МнемоКодКонтрагента( СтрокаПланаРабот.Контрагент );
	// 
	Область.Параметры.Номенклатура		= Номенклатура;
	Область.Параметры.Артикул			= Номенклатура.Артикул;
	//
	Область.Параметры.КоличествоПосещения	= Посещения.Итог("КоличествоНеОтработано")+Посещения.Итог("КоличествоОтработано");
	Область.Параметры.Отклонение			= Область.Параметры.КоличествоПланМесяц - Область.Параметры.КоличествоПосещения; 
	ТаблицаРезультат.Вывести( Область );
	
	//
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки+ "|ИсполнителиНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого Исполнитель ИЗ ИсполнителиПлановРабот Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки+ "|Исполнитель");
		Область.Параметры.ПланИсполнителя = ПланИсполнителяПоПлануРабот( 
							ПланРабот, 
							Номенклатура, 
							Исполнитель.ФизическоеЛицо);
							
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
	
	Если СтрокаПланаРабот.Закрыт Тогда
		ОблСтрока = ТаблицаРезультат.Область(ТаблицаРезультат.ВысотаТаблицы,1,ТаблицаРезультат.ВысотаТаблицы, ТаблицаРезультат.ШиринаТаблицы);
		ОблСтрока.ЦветФона = ЦветаСтиля.НедоступныеДанныеЦвет;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиИтогиПоПлануРабот( Макет, ТаблицаРезультат )
	ПрефиксСтроки = "ИтогоПоПланамРабот";
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ПланыРабот");
	//
	Если ПосещенияКонтрагентов.Количество() <> 0 Тогда
		тзФР = ФронтРаботПоПланамРабот.Выгрузить();
		тзФР.Свернуть("","КоличествоПлан,ОстатокПлан,КоличествоПланМесяц");
		ЗаполнитьЗначенияСвойств( Область.Параметры, тзФР[0]);
		Область.Параметры.КоличествоПосещения	= 	ПосещенияКонтрагентов.Итог("КоличествоНеОтработано")+
											  		ПосещенияКонтрагентов.Итог("КоличествоОтработано");
													
		Область.Параметры.Отклонение			= Область.Параметры.КоличествоПланМесяц - Область.Параметры.КоличествоПосещения; 
													
	КонецЕсли;	
	ТаблицаРезультат.Вывести( Область );
	
	//
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки +"|ИсполнителиНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого Исполнитель ИЗ ИсполнителиПлановРабот Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки +"|Исполнитель");
		Область.Параметры.ПланИсполнителя = ПланИсполнителяВсего( Исполнитель.ФизическоеЛицо);
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
	
КонецПроцедуры


&НаСервере
Процедура ПодготовитьОтчет( ТаблицаРезультат, ОчищатьДокумент = Истина )
	Если ОчищатьДокумент Тогда
		ТаблицаРезультат.Очистить();
	КонецЕсли;
	Макет 	= РеквизитФормыВЗначение("Объект").ПолучитьМакет("План");
	ВывестиШапку( Макет, ТаблицаРезультат );
	
	// выводим по планам работ
	НомерПоПорядку 	= 1;
	Для Каждого СтрокаПланаРабот ИЗ ФронтРаботПоПланамРабот Цикл
		ВывестиСтрокуПоПлануРабот( НомерПоПорядку, СтрокаПланаРабот, Макет, ТаблицаРезультат );
	КонецЦикла;
	
	
	Если ФронтРаботПоПланамРабот.Количество() <> 0 Тогда
		// итог по планам работ
		ВывестиИтогиПоПлануРабот( Макет, ТаблицаРезультат );
	КонецЕсли;	
	
	// скроллинг
	ТаблицаРезультат.ФиксацияСверху 	= 2;
	ТаблицаРезультат.ФиксацияСлева  	= 9;
	ТаблицаРезультат.АвтоМасштаб		= Истина;
	ТаблицаРезультат.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьПланНаМесяц(Команда)
	ЗаполнитьДанныеДляОтчета();
	ПодготовитьОтчет( ПланНаМесяц );
КонецПроцедуры

#КонецОбласти

#Область Интерактив

&НаКлиенте
Процедура ДобавитьПосещение(Команда)
	// индексы физ.лица и плана работ
	ИндексПлана = ПланНаМесяц.ТекущаяОбласть.Низ-3;
	ИндексФЛ 	= ПланНаМесяц.ТекущаяОбласть.Лево-11;
	Если ИндексПлана <0 ИЛИ ИндексПлана > ФронтРаботПоПланамРабот.Количество() Тогда
		ПоказатьПредупреждение(,"Не указан план работ", 10);
		Возврат;
	КонецЕсли;
	Если ИндексФЛ < 0 ИЛИ ИндексФЛ > ИсполнителиПлановРабот.Количество() Тогда
		ПоказатьПредупреждение(,"Не указан исполнитель", 10);
		Возврат;
	КонецЕсли;
	ДатаПосещения = ДатаСоздаваемогоПосещения( Месяц );
	Если ДатаПосещения = Неопределено Тогда
		ПоказатьПредупреждение(,"Период планирования закрыт для посещений", 10);
		Возврат;
	КонецЕсли;
	Контрагент 			= ФронтРаботПоПланамРабот[ИндексПлана].Контрагент;
	Если НЕ ЗначениеЗаполнено( Контрагент ) Тогда
		ПоказатьПредупреждение(,"Не указан контрагент для плана работ", 10);
		Возврат;
	КонецЕсли;		
	
	ПланРаботТиражный 	= ФронтРаботПоПланамРабот[ИндексПлана].ПланРаботТиражный;
	ФизическоеЛицо		= ИсполнителиПлановРабот[ИндексФЛ].ФизическоеЛицо;
	Уточнение			= ФронтРаботПоПланамРабот[ИндексПлана].Номенклатура;
	
	РеквизитыПосещения = Новый Структура;
	РеквизитыПосещения.Вставить("Подразделение", 	Подразделение );
	РеквизитыПосещения.Вставить("Контрагент", 		Контрагент );
	РеквизитыПосещения.Вставить("ПредметПосещения", ПланРаботТиражный );
	РеквизитыПосещения.Вставить("Уточнение", 		Уточнение );
	РеквизитыПосещения.Вставить("ФизическоеЛицо", 	ФизическоеЛицо );
	РеквизитыПосещения.Вставить("Дата", 			ДатаПосещения );
	РеквизитыПосещения.Вставить("Количество", 		1 );
	РеквизитыПосещения.Вставить("Часов",			ПродолжительностьНоменклатуры( Уточнение ));
	
	ОпОповещения = Новый ОписаниеОповещения("ПослеЗакрытияВопросаОДобавлении", ЭтаФорма, РеквизитыПосещения );
	ПоказатьВопрос(ОпОповещения,"Добавить посещение " + Символы.ПС + 
								 ПланРаботТиражный + Символы.ПС +
								ФизическоеЛицо +  "?", РежимДиалогаВопрос.ДаНет, 0);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПродолжительностьНоменклатуры( Номенклатура )
	Возврат УП_РаботаСРабочимКалендаремСервер.ПродолжительностьПосещенияНоменклатуры( Номенклатура );
КонецФункции

&НаСервереБезКонтекста
Функция ДатаСоздаваемогоПосещения( Месяц )
	// 
	Возврат УП_РаботаСРабочимКалендаремСервер.ДатаСоздаваемогоПосещения( Месяц.Дата );
	
	//Если КонецМесяца( Месяц.Дата ) < НачалоМесяцаПосещений() Тогда
	//	Возврат Неопределено;
	//КонецЕсли;
	//// если текущая дата попадает в период планирования
	//
	//Если ДатаМежду( ТекущаяДата(), НачалоМесяца(Месяц.Дата), КонецМесяца( Месяц.Дата )) Тогда
	//	ДатаПосещения = ТекущаяДата();
	//Иначе
	//	ДатаПосещения = КонецМесяца( Месяц.Дата );
	//КонецЕсли;
	//СекундВЧасе = 60 * 60;
	//ДатаПосещения = НачалоДня( ДатаПосещения ) + 9 * СекундВЧасе;
	//Возврат ДатаПосещения;
КонецФункции

&НаКлиенте
Процедура ПослеЗакрытияВопросаОДобавлении( Результат, РеквизитыПосещения )   Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПараметрыПосещения = Новый Структура;
		ПараметрыПосещения.Вставить("НачальникПодразделения", 	Истина );
		ПараметрыПосещения.Вставить("РеквизитыПосещения", РеквизитыПосещения );
		ОткрытьФорму("Справочник.ПосещенияКонтрагентов.Форма.ФормаЭлемента", ПараметрыПосещения, ЭтаФорма, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если 		ИмяСобытия = "ИзмененоПосещение" Тогда
		// пока все, хотя можно только посещения
		ЗаполнитьДанныеДляОтчета();
		ПодготовитьОтчет(ПланНаМесяц);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти