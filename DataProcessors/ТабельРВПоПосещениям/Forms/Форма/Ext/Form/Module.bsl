#Область ПолучениеТекущихДанных

&НаСервере
Функция ПериодТабеля()	
	ПериодТабеля = Новый СтандартныйПериод;
	ПериодТабеля.ДатаНачала = НачалоМесяца( Месяц.Дата);
	ПериодТабеля.ДатаОкончания = КонецМесяца( Месяц.Дата );
	Возврат ПериодТабеля;
КонецФункции

&НаСервере
Процедура ЗаполнитьДанныеПосещений()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПосещенияКонтрагентов.ПредметПосещения,
		|	ПосещенияКонтрагентов.Уточнение,
		|	ПосещенияКонтрагентов.ФизическоеЛицо,
		|	СУММА(ВЫБОР
		|			КОГДА ПосещенияКонтрагентов.Отработано
		|				ТОГДА 0
		|			ИНАЧЕ ПосещенияКонтрагентов.Часов
		|		КОНЕЦ) КАК ЧасовНеОтработано,
		|	СУММА(ВЫБОР
		|			КОГДА ПосещенияКонтрагентов.Отработано
		|				ТОГДА ПосещенияКонтрагентов.Часов
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЧасовОтработано,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ПосещенияКонтрагентов.ПредметПосещения) = ТИП(Документ.ПланРаботТиражный)
		|			ТОГДА 0
		|		КОГДА ТИПЗНАЧЕНИЯ(ПосещенияКонтрагентов.ПредметПосещения) = ТИП(Документ.ПланРабот)
		|			ТОГДА 1
		|		КОГДА ТИПЗНАЧЕНИЯ(ПосещенияКонтрагентов.ПредметПосещения) = ТИП(Справочник.Номенклатура)
		|			ТОГДА 2
		|		КОГДА ТИПЗНАЧЕНИЯ(ПосещенияКонтрагентов.ПредметПосещения) = ТИП(Справочник.ОтметкиТабеля)
		|			ТОГДА 9
		|		ИНАЧЕ 3
		|	КОНЕЦ КАК ТипПредмета,
		|	ПосещенияКонтрагентов.Контрагент
		|ИЗ
		|	Справочник.ПосещенияКонтрагентов КАК ПосещенияКонтрагентов
		|ГДЕ
		|	НЕ ПосещенияКонтрагентов.ПометкаУдаления
		|	И ПосещенияКонтрагентов.Дата МЕЖДУ &НачалоМесяца И &КонецМесяца
		|	И ПосещенияКонтрагентов.Подразделение = &Подразделение
		|	И ПосещенияКонтрагентов.Часов <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ПосещенияКонтрагентов.ПредметПосещения,
		|	ПосещенияКонтрагентов.Уточнение,
		|	ПосещенияКонтрагентов.ФизическоеЛицо,
		|	ПосещенияКонтрагентов.Контрагент";
	
	Запрос.УстановитьПараметр("НачалоМесяца", 	НачалоМесяца(Месяц.Дата));
	Запрос.УстановитьПараметр("КонецМесяца", 	КонецМесяца(Месяц.Дата));
	Запрос.УстановитьПараметр("Подразделение", 	Подразделение);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	ПосещенияКонтрагентов.Загрузить( РезультатЗапроса );
	
	
КонецПроцедуры

// по планам работ и планам работ тиражным
&НаСервере
Процедура ЗаполнитьДанныеПлановРабот()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФронтРаботОбороты.ПланРабот КАК ПредметПосещения,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ФронтРаботОбороты.ПланРабот) = ТИП(Документ.ПланРаботТиражный)
		|			ТОГДА ФронтРаботОбороты.ТарифнаяСтавка
		|		ИНАЧЕ ФронтРаботОбороты.Должность
		|	КОНЕЦ КАК Уточнение,
		|	СУММА(ВЫБОР
		|			КОГДА ФронтРаботОбороты.ТипСуммы = 0
		|				ТОГДА ВЫБОР
		|						КОГДА ТИПЗНАЧЕНИЯ(ФронтРаботОбороты.ПланРабот) = ТИП(Документ.ПланРаботТиражный)
		|							ТОГДА ФронтРаботОбороты.КоличествоОборот * ФронтРаботОбороты.ТарифнаяСтавка.Продолжительность
		|						ИНАЧЕ ФронтРаботОбороты.КоличествоОборот
		|					КОНЕЦ
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЧасовПлан,
		|	ФронтРаботОбороты.ПланРабот.ЗадачаПроекта КАК ЗадачаПроекта,
		|	ФронтРаботОбороты.ПланРабот.Номер КАК ПредметНомер,
		|	ФронтРаботОбороты.ПланРабот.Закрыт КАК Закрыт,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ФронтРаботОбороты.ПланРабот) = ТИП(Документ.ПланРаботТиражный)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК ТипПредмета,
		|	ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.Владелец КАК Проект,
		|	ВЫБОР
		|		КОГДА ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.Владелец.Контрагент
		|		ИНАЧЕ ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.Контрагент
		|	КОНЕЦ КАК Контрагент,
		|	ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.Владелец.Код КАК КодПроекта
		|ИЗ
		|	РегистрНакопления.ФронтРабот.Обороты КАК ФронтРаботОбороты
		|ГДЕ
		|	ФронтРаботОбороты.ПланРабот.Ссылка В(&ДополнительныеПланыРабот)
		|	И ФронтРаботОбороты.Месяц = &Месяц
		|
		|СГРУППИРОВАТЬ ПО
		|	ФронтРаботОбороты.ПланРабот,
		|	ФронтРаботОбороты.ПланРабот.Номер,
		|	ФронтРаботОбороты.ПланРабот.Закрыт,
		|	ФронтРаботОбороты.ПланРабот.ЗадачаПроекта,
		|	ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.Владелец,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ФронтРаботОбороты.ПланРабот) = ТИП(Документ.ПланРаботТиражный)
		|			ТОГДА ФронтРаботОбороты.ТарифнаяСтавка
		|		ИНАЧЕ ФронтРаботОбороты.Должность
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ФронтРаботОбороты.ПланРабот) = ТИП(Документ.ПланРаботТиражный)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.Контрагент = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		|			ТОГДА ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.Владелец.Контрагент
		|		ИНАЧЕ ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.Контрагент
		|	КОНЕЦ,
		|	ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.Владелец.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПредметНомер";
		
		
	Запрос.УстановитьПараметр("Подразделение", 				Подразделение );
	Запрос.УстановитьПараметр("Месяц", 						НачалоМесяца( Месяц.Дата ));
	
	// если посетили по закрытому плану работ
	тзДополнительныхПлановРабот = ПосещенияКонтрагентов.Выгрузить(,"ПредметПосещения");
	тзДополнительныхПлановРабот.Свернуть("ПредметПосещения");
	//
	Запрос.УстановитьПараметр("ДополнительныеПланыРабот", 	тзДополнительныхПлановРабот.ВыгрузитьКолонку("ПредметПосещения") );
	//
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	//// если посещения были по номенклатуре, не включенной в план (в фронт работ ) то надо их добавить
	//// по результатам посещений
	//ОбновитьПоПосещениям( РезультатЗапроса );
	//РезультатЗапроса.Сортировать("ТипПредмета,ПланРаботНомер,Уточнение");
	//
	ФронтРаботПоПланамРабот.Загрузить( РезультатЗапроса );
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИсполнителей()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПланРаботТиражный.ЗадачаПроекта
		|ПОМЕСТИТЬ ВТ_ЗадачиПоПланамРабот
		|ИЗ
		|	Документ.ПланРаботТиражный КАК ПланРаботТиражный
		|ГДЕ
		|	НЕ ПланРаботТиражный.Закрыт
		|	И ПланРаботТиражный.Подразделение = &Подразделение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПланРабот.ЗадачаПроекта
		|ИЗ
		|	Документ.ПланРабот КАК ПланРабот
		|ГДЕ
		|	НЕ ПланРабот.Закрыт
		|	И ПланРабот.Подразделение = &Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗадачиПроектовИсполнители.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ИсполнителиЗадач
		|ИЗ
		|	Справочник.ЗадачиПроектов.Исполнители КАК ЗадачиПроектовИсполнители
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ЗадачиПоПланамРабот КАК ВТ_ЗадачиПоПланамРабот
		|		ПО ЗадачиПроектовИсполнители.Ссылка = ВТ_ЗадачиПоПланамРабот.ЗадачаПроекта
		|ГДЕ
		|	ЗадачиПроектовИсполнители.ФизическоеЛицо <> ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КонтрагентыПосещений.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ИсполнителиКонтрагентыПосещений
		|ИЗ
		|	РегистрСведений.КонтрагентыПосещений КАК КонтрагентыПосещений
		|ГДЕ
		|	КонтрагентыПосещений.ПредметПосещения.Подразделение = &Подразделение
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИсполнителиПосещений.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ИсполнителиПосещений
		|ИЗ
		|	&ИсполнителиПосещений КАК ИсполнителиПосещений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ИсполнителиЗадач.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_ВсеФизическиеЛица
		|ИЗ
		|	ВТ_ИсполнителиЗадач КАК ВТ_ИсполнителиЗадач
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ИсполнителиКонтрагентыПосещений.ФизическоеЛицо
		|ИЗ
		|	ВТ_ИсполнителиКонтрагентыПосещений КАК ВТ_ИсполнителиКонтрагентыПосещений
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ИсполнителиПосещений.ФизическоеЛицо
		|ИЗ
		|	ВТ_ИсполнителиПосещений КАК ВТ_ИсполнителиПосещений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ВсеФизическиеЛица.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТ_ВсеФизическиеЛица.ФизическоеЛицо.Наименование КАК ФизическоеЛицоНаименование
		|ИЗ
		|	ВТ_ВсеФизическиеЛица КАК ВТ_ВсеФизическиеЛица
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицоНаименование";
	
	Запрос.УстановитьПараметр("Подразделение", 			Подразделение);
	Запрос.УстановитьПараметр("ИсполнителиПосещений",	ПосещенияКонтрагентов.Выгрузить(,"ФизическоеЛицо"));
	
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	РезультатЗапроса.Сортировать( "ФизическоеЛицоНаименование");
	ИсполнителиПлановРабот.Загрузить( РезультатЗапроса );
	

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеДляОтчета()
	// сначала посещения
	ЗаполнитьДанныеПосещений();
	// в планы работ включаем все из посещений
	ЗаполнитьДанныеПлановРабот();
	// в исполнителей не включаем сотрудников?
	ЗаполнитьИсполнителей();
	
КонецПроцедуры

#КонецОбласти

#Область ВыводОтчета

&НаСервере
Процедура ВывестиШапку( Макет, ТаблицаРезультат, Уточнения, ФизическиеЛица, НормаЧасов )
	ПрефиксСтроки = "Шапка";
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ПредметПосещения");
	// шаблон
	ПериодТабеля = ПериодТабеля();
	Область.Параметры.ПериодТабеля 		= ПредставлениеПериода( ПериодТабеля.ДатаНачала,	ПериодТабеля.ДатаОкончания,"ФП=Истина" );
	Область.Параметры.Подразделение 	= Подразделение;
	Область.Параметры.СоставОтработано 	= "(" + ?(ТолькоОтработанные, "отработанные", "включая не отработанные") + ")";
	Область.Параметры.НормаЧасов  		= НормаЧасов;
	ТаблицаРезультат.Вывести( Область );
	
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|УточненияНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого Уточнение ИЗ Уточнения Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Уточнение");
		Область.Параметры.Уточнение = Уточнение;
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ИсполнителиНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого ФизическоеЛицо ИЗ ФизическиеЛица Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Исполнитель");
		Область.Параметры.ФизическоеЛицо = ФизическоеЛицо;
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция НазваниеТипаПредмета( ТипПредмета )
	Если 		ТипПредмета = 0 Тогда
		Возврат "Планы работ (тиражные)";
	ИначеЕсли 	ТипПредмета = 1 Тогда
		Возврат "Планы работ";
	ИначеЕсли 	ТипПредмета = 9 Тогда
		Возврат "Отметки табеля рабочего времени";
	КонецЕсли;
	Возврат "Не определен";
КонецФункции


&НаСервере
Процедура ВывестиСтрокуШапкиПредметПосещения( ТипПредмета, Макет, ТаблицаРезультат, Уточнения, ФизическиеЛица )
	ПрефиксСтроки	= "ТипПредметаПосещения";
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ПредметПосещения");
	Область.Параметры.ТипПредметаПосещения = НазваниеТипаПредмета( ТипПредмета );
	ТаблицаРезультат.Вывести( Область );
	
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|УточненияНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого Уточнение ИЗ Уточнения Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Уточнение");
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ИсполнителиНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого ФизическоеЛицо ИЗ ФизическиеЛица Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Исполнитель");
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВывестиСтрокиПредметСУточнением(Макет, ТаблицаРезультат,  Уточнения, ФизическиеЛица, ПредметыПосещения )
	ПрефиксСтроки	= "ПредметСУточнением";
	НомерПоПорядку	= 1;
	
	Для Каждого СтрПредметПосещения ИЗ ПредметыПосещения Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ПредметПосещения");
		ЗаполнитьЗначенияСвойств( Область.Параметры, СтрПредметПосещения );
		Область.Параметры.НомерПоПорядку = НомерПоПорядку;
		НомерПоПорядку	= НомерПоПорядку + 1;
		ТаблицаРезультат.Вывести( Область );
		
		
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|УточненияНачало");
		ТаблицаРезультат.Присоединить( Область );
		Для Каждого Уточнение ИЗ Уточнения Цикл
			Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Уточнение");
			Область.Параметры.ПланЧасов = ЧасовПосещенийПоПредмету( Уточнение, СтрПредметПосещения.ПредметПосещения);
			ТаблицаРезультат.Присоединить( Область );
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ИсполнителиНачало");
		ТаблицаРезультат.Присоединить( Область );
		Для Каждого ФизическоеЛицо ИЗ ФизическиеЛица Цикл
			Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Исполнитель");
			Область.Параметры.Часов = ЧасовПосещенийИсполнителяПоПредмету( ФизическоеЛицо, СтрПредметПосещения.ПредметПосещения );
			ТаблицаРезультат.Присоединить( Область );
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры


&НаСервере
Процедура ВывестиСтрокиПредметБезУточнения(Макет, ТаблицаРезультат,  Уточнения, ФизическиеЛица, ПредметыПосещения )
	ПрефиксСтроки	= "ПредметБезУточнения";
	НомерПоПорядку	= 1;
	
	Для Каждого СтрПредметПосещения ИЗ ПредметыПосещения Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ПредметПосещения");
		ЗаполнитьЗначенияСвойств( Область.Параметры, СтрПредметПосещения );
		Область.Параметры.НомерПоПорядку = НомерПоПорядку;
		НомерПоПорядку	= НомерПоПорядку + 1;
		ТаблицаРезультат.Вывести( Область );
		
		
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|УточненияНачало");
		ТаблицаРезультат.Присоединить( Область );
		Для Каждого Уточнение ИЗ Уточнения Цикл
			Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Уточнение");
			ТаблицаРезультат.Присоединить( Область );
		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ИсполнителиНачало");
		ТаблицаРезультат.Присоединить( Область );
		Для Каждого ФизическоеЛицо ИЗ ФизическиеЛица Цикл
			Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Исполнитель");
			Область.Параметры.Часов = ЧасовПосещенийИсполнителяПоПредмету( ФизическоеЛицо, СтрПредметПосещения.ПредметПосещения,, СтрПредметПосещения.Контрагент);
			ТаблицаРезультат.Присоединить( Область );
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры

&НаСервере
Процедура ВывестиСтрокиИтогоПредметСУточнением(ТипПредмета, Макет, ТаблицаРезультат,  Уточнения, ФизическиеЛица, ПредметыПосещения )
	ПрефиксСтроки	= "ИтогоПредметСУточнением";
	
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ПредметПосещения");
	Область.Параметры.ТипПредметаПосещения = НазваниеТипаПредмета( ТипПредмета );
	ТаблицаРезультат.Вывести( Область );
	
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|УточненияНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого Уточнение ИЗ Уточнения Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Уточнение");
		Область.Параметры.ПланЧасов = ЧасовПосещенийПоПредмету(Уточнение, , ТипПредмета);
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ИсполнителиНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого ФизическоеЛицо ИЗ ФизическиеЛица Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Исполнитель");
		Область.Параметры.Часов = ЧасовПосещенийИсполнителяПоПредмету( ФизическоеЛицо,, ТипПредмета );
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВывестиСтрокиИтогоПредметБезУточнения(ТипПредмета, Макет, ТаблицаРезультат,  Уточнения, ФизическиеЛица, ПредметыПосещения  );	
	ПрефиксСтроки	= "ИтогоПредметБезУточнения";
	
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ПредметПосещения");
	Область.Параметры.ТипПредметаПосещения = НазваниеТипаПредмета( ТипПредмета );
	ТаблицаРезультат.Вывести( Область );
	
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|УточненияНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого Уточнение ИЗ Уточнения Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Уточнение");
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ИсполнителиНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого ФизическоеЛицо ИЗ ФизическиеЛица Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Исполнитель");
		Область.Параметры.Часов = ЧасовПосещенийИсполнителяПоПредмету( ФизическоеЛицо,, ТипПредмета );
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВывестиСтрокиИтого( НормаЧасов, Макет, ТаблицаРезультат,  Уточнения, ФизическиеЛица  )
	ПрефиксСтроки	= "Итого";
	
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ПредметПосещения");
	ТаблицаРезультат.Вывести( Область );
	
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|УточненияНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого Уточнение ИЗ Уточнения Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Уточнение");
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|ИсполнителиНачало");
	ТаблицаРезультат.Присоединить( Область );
	Для Каждого ФизическоеЛицо ИЗ ФизическиеЛица Цикл
		Область = Макет.ПолучитьОбласть( ПрефиксСтроки + "|Исполнитель");
		Часов	= ЧасовПосещенийИсполнителяПоПредмету( ФизическоеЛицо );
		Область.Параметры.Часов 		= Часов;
		Область.Параметры.Отклонение 	= НормаЧасов - Часов;
		ТаблицаРезультат.Присоединить( Область );
	КонецЦикла;
КонецПроцедуры


&НаСервере
Функция ЧасовПосещенийИсполнителяПоПредмету(ФизическоеЛицо, ПредметПосещения = Неопределено, ТипПредмета = Неопределено, Контрагент = Неопределено)
	Отбор = Новый Структура;
	Если ПредметПосещения <> Неопределено Тогда
		Отбор.Вставить("ПредметПосещения", 	ПредметПосещения );
	КонецЕсли;
	Если ТипПредмета <> Неопределено Тогда
		Отбор.Вставить("ТипПредмета", 		ТипПредмета );
	КонецЕсли;
	Если Контрагент <> Неопределено Тогда
		Отбор.Вставить("Контрагент", 		Контрагент );
	КонецЕсли;
	Отбор.Вставить("ФизическоеЛицо", 	ФизическоеЛицо );
	тз = ПосещенияКонтрагентов.Выгрузить(Отбор);
	Возврат тз.Итог("ЧасовОтработано") + ?(ТолькоОтработанные, 0, тз.Итог("ЧасовНеОтработано"));
КонецФункции

&НаСервере
Функция ЧасовПосещенийПоПредмету( Уточнение, ПредметПосещения = Неопределено, ТипПредмета = Неопределено)
	Отбор = Новый Структура;
	Если ПредметПосещения <> Неопределено Тогда
		Отбор.Вставить("ПредметПосещения", 	ПредметПосещения );
	КонецЕсли;
	Если ТипПредмета <> Неопределено Тогда
		Отбор.Вставить("ТипПредмета", 		ТипПредмета );
	КонецЕсли;
	Отбор.Вставить("Уточнение", 		Уточнение );
	тз = ПосещенияКонтрагентов.Выгрузить(Отбор);
	Возврат тз.Итог("ЧасовОтработано") + ?(ТолькоОтработанные, 0, тз.Итог("ЧасовНеОтработано"));
КонецФункции

&НаСервере
Функция ПолучитьУточненияПоОтчету()
	//тз = ФронтРаботПоПланамРабот.Выгрузить(,"Уточнение");
	тз = ПосещенияКонтрагентов.Выгрузить(,"Уточнение");
	тз.Свернуть("Уточнение", "");
	тз.Сортировать("Уточнение");
	Возврат тз.ВыгрузитьКолонку("Уточнение");
КонецФункции

&НаСервере
Функция ПолучитьФизическихЛицПоОтчету()
	тз = ПосещенияКонтрагентов.Выгрузить(,"ФизическоеЛицо");
	тз.Свернуть("ФизическоеЛицо", "");
	тз.Сортировать("ФизическоеЛицо");
	Возврат тз.ВыгрузитьКолонку("ФизическоеЛицо");
КонецФункции

&НаСервере
Функция ПолучитьПредметыПосещенияПоТипуСУточнением(ТипПредмета );
	Отбор = Новый Структура("ТипПредмета", ТипПредмета);
	ПредметыПосещения = ФронтРаботПоПланамРабот.Выгрузить( Отбор );
	ПредметыПосещения.Свернуть("ПредметПосещения,ЗадачаПроекта,КодПроекта,Проект,ТипПредмета,ПредметНомер,Контрагент","ЧасовПлан");
	ПредметыПосещения.Сортировать("КодПроекта,ПредметНомер");
	
	Возврат ПредметыПосещения;
КонецФункции

&НаСервере
Функция ПолучитьПредметыПосещенияПоТипуБезУточнения(ТипПредмета );
	Отбор = Новый Структура("ТипПредмета", ТипПредмета);
	ПредметыПосещения = ПосещенияКонтрагентов.Выгрузить( Отбор );
	ПредметыПосещения.Свернуть("ПредметПосещения,ТипПредмета,Контрагент","ЧасовОтработано,ЧасовНеОтработано");
	ПредметыПосещения.Сортировать("ПредметПосещения,Контрагент");
	
	Возврат ПредметыПосещения;
КонецФункции


&НаСервере
Процедура ПодготовитьОтчет( ТаблицаРезультат, ОчищатьДокумент = Истина )
	Если ОчищатьДокумент Тогда
		ТаблицаРезультат.Очистить();
	КонецЕсли;
	НормаЧасов = УП_РаботаСРабочимКалендаремСервер.РасчитатьНормуЗаПериод( ПериодТабеля() );
	Макет 		= РеквизитФормыВЗначение("Объект").ПолучитьМакет("План");
	// массив
	Уточнения		= ПолучитьУточненияПоОтчету();
	ФизическиеЛица	= ПолучитьФизическихЛицПоОтчету();	
	ВывестиШапку( Макет, ТаблицаРезультат, Уточнения, ФизическиеЛица, НормаЧасов );
	
	// выводим по планам работ тиражным
	ТипПредмета  = 0;
	// выводим по планам работ
	ПредметыПосещения = ПолучитьПредметыПосещенияПоТипуСУточнением( ТипПредмета );
	Если ПредметыПосещения.Количество() > 0 Тогда
		ВывестиСтрокуШапкиПредметПосещения(ТипПредмета , Макет, ТаблицаРезультат, Уточнения, ФизическиеЛица );
		ВывестиСтрокиПредметСУточнением(Макет, ТаблицаРезультат,  Уточнения, ФизическиеЛица, ПредметыПосещения );
		
		// итого по планам работ тиражным
		ВывестиСтрокиИтогоПредметСУточнением(ТипПредмета, Макет, ТаблицаРезультат,  Уточнения, ФизическиеЛица, ПредметыПосещения );	
	КонецЕсли;	
	
	// выводим по планам работ
	ТипПредмета  = 1;
	ПредметыПосещения = ПолучитьПредметыПосещенияПоТипуСУточнением(ТипПредмета );
	Если ПредметыПосещения.Количество() > 0 Тогда
		ВывестиСтрокуШапкиПредметПосещения(ТипПредмета , Макет, ТаблицаРезультат, Уточнения, ФизическиеЛица );
		// выводим по планам работ
		ВывестиСтрокиПредметСУточнением(Макет, ТаблицаРезультат,  Уточнения, ФизическиеЛица, ПредметыПосещения );
		
		// итого по планам работ 
		ВывестиСтрокиИтогоПредметСУточнением(ТипПредмета, Макет, ТаблицаРезультат,  Уточнения, ФизическиеЛица, ПредметыПосещения );	
	КонецЕсли;	
	
	// выводим по номенклатуре
	ТипПредмета  = 2;
	// выводим по прочему
	ТипПредмета  = 2;
	
	// выводим по отметкам табеля
	ТипПредмета  = 9;
	ПредметыПосещения = ПолучитьПредметыПосещенияПоТипуБезУточнения(ТипПредмета );
	Если ПредметыПосещения.Количество() > 0 Тогда
		ВывестиСтрокуШапкиПредметПосещения(ТипПредмета , Макет, ТаблицаРезультат, Уточнения, ФизическиеЛица );
		
		// выводим по планам работ
		ВывестиСтрокиПредметБезУточнения(Макет, ТаблицаРезультат,  Уточнения, ФизическиеЛица, ПредметыПосещения );
		
		// итого по отметкам табеля
		ВывестиСтрокиИтогоПредметБезУточнения(ТипПредмета, Макет, ТаблицаРезультат,  Уточнения, ФизическиеЛица, ПредметыПосещения  );	
	КонецЕсли;	
	
	
	// выводим отклонения от нормы рабочего времени
	ВывестиСтрокиИтого( НормаЧасов, Макет, ТаблицаРезультат,  Уточнения, ФизическиеЛица  );	
	
	
	// скроллинг
	ТаблицаРезультат.ФиксацияСверху 	= 4;
	ТаблицаРезультат.ФиксацияСлева  	= 6 + Уточнения.Количество();
	ТаблицаРезультат.АвтоМасштаб		= Истина;
	ТаблицаРезультат.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры


&НаКлиенте
Процедура ПересчитатьТабельНаМесяц(Команда)
	ЗаполнитьДанныеДляОтчета();
	ПодготовитьОтчет( ПланНаМесяц );

КонецПроцедуры


#КонецОбласти