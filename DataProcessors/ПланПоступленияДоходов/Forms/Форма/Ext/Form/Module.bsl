
//&НаСервере
//Функция ПолучитьСтатусыПроектов()	
//	Статусы = Новый Массив;
//	Для Каждого СтПр ИЗ СтатусыПроектов Цикл
//		//Если СтПр.Пометка Тогда
//			
//			Статусы.Добавить( СтПр.Значение );
//		//КонецЕсли;
//	КонецЦикла;	
//	Возврат Статусы;
//	
//КонецФункции


&НаСервере
Функция ПолучитьЗадачиЗаГод( ГодПроекта )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗадачиПроектов.Ссылка КАК ЗадачаПроекта,
		|	ЗадачиПроектов.Владелец КАК Проект,
		|	ЗадачиПроектов.Сумма КАК СуммаЗадачи,
		|	ЗадачиПроектов.ГарантированаОплата,
		|	ЕСТЬNULL(СметаЗадачиПроектаРасчет.Сумма, ЗадачиПроектов.Сумма) КАК Сумма,
		|	ЕСТЬNULL(СметаЗадачиПроектаРасчет.Сумма, 0) КАК СуммаПоСмете,
		|	ЕСТЬNULL(ОбеспечениеОплатаОбороты.СуммаОбеспеченоОборот, 0) КАК СуммаОбеспечено
		|ПОМЕСТИТЬ ВТ_ЗадачиСуммы
		|ИЗ
		|	Справочник.ЗадачиПроектов КАК ЗадачиПроектов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СметаЗадачиПроекта.Расчет КАК СметаЗадачиПроектаРасчет
		|		ПО ЗадачиПроектов.Ссылка = СметаЗадачиПроектаРасчет.Ссылка.ЗадачаПроекта
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеОплата.Обороты КАК ОбеспечениеОплатаОбороты
		|		ПО (ОбеспечениеОплатаОбороты.ЗадачаПроекта = ЗадачиПроектов.Ссылка)
		|ГДЕ
		|	НЕ ЗадачиПроектов.ПометкаУдаления
		|	И ЗадачиПроектов.Владелец.ГодПроекта = &ГодПроекта
		|	И ЗадачиПроектов.Владелец.Статус В(&Статусы)
		|	И СметаЗадачиПроектаРасчет.Ссылка.Проведен
		|	И СметаЗадачиПроектаРасчет.Статья = &ДоходыФинансовые
		|	И НЕ ЗадачиПроектов.Владелец.ПометкаУдаления
		|	И (&ВсеКлиентМенеджеры
		|			ИЛИ ЗадачиПроектов.Владелец.МенеджерПроекта = &КлиентМенеджер)
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗадачиПроектов.Ссылка,
		|	ЗадачиПроектов.Владелец,
		|	ЗадачиПроектов.Сумма,
		|	ЗадачиПроектов.ГарантированаОплата,
		|	ЕСТЬNULL(СметаЗадачиПроектаРасчет.Сумма, ЗадачиПроектов.Сумма),
		|	ЕСТЬNULL(СметаЗадачиПроектаРасчет.Сумма, 0),
		|	ЕСТЬNULL(ОбеспечениеОплатаОбороты.СуммаОбеспеченоОборот, 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОбеспечениеОплатаОбороты.Месяц,
		|	СУММА(ОбеспечениеОплатаОбороты.СуммаОбеспеченоОборот) КАК СуммаДоговоры,
		|	ВТ_ЗадачиСуммы.ЗадачаПроекта,
		|	ВТ_ЗадачиСуммы.Проект,
		|	0 КАК СуммаГарантировано,
		|	0 КАК СуммаПоЗадаче
		|ИЗ
		|	ВТ_ЗадачиСуммы КАК ВТ_ЗадачиСуммы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеОплата.Обороты КАК ОбеспечениеОплатаОбороты
		|		ПО ВТ_ЗадачиСуммы.ЗадачаПроекта = ОбеспечениеОплатаОбороты.ЗадачаПроекта
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбеспечениеОплатаОбороты.Месяц,
		|	ВТ_ЗадачиСуммы.ЗадачаПроекта,
		|	ВТ_ЗадачиСуммы.Проект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ЗадачиСуммы.ЗадачаПроекта,
		|	ВТ_ЗадачиСуммы.Проект,
		|	ВТ_ЗадачиСуммы.СуммаЗадачи,
		|	ВТ_ЗадачиСуммы.ГарантированаОплата,
		|	ВТ_ЗадачиСуммы.Сумма,
		|	ВТ_ЗадачиСуммы.СуммаПоСмете,
		|	ВТ_ЗадачиСуммы.СуммаОбеспечено,
		|	ВТ_ЗадачиСуммы.Проект.Код КАК ПроектКод
		|ИЗ
		|	ВТ_ЗадачиСуммы КАК ВТ_ЗадачиСуммы
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПроектКод";
	
	Запрос.УстановитьПараметр("ГодПроекта", 		ГодПроекта);
	Запрос.УстановитьПараметр("ДоходыФинансовые", 	Справочники.СтатьиСметы.ДохФинансовые );
	Запрос.УстановитьПараметр("Статусы", 			СтатусыПроектов.ВыгрузитьЗначения());
	//Запрос.УстановитьПараметр("Статусы", 			ПолучитьСтатусыПроектов());
	Запрос.УстановитьПараметр("КлиентМенеджер", 	КлиентМенеджер);
	Запрос.УстановитьПараметр("ВсеКлиентМенеджеры", НЕ ЗначениеЗаполнено(КлиентМенеджер));
	
	ПакетРезультатовЗапроса = Запрос.ВыполнитьПакет();
	Возврат ПакетРезультатовЗапроса;
	
	
КонецФункции

&НаСервереБезКонтекста
Функция Процент( Сверху, Снизу)
	Если Снизу = 0 Тогда Возврат 0; КонецЕсли;
	Возврат Сверху/Снизу * 100;
КонецФункции


// диапазон использованных месяцев
// из-за возможного слишком ранней или поздней даты сплошной диапазон может быть слишком большим
&НаСервереБезКонтекста
Функция ПолучитьМесяцыПлана( Обеспечено );
	
	сМесяцы = Новый СписокЗначений;
	тзМ = Обеспечено.Скопировать(,"Месяц");
	тзМ.Свернуть("Месяц", "");
	Для Каждого СтрМ ИЗ тзМ Цикл
		Если сМесяцы.НайтиПоЗначению( СтрМ.Месяц ) = Неопределено Тогда 
			сМесяцы.Добавить( СтрМ.Месяц, Формат( СтрМ.Месяц, "ДФ='ММММ гггг'"));
		КонецЕсли;
	КонецЦикла;
	
	сМесяцы.СортироватьПоЗначению();
	Возврат сМесяцы;
	
КонецФункции


// как текущий вариант, включаем только по договорам и гаранатировнао
&НаСервереБезКонтекста                
Функция ПоВсемВидамОбеспечения(сОбесп)
	Сумма = 0;
	Для каждого Эл ИЗ сОбесп Цикл
		Сумма = Сумма + Эл.Значение;
	КонецЦикла;
	Возврат Сумма;
КонецФункции

&НаСервере
Процедура ВывестиШапку( ТабДок, Макет, Месяцы)
	Префикс = "Шапка";
	ОблШ 	= Макет.ПолучитьОбласть( Префикс + "|Начало");
	ОблШ.Параметры.ГодПроекта = ГодПроекта;
	ОблШ.Параметры.ОтборПоКлиентМенеджеру = ?(ЗначениеЗаполнено( КлиентМенеджер), "Клиент-менеджер " + КлиентМенеджер, "По всем клиент-менеджерам");
	ТабДок.Вывести( ОблШ );
	Для Каждого ЭлМесяц ИЗ Месяцы Цикл
		ОблМ = Макет.ПолучитьОбласть( Префикс + "|Месяц");
		ОблМ.Параметры.Месяц = ЭлМесяц.Представление;
		ТабДок.Присоединить( ОблМ );
	КонецЦикла;
	ОблОк = Макет.ПолучитьОбласть( Префикс + "|Окончание");
	ТабДок.Присоединить( ОблОк );
		
	
КонецПроцедуры


&НаСервере
Процедура ВывестиСтрокуПоЗадаче( ТабДок, Макет, Месяцы, Задача, Обеспечено, НомерЗадачи);
	Префикс = "ЗадачаПроекта";
	ОблШ 	= Макет.ПолучитьОбласть( Префикс + "|Начало");
	ОблШ.Параметры.НомерЗадачи  = НомерЗадачи;
	ЗаполнитьЗначенияСвойств( ОблШ.Параметры, Задача );
	//
	сОбеспПоЗадаче 	= ОбеспечениеЗаПериод( Обеспечено,,, Задача.ЗадачаПроекта);
	ОблШ.Параметры.ОбеспеченоВсего 		= сОбеспПоЗадаче["СуммаДоговоры"] + сОбеспПоЗадаче["СуммаГарантировано"];
	// ПоВсемВидамОбеспечения(сОбеспПоЗадаче);
	ОблШ.Параметры.ПроцентОбеспечено 	= Процент( ОблШ.Параметры.ОбеспеченоВсего,  ОблШ.Параметры.Сумма );
	
	ТабДок.Вывести( ОблШ, 1 );
	
	Для Каждого ЭлМесяц ИЗ Месяцы Цикл
		ОблМ = Макет.ПолучитьОбласть( Префикс + "|Месяц");
		
		сОбесп = ОбеспечениеЗаПериод( Обеспечено, ЭлМесяц.Значение,, Задача.ЗадачаПроекта);
		
		ОблМ.Параметры.ОбеспеченоЗаМесяц = ПоВсемВидамОбеспечения(сОбесп);
		ТабДок.Присоединить( ОблМ );
	КонецЦикла;
	
	ОблОк = Макет.ПолучитьОбласть( Префикс + "|Окончание");
	ЗаполнитьЗначенияСвойств( ОблОк.Параметры, сОбеспПоЗадаче);
	ТабДок.Присоединить( ОблОк );
		
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСтрокуПоПроекту( ТабДок, Макет, Месяцы, Проект, Обеспечено);
	Префикс = "Проект";
	ОблШ 	= Макет.ПолучитьОбласть( Префикс + "|Начало");
	ЗаполнитьЗначенияСвойств( ОблШ.Параметры, Проект );
	//
	сОбеспПоПроекту 	= ОбеспечениеЗаПериод( Обеспечено,,Проект.Проект );
	//ОблШ.Параметры.ОбеспеченоВсего 		= ПоВсемВидамОбеспечения(сОбеспПоПроекту);
	ОблШ.Параметры.ОбеспеченоВсего 		= сОбеспПоПроекту["СуммаДоговоры"] + сОбеспПоПроекту["СуммаГарантировано"];
	ОблШ.Параметры.ПроцентОбеспечено 	= Процент( ОблШ.Параметры.ОбеспеченоВсего,  ОблШ.Параметры.Сумма );
	
	ТабДок.Вывести( ОблШ, 0 );
	
	Для Каждого ЭлМесяц ИЗ Месяцы Цикл
		ОблМ = Макет.ПолучитьОбласть( Префикс + "|Месяц");
		
		сОбесп = ОбеспечениеЗаПериод( Обеспечено, ЭлМесяц.Значение, Проект.Проект );
		
		ОблМ.Параметры.ОбеспеченоЗаМесяц = ПоВсемВидамОбеспечения(сОбесп);
		ТабДок.Присоединить( ОблМ );
	КонецЦикла;
	
	ОблОк = Макет.ПолучитьОбласть( Префикс + "|Окончание");
	ЗаполнитьЗначенияСвойств( ОблОк.Параметры, сОбеспПоПроекту);
	ТабДок.Присоединить( ОблОк );
		
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСтрокуИтого( ТабДок, Макет, Месяцы, Итого, Обеспечено);
	Префикс = "ИТОГО";
	ОблШ 	= Макет.ПолучитьОбласть( Префикс + "|Начало");
	//
	сОбеспИтого 	= ОбеспечениеЗаПериод( Обеспечено );

	ЗаполнитьЗначенияСвойств( ОблШ.Параметры, Итого );
	//ОблШ.Параметры.ОбеспеченоВсего 		= ПоВсемВидамОбеспечения(сОбеспИтого);
	ОблШ.Параметры.ОбеспеченоВсего 		= сОбеспИтого["СуммаДоговоры"] + сОбеспИтого["СуммаГарантировано"];
	ОблШ.Параметры.ПроцентОбеспечено 	= Процент( ОблШ.Параметры.ОбеспеченоВсего,  ОблШ.Параметры.Сумма );
	
	ТабДок.Вывести( ОблШ );
	
	Для Каждого ЭлМесяц ИЗ Месяцы Цикл
		ОблМ = Макет.ПолучитьОбласть( Префикс + "|Месяц");
		
		сОбесп = ОбеспечениеЗаПериод( Обеспечено, ЭлМесяц.Значение );
		
		ОблМ.Параметры.ОбеспеченоЗаМесяц = ПоВсемВидамОбеспечения(сОбесп);
		ТабДок.Присоединить( ОблМ );
	КонецЦикла;
	
	ОблОк = Макет.ПолучитьОбласть( Префикс + "|Окончание");
	ЗаполнитьЗначенияСвойств( ОблОк.Параметры, сОбеспИтого);
	ТабДок.Присоединить( ОблОк );
		
	
КонецПроцедуры


// по всей таблице или по проекту или по задаче проекта
// за месяц или за период
&НаСервере
Функция ОбеспечениеЗаПериод( Обеспечено, Месяц = Неопределено, Проект = Неопределено, ЗадачаПроекта = Неопределено  )
	Отбор = Новый Структура;
	Если Проект <> Неопределено Тогда
		Отбор.Вставить("Проект", Проект );
	КонецЕсли;
	Если ЗадачаПроекта <> Неопределено Тогда
		Отбор.Вставить("ЗадачаПроекта", ЗадачаПроекта );
	КонецЕсли;
	Если Месяц <> Неопределено Тогда
		Отбор.Вставить("Месяц", Месяц );
	КонецЕсли;
	Если Отбор.Количество() <> 0 Тогда
		тз = Обеспечено.Скопировать( Отбор );
	Иначе
		тз = Обеспечено;
	КонецЕсли;
	сОбеспечено = Новый Структура;
	сОбеспечено.Вставить( "СуммаДоговоры", 		тз.Итог("СуммаДоговоры"));
	сОбеспечено.Вставить( "СуммаГарантировано", тз.Итог("СуммаГарантировано"));
	сОбеспечено.Вставить( "СуммаПоЗадаче",		тз.Итог("СуммаПоЗадаче"));
	Возврат сОбеспечено;
КонецФункции


// дополняем до суммы обеспечения 
&НаСервере
Процедура ЗаполнитьОбеспеченностьПоЗадачам( Задачи, Обеспечено )
	Для Каждого Задача ИЗ Задачи Цикл 
		ОстатокОб 		= Задача.Сумма - Задача.СуммаОбеспечено;
		Если ОстатокОб > 0 Тогда
			ОбеспЗадачей = УП_СметаПроекта.РаспределитьОстатокОбеспеченияПоЗадаче( Задача.ЗадачаПроекта,  ОстатокОб );
			// добавляем строку в обеспечено 
			Для Каждого ОбЗ ИЗ ОбеспЗадачей Цикл
				СтрОбеспечено = Обеспечено.Добавить();
				ЗаполнитьЗначенияСвойств( СтрОбеспечено, Задача );
				СтрОбеспечено.Месяц 		= ОбЗ.Ключ;
				СтрОбеспечено.СуммаДоговоры	= 0;
				Если Задача.ГарантированаОплата Тогда
					СтрОбеспечено.СуммаГарантировано	= ОбЗ.Значение;
					СтрОбеспечено.СуммаПоЗадаче			= 0;
				Иначе
					СтрОбеспечено.СуммаПоЗадаче			= ОбЗ.Значение;
					СтрОбеспечено.СуммаГарантировано	= 0;
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьПланНаСервере( ТабДок, ГодПроекта )
	//ТабДок = Новый ТабличныйДокумент;
	ТабДок.Очистить();
	
	ПакетРезультатовЗапроса = ПолучитьЗадачиЗаГод( ГодПроекта );
	тзОбеспечено			= ПакетРезультатовЗапроса[1].Выгрузить();
	тзЗадачи 				= ПакетРезультатовЗапроса[2].Выгрузить();
	// переносим в таблицу обеспечено даные по обеспеченности из задач
	ЗаполнитьОбеспеченностьПоЗадачам( тзЗадачи, тзОбеспечено );
	
	Макет 	= РеквизитФормыВЗначение("Объект").ПолучитьМакет("План");
	Месяцы 	= ПолучитьМесяцыПлана( тзОбеспечено );
	ВывестиШапку( ТабДок, Макет, Месяцы);
	
	//
	тзПроекты = тзЗадачи.Скопировать(,"Проект,ПроектКод,Сумма");
	тзПроекты.Свернуть("Проект,ПроектКод", "Сумма" );
	тзПроекты.Сортировать("ПроектКод");
	
	Для Каждого СтрПроект ИЗ тзПроекты Цикл
		ТабДок.НачатьАвтогруппировкуСтрок();
		//
		ВывестиСтрокуПоПроекту( ТабДок, Макет, Месяцы, СтрПроект, тзОбеспечено );
		
		ЗадачиПроекта = тзЗадачи.НайтиСтроки( Новый Структура("Проект", СтрПроект.Проект ));
		НомерЗадачи   = 1;
		Для Каждого Задача ИЗ ЗадачиПроекта Цикл
		// если обеспечено по договорам меньше суммы, то остаток распределяем по
			ВывестиСтрокуПоЗадаче( ТабДок, Макет, Месяцы, Задача, тзОбеспечено, НомерЗадачи );
			НомерЗадачи   = НомерЗадачи   + 1;
		КонецЦикла;	                         
		ТабДок.ЗакончитьАвтогруппировкуСтрок();
		
	КонецЦикла;
	
	Если тзПроекты.Количество() <>  0 Тогда
	
		тзПроекты.Свернуть("", "Сумма");
		ВывестиСтрокуИтого( ТабДок, Макет, Месяцы, тзПроекты[0], тзОбеспечено );
		
	КонецЕсли;
	ТабДок.АвтоМасштаб 			= Истина;
	ТабДок.ОриентацияСтраницы 	= ОриентацияСтраницы.Ландшафт;
	//ТабДок.ТолькоПросмотр		= Истина;
	ТабДок.ФиксацияСверху		= 4;
	ТабДок.ФиксацияСлева		= 5;
	
	
КонецПроцедуры


&НаКлиенте
Процедура СформироватьПлан(Команда)
	СформироватьПланНаСервере(ТаблицаРезультат, ГодПроекта);  
	
КонецПроцедуры
