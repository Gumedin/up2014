Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ЗадачиПроектов") Тогда
		// Заполнение шапки
		ЗадачаПроекта = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
	
	ИсполнительДокумента 	= ПараметрыСеанса.ТекущийПользователь;
	ПериодРегистрации		= НачалоМесяца( ТекущаяДата());
	
КонецПроцедуры

Функция УжеЕстьЗаявка() 
	// виды тз в распределении	
	мВидыТЗ = Новый Массив;
	Для Каждого Стр ИЗ РаспределениеПоДокументам Цикл
		ВидТЗ = Стр.ЗадачаПроекта.ТиповаяЗадача.ВидТиповойЗадачи;
		Если мВидыТЗ.Найти( ВидТЗ ) = Неопределено Тогда
			мВидыТЗ.Добавить( ВидТЗ );
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЗаявкаКР.Ссылка
		|ИЗ
		|	Документ.ЗаявкаНаВыплатуКоммРасходов.РаспределениеПоДокументам КАК ЗаявкаКР
		|ГДЕ
		|	ЗаявкаКР.Ссылка <> &Ссылка
		|	И ЗаявкаКР.Ссылка.Проведен
		|	И ЗаявкаКР.Ссылка.КлиентМенеджер = &КлиентМенеджер
		|	И ЗаявкаКР.Ссылка.ПериодРегистрации = &ПериодРегистрации
		|	И ЗаявкаКР.ЗадачаПроекта.ТиповаяЗадача.ВидТиповойЗадачи В(&ВидыТЗ)";

	Запрос.УстановитьПараметр("КлиентМенеджер", 	КлиентМенеджер);
	Запрос.УстановитьПараметр("ПериодРегистрации", 	ПериодРегистрации);
	Запрос.УстановитьПараметр("ВидыТЗ", 			мВидыТЗ);
	Запрос.УстановитьПараметр("Ссылка", 			Ссылка);
	

	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат Истина;
	КонецЦикла;
	Возврат Ложь;
КонецФункции

// в регистр Бюджет по месяцам
Процедура ДобавитьДвижениеБюджетПоМесяцам( ЗадачаПроекта, СтатьяСметы, Сумма )
			
	Движение = Движения.БюджетПоМесяцам.Добавить();
	Движение.Период 		= Дата;
	Движение.ЗадачаПроекта 	= ЗадачаПроекта;
	Движение.СтатьяСметы	= СтатьяСметы;
	Движение.ТипСуммы 		= Перечисления.ТипСуммыБюджета.Факт;
	Движение.Месяц		 	= НачалоМесяца(ПериодРегистрации);
	Движение.Сумма 			= Сумма;
	// РКО - всегда нал
	Движение.РКО 			= 1;
КонецПроцедуры

// в регистр Обеспечено по статье
Процедура ДобавитьДвижениеОбеспеченоПоСтатье( ЗадачаПроекта, СтатьяСметы, Сумма )
			
	// регистр ОбеспеченоПоСтатье Расход
	Движения.ОбеспеченоПоСтатье.Записывать = Истина;
	Движение 				= Движения.ОбеспеченоПоСтатье.Добавить();
	Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
	Движение.Период 		= Дата;
	Движение.ЗадачаПроекта 	= ЗадачаПроекта;
	Движение.СтатьяСметы	= СтатьяСметы;
	// 
	Движение.Сумма 			= Сумма;
КонецПроцедуры


Функция СверткаРаспределенияПоМиВЗ()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РаспрПоДок.Менеджер КАК КлиентМенеджер,
		|	СУММА(РаспрПоДок.СуммаКРпоОплате) КАК Сумма,
		|	РаспрПоДок.ЗадачаПроекта.ТиповаяЗадача.ВидТиповойЗадачи КАК ВидТЗ
		|ИЗ
		|	Документ.ЗаявкаНаВыплатуКоммРасходов.РаспределениеПоДокументам КАК РаспрПоДок
		|ГДЕ
		|	РаспрПоДок.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РаспрПоДок.ЗадачаПроекта.ТиповаяЗадача.ВидТиповойЗадачи,
		|	РаспрПоДок.Менеджер";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;

КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)
	Если УжеЕстьЗаявка() Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Уже есть заявка на выплату по " + КлиентМенеджер + " за " + Формат( ПериодРегистрации, "ДФ='ММММ гггг'");
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	//СтатьяБюджета = Справочники.СтатьиСметы.РасходыКоммерческие;
	СтатьяБюджета = Справочники.СтатьиСметы.ВознаграждениеКМ;
	
	// новый регистр   29,04,2013
	Движения.БюджетПоМесяцам.Записывать = Истина;
	// регистр ОбеспеченоПоСтатье Расход
	Движения.ОбеспеченоПоСтатье.Записывать = Истина;
	
	// регистр БонусыПоАктам Расход
	Движения.БонусыПоАктам.Записывать = Истина;
	
	// 2014.02.18
	// новый регистр накопления ОплатаКоммерческихРасходов
	Движения.ОплатаКоммерческихРасходов.Записывать = Истина;
	
	
	тзРПД = РаспределениеПоДокументам.Выгрузить();
	// 2013,10,22
	тзРПД.Свернуть("ЗадачаПроекта", "СуммаКРпоОплате");
	Для Каждого СтрТЗ ИЗ тзРПД Цикл
		// 2013,10,22
		Сумма	= СтрТЗ.СуммаКРпоОплате;
		Если Сумма = 0 Тогда Продолжить; КонецЕсли;
		ЗадачаПроекта 			= СтрТЗ.ЗадачаПроекта;
		
		// в бюджет по месяцам			
		ДобавитьДвижениеБюджетПоМесяцам( ЗадачаПроекта, СтатьяБюджета, Сумма );
		// обеспечено по статье
		ДобавитьДвижениеОбеспеченоПоСтатье( ЗадачаПроекта, СтатьяБюджета, Сумма );
		
	КонецЦикла;
	
	// не сворачиваем по актам
	Для Каждого ТекСтрокаРаспределениеПоДокументам Из РаспределениеПоДокументам Цикл
		
		Движение 				= Движения.БонусыПоАктам.Добавить();
		Движение.ВидДвижения 	= ВидДвиженияНакопления.Расход;
		Движение.Период 		= Дата;
		Движение.ЗадачаПроекта 	= ТекСтрокаРаспределениеПоДокументам.ЗадачаПроекта;
		Движение.Акт 			= ТекСтрокаРаспределениеПоДокументам.Акт;
		Движение.Сумма 			= ТекСтрокаРаспределениеПоДокументам.СуммаКРпоОплате;
		
		
		// 2014.02.18
		// оплата коммерческих расходов
		// приход
		Если ТекСтрокаРаспределениеПоДокументам.СуммаКРпоОплате <> 0 Тогда
			Движение				= Движения.ОплатаКоммерческихРасходов.ДобавитьПриход();
			Движение.Период			= Дата;
			Движение.КлиентМенеджер	= ТекСтрокаРаспределениеПоДокументам.Менеджер;
			Движение.ВидТЗ			= ТекСтрокаРаспределениеПоДокументам.ЗадачаПроекта.ТиповаяЗадача.ВидТиповойЗадачи;
			Движение.ТипНачисления	= 1; 
			Движение.Сумма			= ТекСтрокаРаспределениеПоДокументам.СуммаКРпоОплате;
		КонецЕсли;
		
	КонецЦикла;
	
	// 2014,04,16 новый регистр
	Движения.ВыплатыКоммерческихРасходов.Записывать = Истина;
	// собираем по менеджерам и видам типовой задачи
	тз = СверткаРаспределенияПоМиВЗ();
	Для Каждого СтрСв ИЗ ТЗ  Цикл
		Движение = Движения.ВыплатыКоммерческихРасходов.Добавить();
		Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
		Движение.Период 		= Дата;
		
		// в строке в колонке Сумма стоит СуммаКРпоОплате
		// см функцию СверткаРаспределенияПоМиВЗ()
		ЗаполнитьЗначенияСвойств( Движение, СтрСв );
	КонецЦикла;
	//
	Движения.Записать();
	
	// функция - заглушка
	Остаток = ПолучитьОстатокКоммерческихРасходовПоМенеджеру( КлиентМенеджер );
	
	Если Остаток < 0 Тогда 
		Сообщить("Не хватает остатка по менеджеру " + Формат(Остаток, "ЧЦ=15; ЧДЦ=2"));
		//Отказ = Истина;
		//Возврат;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение 
	И НЕ ВсеЗадачиВУказанномСтатусе( Перечисления.СтатусыПроектов.ВРаботе, 
										Ссылка.РаспределениеПоДокументам.Выгрузить(, "ЗадачаПроекта") ) Тогда
		Сообщить("Не все проекты в статусе " + Перечисления.СтатусыПроектов.ВРаботе );
		Отказ = Истина;
		Возврат;
	КонецЕсли;

КонецПроцедуры

