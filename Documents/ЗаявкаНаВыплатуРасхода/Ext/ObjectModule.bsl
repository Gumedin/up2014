
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходПоЗадачеПроекта") Тогда
		// Заполнение шапки
		РасходПоЗадаче = ДанныеЗаполнения.Ссылка;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РасходПоЗадачеПроизводство") Тогда
		// Заполнение шапки
		РасходПоЗадаче = ДанныеЗаполнения.Ссылка;
	КонецЕсли;
	
	ИсполнительДокумента = ПараметрыСеанса.ТекущийПользователь;
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//Структура сметы
	Движения.БюджетПоМесяцам.Записывать = Истина;
	СметаЗадачиПроекта = УП_СметаПроекта.ПодборСметыЗадачи(РасходПоЗадаче.ЗадачаПроекта);
	Если СметаЗадачиПроекта = Неопределено Тогда 
		Сообщить("Не найдена проведенная смета для задачи " + РасходПоЗадаче.ЗадачаПроекта);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	сСметы 	= УП_СметаПроекта.ПолучитьСтруктуруСметыЗадачи( РасходПоЗадаче.ЗадачаПроекта.ГодЗадачи );

	сСтатей = Новый Соответствие;
	пСтатей = Новый Соответствие;
	oСтатей = Новый Соответствие;
	Для Каждого статья Из СметаЗадачиПроекта.Расчет Цикл
		сСтатей[статья.ИмяСтатьи] = 0;
		пСтатей[статья.ИмяСтатьи] = статья.ЗначениеПараметра / 100;
		oСтатей[статья.ИмяСтатьи] = статья.Статья;
	КонецЦикла;
	
	СтатьяСметы = РасходПоЗадаче.СтатьяСметы.ИмяПредопределенныхДанных;
	сСтатей[СтатьяСметы] = СуммаДокумента; 
	
	//Пересчет
	УП_СметаПроекта.ПересчетСметыЗадачи( сСметы, сСтатей );
	
	//Бюджет факт
	Для Каждого статья Из СметаЗадачиПроекта.Расчет Цикл
		Если сСтатей[статья.ИмяСтатьи] <> 0 Тогда 
			Движение = Движения.БюджетПоМесяцам.Добавить();
			Движение.Период 		= Дата;
			Движение.ЗадачаПроекта 	= РасходПоЗадаче.ЗадачаПроекта;
			Движение.СтатьяСметы 	= oСтатей[статья.ИмяСтатьи];
			Движение.ТипСуммы 		= Перечисления.ТипСуммыБюджета.Факт;  // факт
			Движение.Месяц 			= НачалоМесяца(ПериодРегистрации);
			Движение.Сумма          = сСтатей[статья.ИмяСтатьи];	
			Движение.РКО			= Истина;
		КонецЕсли;
	КонецЦикла;
	
	// до проведения !!!
	ОстатокРасхода = Документы.ЗаявкаНаВыплатуРасхода.ПолучитьОстатокПоСтатьеРасхода( Ссылка, Ссылка.СтатьяРасходов, Ссылка.РКО );
	Если ОстатокРасхода < СуммаДокумента Тогда
		Сообщить("Недостаточный остаток по статье " + Формат(ОстатокРасхода - СуммаДокумента, "ЧЦ=15; ЧДЦ=2"));
		//Отказ = Истина;
	КонецЕсли;
КонецПроцедуры


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если УП_ПереносДанных.ПроведениеПриПереносе() Тогда
		Возврат;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение 
	И НЕ РазрешеноПроводитьДокумент( Ссылка, Ссылка.РасходПоЗадаче.ЗадачаПроекта.Владелец  ) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;		

КонецПроцедуры


Процедура ПриКопировании(ОбъектКопирования)
	// Вставить содержимое обработчика.
КонецПроцедуры

