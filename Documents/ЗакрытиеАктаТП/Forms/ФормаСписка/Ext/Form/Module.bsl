&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	
	// подразделение
	Подразделение = ПараметрыОтбора.Получить("Подразделение");
	Если Подразделение <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Подразделение) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Подразделение");
		Иначе
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора( Список.Отбор,
				"Подразделение",
				Подразделение,
				ВидСравненияКомпоновкиДанных.ВИерархии,,Истина);
		КонецЕсли;
	КонецЕсли;
	
	// тип проекта
	Контрагент = ПараметрыОтбора.Получить("Контрагент");
	Если Контрагент <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Контрагент");
		Иначе
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора( Список.Отбор,
				"Контрагент",
				Контрагент,
				ВидСравненияКомпоновкиДанных.Равно,,Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("Подразделение", Подразделение );
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("Контрагент", Контрагент );
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПодразделениеПриИзменении("");
	КонтрагентПриИзменении("");
	
	
КонецПроцедуры
