&НаСервереБезКонтекста
Функция ПодразделениеАкта( АктТиражногоПодразделения)
	Возврат АктТиражногоПодразделения.Подразделение;
КонецФункции

&НаСервере
Процедура УстановитьДатуНовогоДокументаПоПользователю( Объект )
	Если НЕ ЗначениеЗаполнено( Объект.Ссылка ) Тогда
		ФизическоеЛицо = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
		Если ЗначениеЗаполнено( ФизическоеЛицо ) Тогда
			МенЗаписи = РегистрыСведений.НастройкиФизическогоЛица.СоздатьМенеджерЗаписи();
			МенЗаписи.ФизическоеЛицо = ФизическоеЛицо;
			МенЗаписи.Прочитать();
			Если ЗначениеЗаполнено( МенЗаписи.ДатаРабочая ) Тогда
				Объект.Дата = МенЗаписи.ДатаРабочая;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
	
&НаСервере
Процедура ПриИзмененииАкта_НаСервере()
	МоментВремени = ?(Объект.Ссылка.Пустая(), ТекущаяДата(), Объект.Ссылка.МоментВремени()) ;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиАктовОстатки.СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиТирАиП.Остатки(&МоментВремени, Источник = &Акт) КАК ОстаткиАктовОстатки";

	Запрос.УстановитьПараметр("МоментВремени", 	МоментВремени);
	Запрос.УстановитьПараметр("Акт", 			Объект.АктТиражногоПодразделения);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	ОстатокАкта = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОстатокАкта = ВыборкаДетальныеЗаписи.СуммаОстаток;
	КонецЦикла;

	
	
КонецПроцедуры

&НаКлиенте
Процедура АктТиражногоПодразделенияПриИзменении(Элемент)
	ПриИзмененииАкта_НаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриИзмененииАкта_НаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьДатуНовогоДокументаПоПользователю( Объект );
КонецПроцедуры


// максимальная цена номенклатуры
&НаСервереБезКонтекста
Функция ПолучитьМаксЦенуИзПланаРабот( АктТиражногоПодразделения, Номенклатура )
	СтЦен = Новый Структура;
	тзЦены = УП_ПланыРаботПоПроектам.ПолучитьЦеныНоменклатурыИзПланаРабот( АктТиражногоПодразделения.ПланРабот, Номенклатура );
	Если тзЦены.Количество() <> 0 Тогда
		СтЦен.Вставить("Цена", 		тзЦены[0].Цена);
		СтЦен.Вставить("ЦенаФОТ", 	тзЦены[0].ЦенаФОТ);
	Иначе
		СтЦен.Вставить("Цена", 		0);
		СтЦен.Вставить("ЦенаФОТ", 	0);
	КонецЕсли;
	Возврат СтЦен;
КонецФункции

&НаКлиенте
Процедура ПересчетСуммПоСтроке( Стр )
	Стр.Сумма = Стр.Количество * Стр.Цена - Стр.Скидка;
	// пропорция цены
	Если Стр.Цена <> 0 Тогда
		К = Стр.Сумма/Стр.Цена;
		// пересчет суммы
		Стр.СуммаФОТ 	= К * Стр.ЦенаФОТ;
	Иначе
		Стр.СуммаФОТ 	= Стр.Количество  * Стр.ЦенаФОТ;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция мНоменклатуры( АктТиражногоПодразделения )
	Возврат УП_ПланыРаботПоПроектам.МассивНоменклатурыИзПланаРаботТиражного( АктТиражногоПодразделения.ПланРабот);
КонецФункции

&НаСервереБезКонтекста
Функция мЦен( АктТиражногоПорадразделения, Номенклатура, НазваниеЦены )
	тзЦены 	= УП_ПланыРаботПоПроектам.ПолучитьЦеныНоменклатурыИзПланаРабот( АктТиражногоПорадразделения.ПланРабот, Номенклатура );
	мЦен	=  тзЦены.ВыгрузитьКолонку( НазваниеЦены );
	Возврат мЦен;
КонецФункции

&НаКлиенте
Процедура ФизическиеЛицаНоменклатураПриИзменении(Элемент)
	Стр = Элементы.ФизическиеЛица.ТекущиеДанные;
	Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
	
		СтЦен 		= ПолучитьМаксЦенуИзПланаРабот( Объект.АктТиражногоПодразделения, Стр.Номенклатура );
		Стр.ЦенаФОТ = СтЦен.ЦенаФОТ;
		Стр.Цена    = СтЦен.Цена;	
		
	Иначе
		Стр.ЦенаФОТ = 0;
		Стр.Цена    = 0;	
	КонецЕсли;
	ПересчетСуммПоСтроке( Стр );
КонецПроцедуры

&НаКлиенте
Процедура ФизическиеЛицаНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	мНоменклатуры = мНоменклатуры( Объект.АктТиражногоПодразделения );
	Если мНоменклатуры <>  Неопределено Тогда
		ЭтаФорма.Элементы.ФизическиеЛицаНоменклатура.РежимВыбораИзСписка	=	Истина;
		ЭтаФорма.Элементы.ФизическиеЛицаНоменклатура.СписокВыбора.ЗагрузитьЗначения(мНоменклатуры);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ФизическиеЛицаЦенаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Стр = Элементы.ФизическиеЛица.ТекущиеДанные;
	
	мЦен  = мЦен( Объект.АктТиражногоПодразделения,  Стр.Номенклатура, "Цена" );
	Если мЦен <>  Неопределено Тогда
		ЭтаФорма.Элементы.ФизическиеЛицаЦена.РежимВыбораИзСписка	=	Истина;
		ЭтаФорма.Элементы.ФизическиеЛицаЦена.СписокВыбора.ЗагрузитьЗначения(мЦен);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФизическиеЛицаПриИзменении(Элемент)
	Стр = Элементы.ФизическиеЛица.ТекущиеДанные;
	ПересчетСуммПоСтроке( Стр );
КонецПроцедуры

&НаКлиенте
Процедура ФизическиеЛицаЦенаФОТНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Стр = Элементы.ФизическиеЛица.ТекущиеДанные;
	
	мЦен  = мЦен( Объект.АктТиражногоПодразделения,  Стр.Номенклатура, "ЦенаФОТ" );
	Если мЦен <>  Неопределено Тогда
		ЭтаФорма.Элементы.ФизическиеЛицаЦенаФОТ.РежимВыбораИзСписка	=	Истина;
		ЭтаФорма.Элементы.ФизическиеЛицаЦенаФОТ.СписокВыбора.ЗагрузитьЗначения(мЦен);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ФизическиеЛицаКоличествоПриИзменении(Элемент)
	Стр = Элементы.ФизическиеЛица.ТекущиеДанные;
	ПересчетСуммПоСтроке( Стр );
КонецПроцедуры

&НаКлиенте
Процедура ФизическиеЛицаЦенаПриИзменении(Элемент)
	Стр = Элементы.ФизическиеЛица.ТекущиеДанные;
	ПересчетСуммПоСтроке( Стр );
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ФизическиеЛицаЦенаФОТПриИзменении(Элемент)
	Стр = Элементы.ФизическиеЛица.ТекущиеДанные;
	ПересчетСуммПоСтроке( Стр );
	// Вставить содержимое обработчика.
КонецПроцедуры
