&НаСервереБезКонтекста
Функция ДоступныеФизЛица( ФизическоеЛицо )
	Возврат СКД_ДоступныеФЛ( ФизическоеЛицо );
КонецФункции
	

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекущийПроектМенеджер = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
	//мПользователей = СКД_ДоступныеФЛ( ТекущийПроектМенеджер );
	мПользователей = ДоступныеФизЛица( ТекущийПроектМенеджер );
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора( Список.Отбор,
		"ПланРаботТиражный.ЗадачаПроекта.ПроектМенеджер",
		мПользователей,
		ВидСравненияКомпоновкиДанных.ВСписке,,Истина);


КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументыПоМенеджеруЗадач(Команда)
	
	ПериодРегистрации 	= НачалоМесяца( ТекущаяДата() );
	ОпОповещения = Новый ОписаниеОповещения("ПослеВводаДаты", ЭтаФорма );
	ПоказатьВводДаты( ОпОповещения, ПериодРегистрации, "Месяц табелей", ЧастиДаты.Дата );
	
	
КонецПроцедуры


// из доступных физических лиц выбирает техн.руководителей, по планам работ (тиражных) которых
// есть отработанные посещения в период регистрации

&НаСервереБезКонтекста
Функция ЕстьПосещенияПоПланамРабот( ПериодРегистрации, мФизЛиц )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПосещенияКонтрагентов.ПредметПосещения.ЗадачаПроекта.ПроектМенеджер КАК ПроектМенеджер
		|ИЗ
		|	Справочник.ПосещенияКонтрагентов КАК ПосещенияКонтрагентов
		|ГДЕ
		|	ПосещенияКонтрагентов.ПредметПосещения.ЗадачаПроекта.ПроектМенеджер В(&мФизическихЛиц)
		|	И ПосещенияКонтрагентов.Отработано
		|	И ПосещенияКонтрагентов.Дата МЕЖДУ &НачалоПериодаРегистрации И &КонецПериодаРегистрации
		|	И ТИПЗНАЧЕНИЯ(ПосещенияКонтрагентов.ПредметПосещения) = ТИП(Документ.ПланРаботТиражный)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПосещенияКонтрагентов.ПредметПосещения.ЗадачаПроекта.ПроектМенеджер";
	
	Запрос.УстановитьПараметр("мФизическихЛиц", мФизЛиц);
	Запрос.УстановитьПараметр("НачалоПериодаРегистрации", 	НачалоМесяца( ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", 	КонецМесяца( ПериодРегистрации));
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПроектМенеджер");
	Возврат РезультатЗапроса;

КонецФункции

&НаКлиенте
Процедура ВыбратьМенеджераПроекта( ПериодРегистрации )
	// за кого  закрываем
	мПользователей 		= ДоступныеФизЛица( ТекущийПроектМенеджер );
	//
	мПроектМенеджеры    = ЕстьПосещенияПоПланамРабот( ПериодРегистрации, мПользователей );
	//
	Если мПроектМенеджеры.Количество() > 1 Тогда
		спПользователей = Новый СписокЗначений;
		спПользователей.ЗагрузитьЗначения( мПроектМенеджеры );
		
		// 
		ОпОповещения = Новый ОписаниеОповещения("ПослеВыбораПроектМенеджера", ЭтаФорма, ПериодРегистрации );
		спПользователей.ПоказатьВыборЭлемента(ОпОповещения, "Выберите проект-менеджера" );
	Иначе
		сПроектМенеджеры = Новый СписокЗначений;
		сПроектМенеджеры.Добавить(ТекущийПроектМенеджер);
		
		ПослеВыбораПроектМенеджера( сПроектМенеджеры[0], ПериодРегистрации);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПроектМенеджера( ПроектМенеджер, ПериодРегистрации ) Экспорт
	Если ПроектМенеджер = Неопределено Тогда Возврат; КонецЕсли;
	
	ДопПарам    = Новый Структура;
	ДопПарам.Вставить("ПроектМенеджер", 	ПроектМенеджер.Значение );
	ДопПарам.Вставить("ПериодРегистрации", 	НачалоМесяца(ПериодРегистрации) );
	ОпОповещения		= Новый ОписаниеОповещения( "СформироватьДокументыПослеВопроса", ЭтаФорма, ДопПарам );
	ПоказатьВопрос(ОпОповещения,"Сформировать документы за " + Формат( ПериодРегистрации, "ДФ='ММММ гггг'") + " по проект-менеджеру " + ПроектМенеджер +"?", РежимДиалогаВопрос.ДаНет)
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаДаты( ПериодРегистрации, ДопПарам ) Экспорт
	Если НЕ ЗначениеЗаполнено( ПериодРегистрации ) Тогда 
		Возврат;
	КонецЕсли;
	// 
	ВыбратьМенеджераПроекта( ПериодРегистрации );
КонецПроцедуры	

&НаКлиенте
Процедура СформироватьДокументыПослеВопроса( РезультатВопроса, ДопПараметры ) Экспорт
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	КолДокументов 	= СформироватьДокументыПоМенеджеруЗадач_НаСервере( ДопПараметры );
	Сообщение 		= Новый СообщениеПользователю;
	Сообщение.Текст = "Сформировано " + КолДокументов + " документов"; 
	Сообщение.Сообщить();
	
	// обновляем
	Оповестить("ИзмененСписок_ТабельРЗПТ", ДопПараметры.ПроектМенеджер, ЭтаФорма );
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МассивПлановРаботПоПроектМенеджеру( ПроектМенеджер, ПериодРегистрации ) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланРаботТиражныйРасчет.Ссылка
		|ИЗ
		|	Документ.ПланРаботТиражный.Расчет КАК ПланРаботТиражныйРасчет
		|ГДЕ
		|	ПланРаботТиражныйРасчет.Ссылка.ЗадачаПроекта.ПроектМенеджер = &ПроектМенджер
		|	И ПланРаботТиражныйРасчет.Месяц = &ПериодРегистрации
		|
		|СГРУППИРОВАТЬ ПО
		|	ПланРаботТиражныйРасчет.Ссылка";

	Запрос.УстановитьПараметр("ПериодРегистрации", 	НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("ПроектМенджер", 		ПроектМенеджер);

	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку( "Ссылка");
	Возврат Результат;

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПосещенияЗаПериодРегистрации( ПроектМенеджер, ПериодРегистрации )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПосещенияКонтрагентов.Уточнение КАК Номенклатура,
		|	ПосещенияКонтрагентов.ФизическоеЛицо,
		|	ПосещенияКонтрагентов.Подразделение,
		|	ПосещенияКонтрагентов.Дата КАК ДатаТабеля,
		|	СУММА(ПосещенияКонтрагентов.Количество) КАК Количество,
		|	ПосещенияКонтрагентов.ПредметПосещения КАК ПланРаботТиражный
		|ИЗ
		|	Справочник.ПосещенияКонтрагентов КАК ПосещенияКонтрагентов
		|ГДЕ
		|	ПосещенияКонтрагентов.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И ПосещенияКонтрагентов.ПредметПосещения.ЗадачаПроекта.ПроектМенеджер = &ПроектМенеджер
		|	И ПосещенияКонтрагентов.Отработано
		|	И ПосещенияКонтрагентов.Количество <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ПосещенияКонтрагентов.Подразделение,
		|	ПосещенияКонтрагентов.Уточнение,
		|	ПосещенияКонтрагентов.ФизическоеЛицо,
		|	ПосещенияКонтрагентов.Дата,
		|	ПосещенияКонтрагентов.ПредметПосещения";
	
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоМесяца( ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", 	КонецМесяца( ПериодРегистрации));
	Запрос.УстановитьПараметр("ПроектМенеджер", ПроектМенеджер);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
	
КонецФункции

// документы формируем не по отметке РВ в табеле РВ
// а по отработанным посещениям по плану работ (тиражному
&НаСервереБезКонтекста
Функция СформироватьДокументыПоМенеджеруЗадач_НаСервере( Парам )
	// заглушка
	ТабельЗПТ = Документы.ТабельРаботПоЗадачеПроектаТиражный.ПустаяСсылка();
	Н = 0;
	
	//
	ПроектМенеджер 		= Парам.ПроектМенеджер;
	ПериодРегистрации	= Парам.ПериодРегистрации;
	
	тзПосещения	 = ПолучитьПосещенияЗаПериодРегистрации( ПроектМенеджер, ПериодРегистрации );
	тзПланыРабот = тзПосещения.Скопировать(, "ПланРаботТиражный");
	тзПланыРабот.Свернуть("ПланРаботТиражный", "");
	
	Для Каждого СтрокаПРТ ИЗ тзПланыРабот Цикл
		ПланРаботТиражный = СтрокаПРТ.ПланРаботТиражный;
		// проведенный табель работ по задачам проекта
		Если УП_ПланыРаботПоПроектам.ТабельРаботПоЗадачеПроектаТиражныйУжеСуществует( ТабельЗПТ, ПланРаботТиражный, ПериодРегистрации  ) Тогда
			Продолжить;
		КонецЕсли;
		тзРабочееВремя = тзПосещения.Скопировать( Новый Структура("ПланРаботТиражный", ПланРаботТиражный ));
		
		Если тзРабочееВремя.Количество() > 0 Тогда
			// проверяем, что документ еще нет !!!
			ДокОб 						= Документы.ТабельРаботПоЗадачеПроектаТиражный.СоздатьДокумент();
			ДокОб.Дата 					= ТекущаяДата();
			ДокОб.ИсполнительДокумента 	= ПараметрыСеанса.ТекущийПользователь;
			ДокОб.ПериодРегистрации		= ПериодРегистрации;
			ДокОб.ПланРаботТиражный		= ПланРаботТиражный;
			
			// заполняем рабочее время
			Для Каждого СтрРВ ИЗ тзРабочееВремя Цикл
				СтрокаДок = ДокОб.РабочееВремя.Добавить();
				ЗаполнитьЗначенияСвойств( СтрокаДок, СтрРВ );
			КонецЦикла;
			Попытка 
				ДокОб.Записать();
			Исключение
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
		Н = Н + 1;
	КонецЦикла;
	
	
	Возврат Н;
КонецФункции

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененСписок_ТабельРЗПТ" Тогда
		мПользователей = ДоступныеФизЛица( ТекущийПроектМенеджер );
		Если мПользователей.Найти( Параметр ) <> Неопределено Тогда
		// пересчитываем список документов
			Элементы.Список.Обновить();
		КонецЕсли;

		
	КонецЕсли;
КонецПроцедуры
