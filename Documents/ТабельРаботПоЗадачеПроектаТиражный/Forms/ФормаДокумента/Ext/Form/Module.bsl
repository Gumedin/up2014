&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьОстаткиПлана();

КонецПроцедуры


// с учетом должности
&НаКлиенте
Процедура ОбновитьОстаткиПлана()
	ЗаполнитьТаблицуОстатков();	
	Для Каждого СтрОст ИЗ ОстаткиПлана Цикл
		СтрОст.Закрыто 		= 0;
		СтрОст.НеЗакрыто 	= СтрОст.План;
	КонецЦикла;
	
	мУдалить = Новый Массив;
	//
	Для Каждого Стр ИЗ Объект.РабочееВремя Цикл
		м = ОстаткиПлана.НайтиСтроки( Новый Структура( "Номенклатура", Стр.Номенклатура ));
		Если м.Количество() <> 0 Тогда
			СтрОст = м[0];
		Иначе
			СтрОст = ОстаткиПлана.Добавить();
			СтрОст.Номенклатура 	= Стр.Номенклатура;
		КонецЕсли;
		//
		СтрОст.Закрыто 		= СтрОст.Закрыто	+ Стр.Количество;
		СтрОст.НеЗакрыто 	= СтрОст.План  		- СтрОст.Закрыто;
		
		
	КонецЦикла;
	
	Для Каждого СтрОст ИЗ ОстаткиПлана Цикл
		Если СтрОст.Закрыто = 0 И СтрОст.План = 0 И СтрОст.НеЗакрыто = 0 Тогда
			ОстаткиПлана.Удалить( ОстаткиПлана.Индекс( СтрОст ));
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПланНаМесяцПоПлануРабот( ПланРаботТиражный, ПериодРегистрации )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФронтРаботОбороты.ТарифнаяСтавка КАК Номенклатура,
		|	СУММА(ФронтРаботОбороты.КоличествоОборот) КАК План
		|ИЗ
		|	РегистрНакопления.ФронтРабот.Обороты КАК ФронтРаботОбороты
		|ГДЕ
		|	ФронтРаботОбороты.Месяц = &Месяц
		|	И ФронтРаботОбороты.ТипСуммы = 0
		|	И ФронтРаботОбороты.ПланРабот = &ПланРабот
		|
		|СГРУППИРОВАТЬ ПО
		|	ФронтРаботОбороты.ТарифнаяСтавка,
		|	ФронтРаботОбороты.Должность";

	Запрос.УстановитьПараметр("Месяц", 		ПериодРегистрации);
	Запрос.УстановитьПараметр("ПланРабот", 	ПланРаботТиражный);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуОстатков( )
	ОстаткиПлана.Очистить();
	// 2015 07 06
	
	ПланНаМесяц 	= ПланНаМесяцПоПлануРабот( Объект.ПланРаботТиражный, Объект.ПериодРегистрации );
	ОстаткиПлана.Загрузить( ПланНаМесяц );
	
КонецПроцедуры


&НаКлиенте
Процедура РабочееВремяНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	СписокВыбораНоменклатура 	= УП_РаботаСРабочимКалендаремСервер.СписокУточненийПредметаПосещения( Объект.ПланРаботТиражный );
	
	ОписаниеОповещения 		= Новый ОписаниеОповещения("РабочееВремяНоменклатураЗавершение", ЭтотОбъект);
	ПоказатьВыборИзСписка(ОписаниеОповещения, СписокВыбораНоменклатура, Элементы.РабочееВремя.ТекущиеДанные.Номенклатура);
КонецПроцедуры


&НаКлиенте
Процедура РабочееВремяНоменклатураЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Номенклатура = Результат.Значение;
	Если ЗначениеЗаполнено(Номенклатура) Тогда
		Модифицированность = Истина;
		Элементы.РабочееВремя.ТекущиеДанные.Номенклатура = Номенклатура;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	Объект.ПериодРегистрации = НачалоМесяца( Объект.ПериодРегистрации );
	ОбновитьОстаткиПлана();
	

КонецПроцедуры


&НаКлиенте
Процедура Обновить(Команда)
	//ЗаполнитьТаблицуОстатков();
	ОбновитьОстаткиПлана();
КонецПроцедуры


&НаКлиенте
Процедура ИсправитьПланПоЗакрытию(Команда)
	
	
	ОпОповещения = Новый ОписаниеОповещения("ИсправитьППЗ", ЭтаФорма );
	ПоказатьВопрос(ОпОповещения, "Исправить план работ (тиражный) по закрытию за текущий месяц?", РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры


&НаКлиенте
Процедура ИсправитьППЗ( РезультатВопроса, ДопПарам ) Экспорт
	сЗакрыто = Новый Соответствие;
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		Для Каждого СтрОП ИЗ ОстаткиПлана Цикл
			сЗакрыто.Вставить(СтрОП.Номенклатура, СтрОП.Закрыто );
		КонецЦикла;
	КонецЕсли;
	Если сЗакрыто.Количество() <> 0 Тогда
		ПеренестиОтстаткиПланаТиражные( Объект.ПланРаботТиражный, Объект.ПериодРегистрации, сЗакрыто );
		ОбновитьОстаткиПлана();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПеренестиОтстаткиПланаТиражные( ПланРаботТиражный, ПериодРегистрации, сЗакрыто )
	Документы.ПланРаботТиражный.ИсправитьРасчетПоТекущемуЗакрытию( ПланРаботТиражный, ПериодРегистрации, сЗакрыто );
КонецПроцедуры

&НаКлиенте
Процедура РабочееВремяПриИзменении(Элемент)
	ОбновитьОстаткиПлана();

КонецПроцедуры

&НаКлиенте
Процедура ПланРаботТиражныйПриИзменении(Элемент)
	ОбновитьОстаткиПлана();
КонецПроцедуры

#Область ЗаполнитьПоПосещениям

&НаСервере
Процедура ЗаполнитьДокумент_НаСервере()
	Док = РеквизитФормыВЗначение("Объект");
	Док.РабочееВремя.Очистить();
	
	Посещения = УП_РаботаСРабочимКалендаремСервер.ПолучитьПосещенияПоПредметуПосещенияЗаМесяц( Док.ПланРаботТиражный, Док.ПериодРегистрации);
	Для Каждого СтрПосещения ИЗ Посещения Цикл
		СтрДок = Док.РабочееВремя.Добавить();
		ЗаполнитьЗначенияСвойств( СтрДок, СтрПосещения );
		// изменяем 
		СтрДок.Номенклатура	= СтрПосещения.Уточнение;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы( Док, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДокументПоПосещениям( РезультатВопроса, ДопПараметры ) Экспорт
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	// непосредтвенно заполняем
	ЗаполнитьДокумент_НаСервере();

	
	//// обновляем
	// параметр - проект менеджер, пока 
	//Оповестить("ИзмененСписок_ТабельРЗПТ", ПроектМенеджер, ЭтаФорма );
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоПосещениям(Команда)
	Если Объект.РабочееВремя.Количество() <> 0 Тогда 
		ДопПарам = Новый Структура;
		ОпОповещения	= Новый ОписаниеОповещения( "ЗаполнитьДокументПоПосещениям", ЭтаФорма, ДопПарам );
		ПоказатьВопрос(ОпОповещения,"Перед заполнением документа он будет очищен, продолжить?", РежимДиалогаВопрос.ДаНет)
	Иначе
		ЗаполнитьДокумент_НаСервере();
	КонецЕсли;
КонецПроцедуры



#КонецОбласти