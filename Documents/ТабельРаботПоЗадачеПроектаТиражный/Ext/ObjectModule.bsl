Функция ПланРаботПоЗадачеПроекта( ЗадачаПроекта )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПланРаботТиражный.Ссылка
		|ИЗ
		|	Документ.ПланРаботТиражный КАК ПланРаботТиражный
		|ГДЕ
		|	ПланРаботТиражный.ЗадачаПроекта = &ЗадачаПроекта
		|	И ПланРаботТиражный.Проведен";

	Запрос.УстановитьПараметр("ЗадачаПроекта", ЗадачаПроекта);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	Возврат Неопределено;

КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ЗадачиПроектов") Тогда
		// Заполнение шапки
		ПланРабот 	= ПланРаботПоЗадачеПроекта( ДанныеЗаполнения.Ссылка );
		
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПланРаботТиражный") Тогда
		ПланРабот 	= ДанныеЗаполнения.Ссылка;
		
	КонецЕсли;
	ИсполнительДокумента 	= ПараметрыСеанса.ТекущийПользователь;
	ПериодРегистрации		= НачалоМесяца( ТекущаяДата() );
	// Вставить содержимое обработчика.
КонецПроцедуры

Функция ДанныеИзТабелейПодразделений()
	ФизическиеЛица = Ссылка.РабочееВремя.ВыгрузитьКолонку( "ФизическоеЛицо" );
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабельПодразделенияРабочееВремя.ФизическоеЛицо,
		|	ТабельПодразделенияРабочееВремя.ТарифнаяСтавка,
		|	СУММА(ТабельПодразделенияРабочееВремя.КоличествоТЗП) КАК КоличествоТЗП
		|ИЗ
		|	Документ.ТабельПодразделения.РабочееВремя КАК ТабельПодразделенияРабочееВремя
		|ГДЕ
		|	ТабельПодразделенияРабочееВремя.Ссылка.Проведен
		|	И ТабельПодразделенияРабочееВремя.Ссылка.ПериодРегистрации = &ПериодРегистрации
		|	И ТабельПодразделенияРабочееВремя.ФизическоеЛицо В(&ФизическиеЛица)
		|	И ТабельПодразделенияРабочееВремя.Основание = &ПланРабот
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабельПодразделенияРабочееВремя.ФизическоеЛицо,
		|	ТабельПодразделенияРабочееВремя.ТарифнаяСтавка";

	Запрос.УстановитьПараметр("ПериодРегистрации", 	Ссылка.ПериодРегистрации);
	Запрос.УстановитьПараметр("ПланРабот", 			Ссылка.ПланРаботТиражный);
	
	// сотрудники 
	Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);

	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;

	
КонецФункции

Процедура ОбработкаУдаленияПроведения(Отказ)
	// если что-то есть в табеле подразделений, то нельзя отменять !!!
	ДанныеИзТабелейПодр = ДанныеИзТабелейПодразделений();
	Если ДанныеИзТабелейПодр.Количество() <> 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Невозможно отменить " + Ссылка + ", есть данные, зафиксированнные табелем подразделения";
		Сообщение.Сообщить();
		
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

// без учета должности
Функция ЗакрытоНеПоПлануРабот()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Расчет.Номенклатура КАК Номенклатура,
		|	СУММА(Расчет.Количество) КАК Количество
		|ИЗ
		|	Документ.ПланРаботТиражный.Расчет КАК Расчет
		|ГДЕ
		|	Расчет.Ссылка = &ПланРаботТиражный
		|	И Расчет.Месяц = &Месяц
		|	И Расчет.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	Расчет.Номенклатура";

	Запрос.УстановитьПараметр("Месяц", 				ПериодРегистрации);
	Запрос.УстановитьПараметр("ПланРаботТиражный", 	ПланРаботТиражный);

	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Сортировать("Номенклатура");
	

	тзЗакрыто = РабочееВремя.Выгрузить();
	тзЗакрыто.Свернуть("Номенклатура", "Количество");
	тзЗакрыто.Сортировать("Номенклатура");
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "";
	
	
	Совпадают = Истина;
	Если тзЗакрыто.Количество() = Результат.Количество() Тогда
		Для Н = 1 ПО тзЗакрыто.Количество() Цикл
			Если тзЗакрыто[Н-1].Номенклатура <> Результат[Н-1].Номенклатура  Тогда
				Сообщение.Текст = ?(ЗначениеЗаполнено(Сообщение.Текст), Символы.ПС, "") + Сообщение.Текст + 
								"Номенклатура плана работ " + Результат[Н-1].Номенклатура + 
								" не соответствует номенклатуре табеля " + тзЗакрыто[Н-1].Номенклатура;

				Совпадают = Ложь;
			КонецЕсли;
			Если тзЗакрыто[Н-1].Количество <> Результат[Н-1].Количество  Тогда
				Сообщение.Текст = ?(ЗначениеЗаполнено(Сообщение.Текст), Символы.ПС, "") + Сообщение.Текст + 
								"по номенклатуре " + тзЗакрыто[Н-1].Номенклатура + 
								" в плане работ " + Результат[Н-1].Количество + 
								" часов, в табеле " + тзЗакрыто[Н-1].Количество + " часов";
				Совпадают = Ложь;
			КонецЕсли;
		КонецЦикла;
	Иначе 
		Сообщение.Текст = ?(ЗначениеЗаполнено(Сообщение.Текст), Символы.ПС, "") + Сообщение.Текст + 
						"не совпадает количество номенклатуры в плане работ: " + Результат.Количество() + ", в табеле: " + тзЗакрыто.Количество();
		Совпадают = Ложь;
	КонецЕсли;
	
	//
	Если НЕ Совпадают Тогда
		Сообщение.Сообщить();
		Возврат Истина;
	КонецЕсли;
		
	Возврат Ложь;

КонецФункции


Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если УП_ПланыРаботПоПроектам.ТабельРаботПоЗадачеПроектаТиражныйУжеСуществует( Ссылка, ПланРаботТиражный, ПериодРегистрации  ) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	
	// для автоматической генерации при модификации документов
	Если НЕ УП_ПереносДанных.ПроведениеПриПереносе() Тогда
		Если ЗакрытоНеПоПлануРабот()	Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// !!!с табелем подразделения не сравниваем
	
	// утверждено табелем подразделения по сотрудникам
	//Если НеСоответствуетТабелямПодразделений() Тогда
	//	Отказ = Истина;
	//	Возврат;
	//КонецЕсли;
		
	// сворачиваем по номенклатуре и подразделению
	тзРВ = РабочееВремя.Выгрузить();
	тзРВ.Свернуть("Номенклатура,Подразделение", "Количество");
	ИтогиПоНоменклатуре	= Новый Соответствие;
	ИтогиПоПодр			= Новый Соответствие;
	
	//
	Для Каждого СтрРВ ИЗ тзРВ Цикл
		ЦенаФОТ = ЦенаНоменклатуры( СтрРВ.Номенклатура, Справочники.ВидыЦен.ЦенаФОТ, ПериодРегистрации );
		Сумма	= ЦенаФОТ * СтрРВ.Количество;
		
		// складываем количество
		КолНом 	= ИтогиПоНоменклатуре.Получить( СтрРВ.Номенклатура );
		Если КолНом = Неопределено Тогда
			КолНом = 0;
		КонецЕсли;
		ИтогиПоНоменклатуре.Вставить( СтрРВ.Номенклатура, КолНом + СтрРВ.Количество);
		
		// складываем сумма
		СуммаПодр = ИтогиПоПодр.Получить( СтрРВ.Подразделение );
		Если СуммаПодр = Неопределено Тогда
			СуммаПодр = 0;
		КонецЕсли;
		ИтогиПоПодр.Вставить( СтрРВ.Подразделение, СуммаПодр + Сумма);
	КонецЦикла;
	
	// для отладки
	Движения.ФронтРабот.Записывать 	= Истина;
	ИтСумма 						= 0;
	
	// во фронт работ и
	// в бюджет по месяцам считаем по ставкам планирования
	// по тарифным ставкам и должностям
	тзРВ.Свернуть("Номенклатура", "Количество");
	Для Каждого СтрРВ ИЗ тзРВ Цикл
		Движение 				= Движения.ФронтРабот.Добавить();
		Движение.Период 		= Дата;
		Движение.ПланРабот 		= ПланРаботТиражный;
		// для тиражного плана номенклатура хранится в реквизите ТарифнаяСтавка
		Движение.ТарифнаяСтавка = СтрРВ.Номенклатура;
		Движение.Месяц 			= НачалоМесяца( ПериодРегистрации);
		Движение.ТипСуммы 		= 1;
		Движение.Количество		= СтрРВ.Количество;
		
		// 	повторно
		ЦенаФОТ = ЦенаНоменклатуры( СтрРВ.Номенклатура, Справочники.ВидыЦен.ЦенаФОТ, ПериодРегистрации );
		Сумма	= ЦенаФОТ * СтрРВ.Количество;
		Движение.Сумма	 		= Сумма;
		//
		ИтСумма 				= ИтСумма  + Сумма;
	КонецЦикла;
	
	
	// не пишем, пока не закрыли из тиражных проектов
	// 2016 10 02
	
	// регистр БюджетПоМесяцам 
	Движения.БюджетПоМесяцам.Записывать = Истина;
	
	// одна проводка одной статье бюджета	
	Движение 				= Движения.БюджетПоМесяцам.Добавить();
	Движение.Период 		= Дата;
	Движение.ЗадачаПроекта 	= ПланРаботТиражный.ЗадачаПроекта;
	Движение.СтатьяСметы	= Справочники.СтатьиСметы.ФОТ_ПП;
	Движение.ТипСуммы 		= Перечисления.ТипСуммыБюджета.Факт; // факт
	Движение.Месяц 			= НачалоМесяца( ПериодРегистрации);
	// 
	Движение.Сумма			= ИтСумма;
	// 2016 02 12
	Движение.РКО			= Истина;
	
	// пока не записываем 2016 09 23
	// регистр фонд подразделения  
	//Движения.ФондПодразделений.Записывать = Истина;
	//// в подразделения сотрудников
	//Для Каждого Эл ИЗ ИтогиПоПодр Цикл
	//	Движение 				= Движения.ФондПодразделений.ДобавитьПриход();
	//	Движение.Период 		= ПериодРегистрации;
	//	Движение.Подразделение  = Эл.Ключ;
	//	Движение.Сумма			= Эл.Значение;
	//КонецЦикла;	
	
	
	// в регистр закрытия плана работ записываем в суммах планирования
	Движения.ЗакрытиеПлановРабот.Записывать = Истина;
	Движение = Движения.ЗакрытиеПлановРабот.Добавить();
	Движение.Период			= НачалоМесяца( ПериодРегистрации );
	Движение.ЗадачаПроекта 	= ПланРаботТиражный.ЗадачаПроекта;
	Движение.ПланРабот		= ПланРаботТиражный;
	//
	СуммаФронтаРабот 	= ПланРаботТиражный.Расчет.Итог("СуммаФОТ");
	ОстатокПоСмете		= ПланРаботТиражный.ОстатокПоСмете;
	// сумма закрытого фронта работ по отношению к сумме по смете 
	Движение.ПроцентСмета	= Окр( ИтСумма / (СуммаФронтаРабот + ОстатокПоСмете) * 100, 1);
	// сумма закрытого по отношению к сумме фронта работ
	Движение.ПроцентФР		= Окр( ИтСумма / СуммаФронтаРабот * 100, 1);
	// доля закрытого объема работ за текущий месяц, устанавливается в документе
	Движение.ПроцентФакт	= ПроцентЗакрытия;
	
	
	
КонецПроцедуры

