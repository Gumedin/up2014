
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ИсполнительДокумента = ПараметрыСеанса.ТекущийПользователь;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	//Добавлено 15.05.2018 Гумединым А.Г. по задаче #129069
	//Проверка на  равенство сумм по задаче (Сумма по задаче = Сумма отгрузки по задаче = Сумма оплаты по задаче)	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда  
		Для Каждого Элемент Из ЗадачиПроекта Цикл
			СуммаЗадачи = Элемент.Сумма;
			
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить("ЗадачаПроекта", Элемент.ЗадачаПроекта); 
			ГрафикиРеализации = ЭтотОбъект.ЭтапыГрафикаРеализации.НайтиСтроки(ПараметрыОтбора);
			ГрафикиОплаты = ЭтотОбъект.ЭтапыГрафикаОплаты.НайтиСтроки(ПараметрыОтбора);
			
			СуммаОплаты = ПолучитьСуммыПоГрафикам(ГрафикиОплаты, Ложь);
			СуммаРеализации = ПолучитьСуммыПоГрафикам(ГрафикиРеализации, Истина);
			
			Если НЕ (СуммаЗадачи = СуммаОплаты И СуммаОплаты = СуммаРеализации) Тогда
				Сообщить("У задачи " + Элемент.ЗадачаПроекта + " и графиков оплаты/отгрузки не совпадают суммы");
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
		КонецЦикла;
		//////////////////////////////////////////////////////
		
		//Добавлено 15.05.2018 Гумединым А.Г. по задаче #129069
		//Если установлен признак фиктивного договора, то в Графиках не должно быть 
		//дат ранее начала текущего месяца
		Если ЭтотОбъект.Фиктивный Тогда
			ДатыСоответствуют = ПроверитьДатыГрафиков(ЭтапыГрафикаРеализации, Истина);
			ДатыСоответствуют = ПроверитьДатыГрафиков(ЭтапыГрафикаОплаты, Ложь);
			Если Не ДатыСоответствуют Тогда
				Сообщить("У фиктивного договора Даты в графиках оплаты и отгрузки не могут быть меньше начала текущего месяца");
				Отказ = Истина;
				Возврат;	
			КонецЕсли;
		КонецЕсли;
		//////////////////////////////////////////////////////
	КонецЕсли;
	
КонецПроцедуры

//Добавлено 15.05.2018 Гумединым А.Г. по задаче #129069
Функция ПолучитьСуммыПоГрафикам(Элементы, ЭтоОтгрузка)
	Сумма = 0;
	Для Каждого Элемент Из Элементы Цикл
		Если ЭтоОтгрузка Тогда
			Сумма = Сумма + Элемент.СуммаРеализации;
		Иначе 
			Сумма = Сумма + Элемент.СуммаПлатежа;
		КонецЕсли;
	КонецЦикла;
	Возврат Сумма;
КонецФункции

//Добавлено 15.05.2018 Гумединым А.Г. по задаче #129069
Функция ПроверитьДатыГрафиков(Элементы, ЭтоОтгрузка)
	Ответ = Истина;
	ТекущаяДата = НачалоМесяца(ТекущаяДата());
	Для Каждого Элемент Из Элементы Цикл
		Если ЭтоОтгрузка Тогда
			Если ТекущаяДата > Элемент.ДатаРеализации Тогда
				Ответ = Ложь;
			КонецЕсли;	
		Иначе 
			Если ТекущаяДата > Элемент.ДатаПлатежа Тогда
				Ответ = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Возврат Ответ
КонецФункции

//
Функция НеПерепроведениеСметЗадач()
	//Проведение Договора [#129608]
	//Не перепроводить сметы
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	СметаДокументы.Документ КАК СметаЗадачи
	//	|ИЗ
	//	|	Документ.Смета.Документы КАК СметаДокументы
	//	|ГДЕ
	//	|	СметаДокументы.Ссылка.Проведен
	//	|	И СметаДокументы.Ссылка.Проект = &Проект
	//	|	И СметаДокументы.Документ.ЗадачаПроекта В(&ЗадачиПроекта)
	//	|	И СметаДокументы.Документ.Проведен";   // перестраховка

	//Запрос.УстановитьПараметр("ЗадачиПроекта", ЗадачиПроекта.ВыгрузитьКолонку("ЗадачаПроекта"));
	//Запрос.УстановитьПараметр("Проект", Проект);

	//Результат = Запрос.Выполнить();

	//ВыборкаДетальныеЗаписи = Результат.Выбрать();

	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// перепроводим смету задачи
	//	Попытка
	//		СмЗадачиОб = ВыборкаДетальныеЗаписи.СметаЗадачи.ПолучитьОбъект();
	//		СмЗадачиОб.Записать( РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный );
	//	Исключение
	//		Сообщить(ОписаниеОшибки());
	//		Возврат Истина;
	//	КонецПопытки;
	//КонецЦикла;
	
	Возврат Ложь;
КонецФункции

//Новая спецификация в документы [#129069]
//Движение по Обеспечению делать на основании графика оплаты, без распределения.
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Если УП_ПереносДанных.ПроведениеПриПереносе() Тогда
		Возврат;
	КонецЕсли;
	
	// 2016 11 02
	Если ЭтапыГрафикаОплаты.Количество() = 0 Тогда
		Сообщить("График оплаты пустой. Проведение не возможно.");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Фиктивный = Ложь Тогда
		// график платежа всегда заполнен
		Движения.ОбеспечениеОплата.Записывать = Истина;
		Для Каждого стр Из ЭтапыГрафикаОплаты Цикл
			Движение 					= Движения.ОбеспечениеОплата.Добавить();
			Движение.Период 			= Дата;
			Движение.ЗадачаПроекта 		= стр.ЗадачаПроекта;
			Движение.Договор 			= Ссылка;
			Движение.Месяц 				= НачалоМесяца( стр.ДатаПлатежа );
			//
			Движение.СуммаОбеспечено	= стр.СуммаПлатежа;
		КонецЦикла;
	КонецЕсли;
	
	//Добавить регистр по Реализации [#129609]
	//график отгрузки всегда заполнен
	Движения.Реализация.Записывать = Истина;
	Для Каждого стр Из ЭтапыГрафикаРеализации Цикл
		Движение 					= Движения.Реализация.Добавить();
		Движение.Период 			= Дата;
		Движение.ЗадачаПроекта 		= стр.ЗадачаПроекта;
		Движение.Договор 			= Ссылка;
		Движение.Месяц 				= НачалоМесяца( стр.ДатаРеализации );
		//
		Движение.План = стр.СуммаРеализации;
		Если Фиктивный = Ложь Тогда
			Движение.ВидПлана = Перечисления.ВидыПланаБюджета.Обеспечено;
		Иначе 
			Движение.ВидПлана = Перечисления.ВидыПланаБюджета.Гарантия;
		КонецЕсли;
	КонецЦикла;
	
	Движения.Записать();
КонецПроцедуры

Процедура ОбработкаПроведенияПредыдущийВариант(Отказ, РежимПроведения)
	Если УП_ПереносДанных.ПроведениеПриПереносе() Тогда
		Возврат;
	КонецЕсли;
	// 2016 11 02
	Если ЗадачиПроекта.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	мК = ЭтапыГрафикаОплаты.ВыгрузитьКолонку( "ПроцентПлатежа");
	
	// график платежа всегда заполнен
	Движения.ОбеспечениеОплата.Записывать = Истина;
	Для Каждого ТекСтрокаЗадачиПроекта Из ЗадачиПроекта Цикл
		//
		мСумм 	= РаспределитьПропорционально( ТекСтрокаЗадачиПроекта.Сумма, мК, 2 );
		Индекс 	= 0;
		Для Каждого Сумма ИЗ мСумм Цикл
			ЭтапОплаты				= ЭтапыГрафикаОплаты[Индекс];
			Индекс	= Индекс + 1;
			
			Движение 					= Движения.ОбеспечениеОплата.Добавить();
			Движение.Период 			= Дата;
			Движение.ЗадачаПроекта 		= ТекСтрокаЗадачиПроекта.ЗадачаПроекта;
			Движение.Договор 			= Ссылка;
			Движение.Месяц 				= НачалоМесяца( ЭтапОплаты.ДатаПлатежа );
			//
			Движение.СуммаОбеспечено	= Сумма;
		КонецЦикла;
	КонецЦикла;
	
	Движения.Записать();
	
	// если неполучилось перепровести смету задачи проекта
 	Отказ = НеПерепроведениеСметЗадач();
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если Не Проведен Тогда
	// т.е отмена проведения 
		Отказ = НеПерепроведениеСметЗадач();
	КонецЕсли;
	
	
КонецПроцедуры

