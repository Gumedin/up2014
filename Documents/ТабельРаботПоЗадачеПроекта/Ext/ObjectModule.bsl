Функция ПланРаботПоЗадачеПроекта( ЗадачаПроекта )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПланРабот.Ссылка
		|ИЗ
		|	Документ.ПланРабот КАК ПланРабот
		|ГДЕ
		|	ПланРабот.ЗадачаПроекта = &ЗадачаПроекта
		|	И ПланРабот.Проведен";

	Запрос.УстановитьПараметр("ЗадачаПроекта", ЗадачаПроекта);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	Возврат Неопределено;

КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ЗадачиПроектов") Тогда
		// Заполнение шапки
		ПланРабот 	= ПланРаботПоЗадачеПроекта( ДанныеЗаполнения.Ссылка );
		
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПланРабот") Тогда
		ПланРабот 	= ДанныеЗаполнения.Ссылка;
		
	КонецЕсли;
	ИсполнительДокумента 	= ПараметрыСеанса.ТекущийПользователь;
	ПериодРегистрации		= НачалоМесяца( ТекущаяДата() );
	
	
КонецПроцедуры

// без учета должности
Функция ЗакрытоНеПоПлануРабот()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланРаботФронтРабот.ТарифнаяСтавка КАК ТарифнаяСтавка,
		|	СУММА(ПланРаботФронтРабот.Количество) КАК Количество
		|ИЗ
		|	Документ.ПланРабот.ФронтРабот КАК ПланРаботФронтРабот
		|ГДЕ
		|	ПланРаботФронтРабот.Ссылка = &ПланРабот
		|	И ПланРаботФронтРабот.Месяц = &Месяц
		|	И ПланРаботФронтРабот.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ПланРаботФронтРабот.ТарифнаяСтавка";

	Запрос.УстановитьПараметр("Месяц", 		ПериодРегистрации);
	Запрос.УстановитьПараметр("ПланРабот", 	ПланРабот);

	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Сортировать("ТарифнаяСтавка");
	

	тзЗакрыто = РабочееВремя.Выгрузить();
	тзЗакрыто.Свернуть("ТарифнаяСтавка", "Количество");
	тзЗакрыто.Сортировать("ТарифнаяСтавка");
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = "";
	
	
	Совпадают = Истина;
	Если тзЗакрыто.Количество() = Результат.Количество() Тогда
		Для Н = 1 ПО тзЗакрыто.Количество() Цикл
			Если тзЗакрыто[Н-1].ТарифнаяСтавка <> Результат[Н-1].ТарифнаяСтавка  Тогда
				Сообщение.Текст = ?(ЗначениеЗаполнено(Сообщение.Текст), Символы.ПС, "") + Сообщение.Текст + 
								"ТС плана работ " + Результат[Н-1].ТарифнаяСтавка + " не соответствует ТС табеля " + тзЗакрыто[Н-1].ТарифнаяСтавка;

				Совпадают = Ложь;
			КонецЕсли;
			Если тзЗакрыто[Н-1].Количество <> Результат[Н-1].Количество  Тогда
				Сообщение.Текст = ?(ЗначениеЗаполнено(Сообщение.Текст), Символы.ПС, "") + Сообщение.Текст + 
								"по ТС " + тзЗакрыто[Н-1].ТарифнаяСтавка + " в плане работ " + Результат[Н-1].Количество + " часов, в табеле " + тзЗакрыто[Н-1].Количество + " часов";
				Совпадают = Ложь;
			КонецЕсли;
		КонецЦикла;
	Иначе 
		Сообщение.Текст = ?(ЗначениеЗаполнено(Сообщение.Текст), Символы.ПС, "") + Сообщение.Текст + 
						"не совпадает количество ТС в плане работ: " + Результат.Количество() + ", в табеле: " + тзЗакрыто.Количество();
		Совпадают = Ложь;
	КонецЕсли;
	
	//
	Если НЕ Совпадают Тогда
		Сообщение.Сообщить();
		Возврат Истина;
	КонецЕсли;
		
	Возврат Ложь;

КонецФункции

Функция ДанныеИзТабелейПодразделений()
	ФизическиеЛица = Ссылка.РабочееВремя.ВыгрузитьКолонку( "ФизическоеЛицо" );
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабельПодразделенияРабочееВремя.ФизическоеЛицо,
		|	ТабельПодразделенияРабочееВремя.ТарифнаяСтавка,
		|	СУММА(ТабельПодразделенияРабочееВремя.КоличествоТЗП) КАК КоличествоТЗП
		|ИЗ
		|	Документ.ТабельПодразделения.РабочееВремя КАК ТабельПодразделенияРабочееВремя
		|ГДЕ
		|	ТабельПодразделенияРабочееВремя.Ссылка.Проведен
		|	И ТабельПодразделенияРабочееВремя.Ссылка.ПериодРегистрации = &ПериодРегистрации
		|	И ТабельПодразделенияРабочееВремя.ФизическоеЛицо В(&ФизическиеЛица)
		|	И ТабельПодразделенияРабочееВремя.Основание = &ПланРабот
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабельПодразделенияРабочееВремя.ФизическоеЛицо,
		|	ТабельПодразделенияРабочееВремя.ТарифнаяСтавка";

	Запрос.УстановитьПараметр("ПериодРегистрации", 	Ссылка.ПериодРегистрации);
	Запрос.УстановитьПараметр("ПланРабот", 			Ссылка.ПланРабот);
	
	// сотрудники 
	Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);

	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;

	
КонецФункции

// табели подразделений блокируют изменения в табеле сотрудников
// по своим сотрудникам сотрудникам
Функция НеСоответствуетТабелямПодразделений()
	// для контроля
	тзРВ = Ссылка.РабочееВремя.Выгрузить();
	// без учеета должности
	тзРВ.Свернуть( "ФизическоеЛицо,ТарифнаяСтавка", "Количество");
	
	НеСоответствуетТП = Ложь;
	
	// сгруппированы по Сотрудник + НормаСтоимости
	// все найденные записи должны совпадать 
	// с текущим документом
	ДанныеИзТабелейПодр = ДанныеИзТабелейПодразделений();
	Для Каждого СтрТП ИЗ ДанныеИзТабелейПодр  Цикл
		КоличествоПоТабелюП = СтрТП.КоличествоТЗП;
		
		Отбор = Новый Структура("ФизическоеЛицо,ТарифнаяСтавка", СтрТП.ФизическоеЛицо,СтрТП.ТарифнаяСтавка);
		мСтрок =  тзРВ.НайтиСтроки( Отбор );
		Если мСтрок.Количество() = 0 Тогда
			КоличествоПоТабелюЗП = 0;
		Иначе
			КоличествоПоТабелюЗП = мСтрок[0].Количество;
		КонецЕсли;	
		
		Если КоличествоПоТабелюП <> КоличествоПоТабелюЗП Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "! " + СтрТП.ФизическоеЛицо + " по " +
					СтрТП.ТарифнаяСтавка + 
					" по табелю подразделений = " 	+ КоличествоПоТабелюП + 
					" часов, в текущем табеле " 	+ КоличествоПоТабелюЗП + " часов";
			Сообщение.Сообщить();
			
			НеСоответствуетТП = Истина;
		КонецЕсли;
	КонецЦикла;

	Возврат НеСоответствуетТП;
КонецФункции


Процедура ОбработкаПроведения(Отказ, Режим)
	

	Если УП_ПланыРаботПоПроектам.ТабельРаботПоЗадачеПроектаУжеСуществует( Ссылка, ПланРабот, ПериодРегистрации  ) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	
	Если ЗакрытоНеПоПлануРабот()	Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// утверждено табелем подразделения по сотрудникам
	Если НеСоответствуетТабелямПодразделений() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
		
	// сворачиваем по тарифной ставке стоимости и подразделению
	тзРВ = РабочееВремя.Выгрузить();
	тзРВ.Свернуть("ТарифнаяСтавка,Подразделение,Должность", "Количество");
	ИтогиПоТарифС 	= Новый Соответствие;
	ИтогиПоПодр		= Новый Соответствие;
	
	//
	// 2014 12 24 закрываем в показателях планирования
	// для фонда подразделения суммируем по ставке закрытия
	Для Каждого СтрРВ ИЗ тзРВ Цикл
		
		// 2015 10 02
		Если ПланРабот.БезКоэффициентовФОТ Тогда
			// 2014 10 25 
			Цена	= ПоказательТарифнойСтавки( СтрРВ.ТарифнаяСтавка, ПериодРегистрации, "СтавкаФОТ");  // цена за час
			
		ИначеЕсли ПланРабот.ЗадачаПроекта.Владелец.ГодПроекта >= 2017 Тогда
			// 2017 01 10
			Цена 	= ПоказательТарифнойСтавки( СтрРВ.ТарифнаяСтавка, ПериодРегистрации, "СтавкаФОТ"); // цена за час
		
		Иначе
		
			// 2014 12 24 закрываем в показателях планирования
			//Цена	= СтавкаФОТПодразделения( СтрРВ.Подразделение, СтрРВ.ТарифнаяСтавка, ПериодРегистрации );
			// 2014 12 16
			Цена	= СтавкаФОТПодразделенияЗакрытия( СтрРВ.Подразделение, СтрРВ.ТарифнаяСтавка, ПериодРегистрации );
		КонецЕсли;
		
		Сумма	= Цена * СтрРВ.Количество;
		
		// складываем количество
		КолТС 	= ИтогиПоТарифС.Получить( СтрРВ.ТарифнаяСтавка );
		Если КолТС = Неопределено Тогда
			КолТС = 0;
		КонецЕсли;
		ИтогиПоТарифС.Вставить( СтрРВ.ТарифнаяСтавка, КолТС + СтрРВ.Количество);
		
		// складываем сумма
		СуммаПодр = ИтогиПоПодр.Получить( СтрРВ.Подразделение );
		Если СуммаПодр = Неопределено Тогда
			СуммаПодр = 0;
		КонецЕсли;
		ИтогиПоПодр.Вставить( СтрРВ.Подразделение, СуммаПодр + Сумма);
		
		
		
	КонецЦикла;
	
	// для отладки
	БезДолжности 					= Ложь;
	Движения.ФронтРабот.Записывать 	= Истина;
	ИтСумма 						= 0;
	

	// во фронт работ и
	// в бюджет по месяцам считаем по ставкам планирования
	// по тарифным ставкам и должностям
	тзРВ.Свернуть("ТарифнаяСтавка,Должность", "Количество");
	Для Каждого СтрРВ ИЗ тзРВ Цикл
		Движение 				= Движения.ФронтРабот.Добавить();
		Движение.Период 		= Дата;
		Движение.ПланРабот 		= ПланРабот;
		ЗаполнитьЗначенияСвойств( Движение, СтрРВ );
		Движение.Месяц 			= НачалоМесяца( ПериодРегистрации);
		Движение.ТипСуммы 		= 1;
		
		// 	повторно
		// 2015 10 02
		Если ПланРабот.БезКоэффициентовФОТ Тогда
			Цена	= ПоказательТарифнойСтавки( СтрРВ.ТарифнаяСтавка, ПериодРегистрации, "СтавкаФОТ");  // цена за час
			
		ИначеЕсли ПланРабот.ЗадачаПроекта.Владелец.ГодПроекта >= 2017 Тогда
			// 2017 01 10
			Цена 	= ПоказательТарифнойСтавки( СтрРВ.ТарифнаяСтавка, ПериодРегистрации, "СтавкаФОТ"); // цена за час
				
		Иначе
			// 2014 12 24 закрываем в показателях планирования
			Цена					= СтавкаФОТПодразделения( ПланРабот.Подразделение, СтрРВ.ТарифнаяСтавка, ПериодРегистрации );
			// 2014 12 16
			//Цена					= СтавкаФОТПодразделенияЗакрытия( ПланРабот.Подразделение, СтрРВ.ТарифнаяСтавка, ПериодРегистрации );
		КонецЕсли;
		
		Сумма					= Цена * СтрРВ.Количество;
		Движение.Сумма	 		= Сумма;
		//
		ИтСумма 				= ИтСумма  + Сумма;
		
	КонецЦикла;
		
	// регистр фонд подразделения  
	ГодФонда = ГодФондаПодразделения( ПериодРегистрации );
	Движения.ФондПодразделений.Записывать = Истина;
	// в подразделения сотрудников
	Для Каждого Эл ИЗ ИтогиПоПодр Цикл
		Движение 				= Движения.ФондПодразделений.ДобавитьПриход();
		Движение.Период 		= ПериодРегистрации;
		Движение.Подразделение  = Эл.Ключ;
		Движение.Год			= ГодФонда;
		Движение.Сумма			= Эл.Значение;
	КонецЦикла;	
	
	// в регистр закрытия плана работ записываем в суммах планирования
	Движения.ЗакрытиеПлановРабот.Записывать = Истина;
	Движение = Движения.ЗакрытиеПлановРабот.Добавить();
	Движение.Период			= НачалоМесяца( ПериодРегистрации );
	Движение.ЗадачаПроекта 	= ПланРабот.ЗадачаПроекта;
	Движение.ПланРабот		= ПланРабот;
	СуммаФронтаРабот 	= ПланРабот.ФронтРабот.Итог("Сумма");
	ОстатокПоСмете		= ПланРабот.ОстатокПоСмете;
	// сумма закрытого фронта работ по отношению к сумме по смете 
	Движение.ПроцентСмета	= Окр( ИтСумма / (СуммаФронтаРабот + ОстатокПоСмете) * 100, 1);
	// сумма закрытого по отношению к сумме фронта работ
	Движение.ПроцентФР		= Окр( ИтСумма / СуммаФронтаРабот * 100, 1);
	// доля закрытого объема работ за текущий месяц, устанавливается в документе
	Движение.ПроцентФакт	= ПроцентЗакрытия;
	
	// регистр БюджетПоМесяцам 
	Движения.БюджетПоМесяцам.Записывать = Истина;
	сСметы =  Новый Соответствие;
	сСтатей = Новый Соответствие;
	пСтатей = Новый Соответствие;            
	oСтатей = Новый Соответствие;
	УП_СметаПроекта.ПодготовкаФактБюджета(сСметы, сСтатей, пСтатей, oСтатей, ПланРабот.ЗадачаПроекта);	
	
	ФОТ_ПП = Справочники.СтатьиСметы.ФОТ_ПП.ИмяПредопределенныхДанных;
	сСтатей[ФОТ_ПП] = ИтСумма; 
	
	УП_СметаПроекта.ПроведениеФактБюджета(сСметы, сСтатей, oСтатей, Движения, ПланРабот.ЗадачаПроекта, 
		ПериодРегистрации, Дата);
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	// если что-то есть в табеле подразделений, то нельзя отменять !!!
	// но если очень хочется, то можно =)
	// Условие добавлено по задаче 131714 от 09.07.2018
	Если Константы.РежимРаботы.Получить() = Перечисления.РежимыРаботы.Штатный Тогда 
		ДанныеИзТабелейПодр = ДанныеИзТабелейПодразделений();
		Если ДанныеИзТабелейПодр.Количество() <> 0 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Невозможно отменить " + Ссылка + ", есть данные, зафиксированнные табелем подразделения";
			Сообщение.Сообщить();
			
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
