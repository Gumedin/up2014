
&НаСервереБезКонтекста
Функция ДоступныеФизЛица( ФизическоеЛицо )
	Возврат СКД_ДоступныеФЛ( ФизическоеЛицо );
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ТекущийПроектМенеджер = ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо;
	//мПользователей = СКД_ДоступныеФЛ( ТекущийПроектМенеджер );
	мПользователей = ДоступныеФизЛица( ТекущийПроектМенеджер );
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора( Список.Отбор,
		"ПланРабот.ЗадачаПроекта.ПроектМенеджер",
		мПользователей,
		ВидСравненияКомпоновкиДанных.ВСписке,,Истина);


КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзмененСписок_ТабельРЗП" Тогда
		мПользователей = ДоступныеФизЛица( ТекущийПроектМенеджер );
		Если мПользователей.Найти( Параметр ) <> Неопределено Тогда
		// пересчитываем список документов
			Элементы.Список.Обновить();
		КонецЕсли;

		
	КонецЕсли;
КонецПроцедуры

#Область ЗаполнениеДокументовПоМенеджеру

&НаКлиенте
Процедура СформироватьДокументы( Вариант = 1)
	
	ПериодРегистрации 	= НачалоМесяца( ТекущаяДата() );
	ОпОповещения = Новый ОписаниеОповещения("ПослеВводаДаты", ЭтаФорма, Вариант );
	ПоказатьВводДаты( ОпОповещения, ПериодРегистрации, "Период регистрации документов", ЧастиДаты.Дата );
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеВводаДаты( ПериодРегистрации, ДопПарам ) Экспорт
	Если НЕ ЗначениеЗаполнено( ПериодРегистрации ) Тогда 
		Возврат;
	КонецЕсли;
	// 
	ВыбратьМенеджераПроекта( ПериодРегистрации, ДопПарам );
КонецПроцедуры	

// Вариант = 1 - по ТРВ
//			 2 - посещениям
&НаСервере
Функция СписокКлиентМенеджеровДляЗакрытия( ТекущийПроектМенеджер, ПериодРегистрации, Вариант )
	спМенеджеров	= Новый СписокЗначений;
	// диспетчируемые физические лица
	ДоступныеФизЛица  	= ДоступныеФизЛица( ТекущийПроектМенеджер );
	Если Вариант = 1 Тогда
	// по табелям рабочего времени
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТабельУчетаРабочегоВремениРабочееВремя.Основание.ЗадачаПроекта.ПроектМенеджер КАК ПроектМенеджер
			|ПОМЕСТИТЬ ВТ_Менеджеры
			|ИЗ
			|	Документ.ТабельУчетаРабочегоВремени.РабочееВремя КАК ТабельУчетаРабочегоВремениРабочееВремя
			|ГДЕ
			|	ТИПЗНАЧЕНИЯ(ТабельУчетаРабочегоВремениРабочееВремя.Основание) = ТИП(Документ.ПланРабот)
			|	И ТабельУчетаРабочегоВремениРабочееВремя.ДатаТабеля МЕЖДУ &НачалоПериода И &КонецПериода
			|	И ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.Проведен
			|	И ТабельУчетаРабочегоВремениРабочееВремя.Основание.ЗадачаПроекта.ПроектМенеджер В(&ДоступныеФизЛица)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.ПроектМенеджер
			|ИЗ
			|	РегистрНакопления.ФронтРабот.Обороты КАК ФронтРаботОбороты
			|ГДЕ
			|	ФронтРаботОбороты.Месяц = &Месяц
			|	И ФронтРаботОбороты.ТипСуммы = &ТипСуммы
			|	И ФронтРаботОбороты.СуммаОборот <> 0
			|	И ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.ПроектМенеджер В(&ДоступныеФизЛица)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВТ_Менеджеры.ПроектМенеджер
			|ИЗ
			|	ВТ_Менеджеры КАК ВТ_Менеджеры";
			
			//"ВЫБРАТЬ РАЗЛИЧНЫЕ
			//|	ТабельУчетаРабочегоВремениРабочееВремя.Основание.ЗадачаПроекта.ПроектМенеджер КАК ПроектМенеджер
			//|ИЗ
			//|	Документ.ТабельУчетаРабочегоВремени.РабочееВремя КАК ТабельУчетаРабочегоВремениРабочееВремя
			//|ГДЕ
			//|	ТИПЗНАЧЕНИЯ(ТабельУчетаРабочегоВремениРабочееВремя.Основание) = ТИП(Документ.ПланРабот)
			//|	И ТабельУчетаРабочегоВремениРабочееВремя.ДатаТабеля МЕЖДУ &НачалоПериода И &КонецПериода
			//|	И ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.Проведен
			//|	И ТабельУчетаРабочегоВремениРабочееВремя.Основание.ЗадачаПроекта.ПроектМенеджер В(&ДоступныеФизЛица)";
			
		Запрос.УстановитьПараметр("Месяц", 		НачалоМесяца( ПериодРегистрации));
		Запрос.УстановитьПараметр("ТипСуммы", 	0);
			
	Иначе
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПосещенияКонтрагентов.ПредметПосещения.ЗадачаПроекта.ПроектМенеджер КАК ПроектМенеджер
			|ИЗ
			|	Справочник.ПосещенияКонтрагентов КАК ПосещенияКонтрагентов
			|ГДЕ
			|	ПосещенияКонтрагентов.Отработано
			|	И НЕ ПосещенияКонтрагентов.ПометкаУдаления
			|	И ТИПЗНАЧЕНИЯ(ПосещенияКонтрагентов.ПредметПосещения) = ТИП(Документ.ПланРабот)
			|	И ПосещенияКонтрагентов.ПредметПосещения.ЗадачаПроекта.ПроектМенеджер В(&ДоступныеФизЛица)
			|	И ПосещенияКонтрагентов.Дата МЕЖДУ &НачалоПериода И &КонецПериода";
	
		
	КонецЕсли;
	Запрос.УстановитьПараметр("НачалоПериода", 		НачалоМесяца( ПериодРегистрации));
	Запрос.УстановитьПараметр("КонецПериода", 		КонецМесяца( ПериодРегистрации));
	Запрос.УстановитьПараметр("ДоступныеФизЛица", 	ДоступныеФизЛица);

	РезультатЗапроса = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ПроектМенеджер");
	спМенеджеров.ЗагрузитьЗначения(РезультатЗапроса);
	Возврат спМенеджеров;
	
КонецФункции

// Вариант = 1 - по ТРВ
//			 2 - посещениям
&НаКлиенте
Процедура ВыбратьМенеджераПроекта( ПериодРегистрации, Вариант )
	// есть объекты для закрытия в закрываемом месяце
	спПользователей = СписокКлиентМенеджеровДляЗакрытия( ТекущийПроектМенеджер, ПериодРегистрации, Вариант );
	Если спПользователей.Количество() = 0 Тогда
		ПоказатьПредупреждение(,"Нет данных для заполнения документов");
		Возврат;
	КонецЕсли;
	ДопПарам = Новый Структура;
	ДопПарам.Вставить("Вариант", Вариант);
	ДопПарам.Вставить("ПериодРегистрации", НачалоМесяца(ПериодРегистрации));
	
	Если спПользователей.Количество() > 1 Тогда
		// 
		ОпОповещения = Новый ОписаниеОповещения("ПослеВыбораПроектМенеджера", ЭтаФорма, ДопПарам );
		спПользователей.ПоказатьВыборЭлемента(ОпОповещения, "Выберите проект-менеджера" );
	Иначе
		//спПользователей[0];
		ПослеВыбораПроектМенеджера( спПользователей[0], ДопПарам);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораПроектМенеджера( ПроектМенеджер, ДопПарам ) Экспорт
	Если ПроектМенеджер = Неопределено Тогда Возврат; КонецЕсли;
	
	ДопПараметры    = Новый Структура;
	ДопПараметры.Вставить("ПроектМенеджер", 	ПроектМенеджер.Значение );
	ДопПараметры.Вставить("ПериодРегистрации", 	ДопПарам.ПериодРегистрации );
	ДопПараметры.Вставить("Вариант", 			ДопПарам.Вариант );
	ОпОповещения		= Новый ОписаниеОповещения( "СформироватьДокументыПослеВопроса", ЭтаФорма, ДопПараметры );
	ПоказатьВопрос(ОпОповещения,"Сформировать документы за " + Формат( ДопПарам.ПериодРегистрации, "ДФ='ММММ гггг'") +
								" по проект-менеджеру " + ПроектМенеджер +"?", РежимДиалогаВопрос.ДаНет)
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументыПослеВопроса( РезультатВопроса, ДопПараметры ) Экспорт
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	КолДокументов 	= СформироватьДокументыПоМенеджеруЗадач_НаСервере( ДопПараметры );
	Сообщение 		= Новый СообщениеПользователю;
	Сообщение.Текст = "Сформировано " + КолДокументов + " документов"; 
	Сообщение.Сообщить();
	
	// обновляем
	Оповестить("ИзмененСписок_ТабельРЗП", ДопПараметры.ПроектМенеджер, ЭтаФорма );
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция МассивПлановРаботПоПроектМенеджеру( ПроектМенеджер, ПериодРегистрации, Вариант ) 
	Если Вариант = 1 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ТабельУчетаРабочегоВремениРабочееВремя.Основание КАК ПланРабот
			|ПОМЕСТИТЬ ВТ_ПланыРабот
			|ИЗ
			|	Документ.ТабельУчетаРабочегоВремени.РабочееВремя КАК ТабельУчетаРабочегоВремениРабочееВремя
			|ГДЕ
			|	ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.ПериодРегистрации = &ПериодРегистрации
			|	И ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.Проведен
			|	И ТабельУчетаРабочегоВремениРабочееВремя.Основание.ЗадачаПроекта.ПроектМенеджер = &ПроектМенеджер
			|	И ТИПЗНАЧЕНИЯ(ТабельУчетаРабочегоВремениРабочееВремя.Основание) = ТИП(Документ.ПланРабот)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ФронтРаботОбороты.ПланРабот.Ссылка
			|ИЗ
			|	РегистрНакопления.ФронтРабот.Обороты КАК ФронтРаботОбороты
			|ГДЕ
			|	ФронтРаботОбороты.Месяц = &ПериодРегистрации
			|	И ФронтРаботОбороты.ТипСуммы = 0
			|	И ФронтРаботОбороты.ПланРабот.ЗадачаПроекта.ПроектМенеджер = &ПроектМенеджер
			|	И ФронтРаботОбороты.СуммаОборот <> 0
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ВТ_ПланыРабот.ПланРабот.Ссылка КАК ПланРабот
			|ИЗ
			|	ВТ_ПланыРабот КАК ВТ_ПланыРабот";
		
		
			//"ВЫБРАТЬ РАЗЛИЧНЫЕ
			//|	ТабельУчетаРабочегоВремениРабочееВремя.Основание КАК ПланРабот
			//|ИЗ
			//|	Документ.ТабельУчетаРабочегоВремени.РабочееВремя КАК ТабельУчетаРабочегоВремениРабочееВремя
			//|ГДЕ
			//|	ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.ПериодРегистрации = &ПериодРегистрации
			//|	И ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.Проведен
			//|	И ТабельУчетаРабочегоВремениРабочееВремя.Основание.ЗадачаПроекта.ПроектМенеджер = &ПроектМенеджер";
		
		Запрос.УстановитьПараметр("ПериодРегистрации", 	НачалоМесяца( ПериодРегистрации));
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ПосещенияКонтрагентов.ПредметПосещения КАК ПланРабот
			|ИЗ
			|	Справочник.ПосещенияКонтрагентов КАК ПосещенияКонтрагентов
			|ГДЕ
			|	ПосещенияКонтрагентов.Отработано
			|	И НЕ ПосещенияКонтрагентов.ПометкаУдаления
			|	И ПосещенияКонтрагентов.ПредметПосещения.ЗадачаПроекта.ПроектМенеджер = &ПроектМенеджер
			|	И ПосещенияКонтрагентов.Дата МЕЖДУ &НачалоПериода И &КонецПериода
			|	И ТИПЗНАЧЕНИЯ(ПосещенияКонтрагентов.ПредметПосещения) = ТИП(Документ.ПланРабот)";
		
		Запрос.УстановитьПараметр("НачалоПериода", 	НачалоМесяца( ПериодРегистрации));
		Запрос.УстановитьПараметр("КонецПериода", 	КонецМесяца( ПериодРегистрации));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПроектМенеджер", ПроектМенеджер);
	
	
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку( "ПланРабот");
	Возврат Результат;

КонецФункции


&НаСервереБезКонтекста
Функция СформироватьДокументыПоМенеджеруЗадач_НаСервере( Парам )
	// заглушка
	ТабельЗП = Документы.ТабельРаботПоЗадачеПроекта.ПустаяСсылка();
	Н = 0;
	
	//
	ПроектМенеджер 		= Парам.ПроектМенеджер;
	ПериодРегистрации	= Парам.ПериодРегистрации;
	Вариант				= Парам.Вариант;
	

	// с учетом варианта заполнения
	мПлановРабот 		= МассивПлановРаботПоПроектМенеджеру( ПроектМенеджер, ПериодРегистрации, Вариант );
	
	Для Каждого ПланРабот ИЗ мПлановРабот Цикл
		Если УП_ПланыРаботПоПроектам.ТабельРаботПоЗадачеПроектаУжеСуществует( ТабельЗП, ПланРабот, ПериодРегистрации  ) Тогда
			Продолжить;
		КонецЕсли;
		
		// проверяем, что документ еще нет !!!
		ДокОб 						= Документы.ТабельРаботПоЗадачеПроекта.СоздатьДокумент();
		ДокОб.Дата 					= ТекущаяДата();
		ДокОб.ИсполнительДокумента 	= ПараметрыСеанса.ТекущийПользователь;
		ДокОб.ПериодРегистрации		= ПериодРегистрации;
		ДокОб.ПланРабот				= ПланРабот;
		
		Если Вариант = 1 Тогда
			// заполняем рабочее время
			СоставДокумента = УП_ПланыРаботПоПроектам.ОтметкиРабочегоВремениПоПлануРабот( ПериодРегистрации, ПланРабот );
			ДокОб.РабочееВремя.Загрузить( СоставДокумента );
		Иначе
			Посещения = УП_РаботаСРабочимКалендаремСервер.ПолучитьПосещенияПоПредметуПосещенияЗаМесяц( ПланРабот, ПериодРегистрации);
			Для Каждого СтрПосещения ИЗ Посещения Цикл
				СтрДок = ДокОб.РабочееВремя.Добавить();
				ЗаполнитьЗначенияСвойств( СтрДок, СтрПосещения );
				// изменяем 
				СтрДок.Количество 	= СтрПосещения.Часов;
				СтрДок.Должность	= СтрПосещения.Уточнение;
				Если НЕ ЗначениеЗаполнено( СтрДок.Должность ) Тогда
					СтрДок.Должность =  УП_КадрыСервер.ПроизводственнаяДолжностьФизЛица( СтрДок.ФизическоеЛицо, СтрДок.Подразделение, СтрДок.ДатаТабеля );
				КонецЕсли;
				Если НЕ ЗначениеЗаполнено( СтрДок.ТарифнаяСтавка ) Тогда
					СтрДок.ТарифнаяСтавка = УП_КадрыСервер.СтавкаПоДолжности( СтрДок.Должность );
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;	
		
		Попытка 
			ДокОб.Записать();
		Исключение
			Сообщить(ОписаниеОшибки());
		КонецПопытки;
		Н = Н + 1;
	КонецЦикла;
	
	
	Возврат Н;
КонецФункции



&НаКлиенте
Процедура СформироватьТабелямРабочегоВремени(Команда)
	СформироватьДокументы( 1);
КонецПроцедуры


&НаКлиенте
Процедура СформироватьПоПосещениям(Команда)
	СформироватьДокументы( 2);
КонецПроцедуры



#КонецОбласти