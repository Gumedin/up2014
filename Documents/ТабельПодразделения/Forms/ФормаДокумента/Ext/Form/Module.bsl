&НаСервере
Процедура ЗаполнитьПоТЗП_НаСервере()
	Документ = РеквизитФормыВЗначение("Объект");
	//Документ = Документы.ТабельПодразделения.СоздатьДокумент();

	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ТабельРаботПоЗадачеПроектаРабочееВремя.ФизическоеЛицо,
	//	|	ТабельРаботПоЗадачеПроектаРабочееВремя.Ссылка.ПланРабот КАК Основание,
	//	|	ТабельРаботПоЗадачеПроектаРабочееВремя.ТарифнаяСтавка,
	//	|	СУММА(0) КАК КоличествоТРВ,
	//	|	СУММА(ТабельРаботПоЗадачеПроектаРабочееВремя.Количество) КАК КоличествоТЗП
	//	|ИЗ
	//	|	Документ.ТабельРаботПоЗадачеПроекта.РабочееВремя КАК ТабельРаботПоЗадачеПроектаРабочееВремя
	//	|ГДЕ
	//	|	ТабельРаботПоЗадачеПроектаРабочееВремя.Ссылка.ПериодРегистрации = &ПериодРегистрации
	//	|	И ТабельРаботПоЗадачеПроектаРабочееВремя.ФизическоеЛицо В(&ФизическиеЛица)
	//	|	И ТабельРаботПоЗадачеПроектаРабочееВремя.Ссылка.Проведен
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ТабельРаботПоЗадачеПроектаРабочееВремя.ФизическоеЛицо,
	//	|	ТабельРаботПоЗадачеПроектаРабочееВремя.ТарифнаяСтавка,
	//	|	ТабельРаботПоЗадачеПроектаРабочееВремя.Ссылка.ПланРабот";

	
	// включая должность
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабельРаботПоЗадачеПроектаРабочееВремя.ФизическоеЛицо,
		|	ТабельРаботПоЗадачеПроектаРабочееВремя.Ссылка.ПланРабот КАК Основание,
		|	ТабельРаботПоЗадачеПроектаРабочееВремя.ТарифнаяСтавка,
		|	СУММА(0) КАК КоличествоТРВ,
		|	СУММА(ТабельРаботПоЗадачеПроектаРабочееВремя.Количество) КАК КоличествоТЗП,
		|	ТабельРаботПоЗадачеПроектаРабочееВремя.Должность
		|ИЗ
		|	Документ.ТабельРаботПоЗадачеПроекта.РабочееВремя КАК ТабельРаботПоЗадачеПроектаРабочееВремя
		|ГДЕ
		|	ТабельРаботПоЗадачеПроектаРабочееВремя.Ссылка.ПериодРегистрации = &ПериодРегистрации
		|	И ТабельРаботПоЗадачеПроектаРабочееВремя.ФизическоеЛицо В(&ФизическиеЛица)
		|	И ТабельРаботПоЗадачеПроектаРабочееВремя.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабельРаботПоЗадачеПроектаРабочееВремя.ФизическоеЛицо,
		|	ТабельРаботПоЗадачеПроектаРабочееВремя.ТарифнаяСтавка,
		|	ТабельРаботПоЗадачеПроектаРабочееВремя.Ссылка.ПланРабот,
		|	ТабельРаботПоЗадачеПроектаРабочееВремя.Должность";
	
	
	Запрос.УстановитьПараметр("ПериодРегистрации", 	Документ.ПериодРегистрации);
	Запрос.УстановитьПараметр("ОтметкаТабеля", 		Справочники.ОтметкиТабеля.НайтиПоКоду("02"));
	Запрос.УстановитьПараметр("ФизическиеЛица", 	Документ.РабочееВремя.ВыгрузитьКолонку("ФизическоеЛицо"));

	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрРез ИЗ Результат Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("ФизическоеЛицо", 	СтрРез.ФизическоеЛицо );
		Отбор.Вставить("ТарифнаяСтавка", 	СтрРез.ТарифнаяСтавка);
		Отбор.Вставить("Должность", 		СтрРез.Должность);
		Отбор.Вставить("Основание",			СтрРез.Основание);
		
		мСтрок = Документ.РабочееВремя.НайтиСтроки( Отбор );
		Если мСтрок.Количество() = 0 Тогда
			СтрДок = Документ.РабочееВремя.Добавить();
			ЗаполнитьЗначенияСвойств( СтрДок, СтрРез );
		Иначе
			СтрДок = мСтрок[0];
			СтрДок.КоличествоТЗП = СтрРез.КоличествоТЗП;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр ИЗ Документ.РабочееВремя Цикл
		Стр.Количество = Стр.КоличествоТЗП - Стр.КоличествоТРВ;
	КонецЦикла;
	
	Документ.РабочееВремя.Сортировать("ФизическоеЛицо,ТарифнаяСтавка,Основание");
	ЗначениеВРеквизитФормы( Документ, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоТЗП(Команда)
	ЗаполнитьПоТЗП_НаСервере();
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

// 2017 06 06 
// тарифная ставка сотрудника берется из регистра сведений
&НаСервере
Процедура ЗаполнитьПоТРВ_НаСервере( ЗаполнятьТЧДокумента = Истина, ЗаполнятьТзРВС = Истина )
	
	Если НЕ (ЗаполнятьТЧДокумента ИЛИ ЗаполнятьТзРВС ) Тогда
		Возврат;
	КонецЕсли;
	//
	Документ = РеквизитФормыВЗначение("Объект");
	
	Если ЗаполнятьТЧДокумента Тогда
		Документ.РабочееВремя.Очистить();
	КонецЕсли;
	
	Если 	ЗаполнятьТзРВС			Тогда
		РабочееВремяСотрудника.Очистить();
	КонецЕсли;
	

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ТабельУчетаРабочегоВремениРабочееВремя.Основание) = ТИП(Документ.ПланРабот)
		|			ТОГДА ТабельУчетаРабочегоВремениРабочееВремя.Основание
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ПланРабот.ПустаяСсылка)
		|	КОНЕЦ КАК Основание,
		|	КатегорияСотрудниковСрезПоследних.ТарифнаяСтавка КАК ТарифнаяСтавка,
		|	СУММА(ВЫБОР
		|			КОГДА ТИПЗНАЧЕНИЯ(ТабельУчетаРабочегоВремениРабочееВремя.Основание) = ТИП(Документ.ПланРабот)
		|					И ТабельУчетаРабочегоВремениРабочееВремя.Основание <> ЗНАЧЕНИЕ(Документ.ПланРабот.ПустаяСсылка)
		|				ТОГДА ТабельУчетаРабочегоВремениРабочееВремя.КоличествоЧасов
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоличествоТРВ,
		|	СУММА(ТабельУчетаРабочегоВремениРабочееВремя.КоличествоЧасов) КАК Количество,
		|	СУММА(0) КАК КоличествоТЗП,
		|	ТабельУчетаРабочегоВремениРабочееВремя.ОтметкаТабеля,
		|	ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.Должность
		|ИЗ
		|	Документ.ТабельУчетаРабочегоВремени.РабочееВремя КАК ТабельУчетаРабочегоВремениРабочееВремя
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифныеСтавкиФизическихЛиц.СрезПоследних(&ПериодРегистрации, ) КАК КатегорияСотрудниковСрезПоследних
		|		ПО ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.ФизическоеЛицо = КатегорияСотрудниковСрезПоследних.ФизическоеЛицо
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(ТабельУчетаРабочегоВремениРабочееВремя.ДатаТабеля, МЕСЯЦ) = &ПериодРегистрации
		|	И ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.Проведен
		|	И ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.Подразделение = &Подразделение
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.ФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ТабельУчетаРабочегоВремениРабочееВремя.Основание) = ТИП(Документ.ПланРабот)
		|			ТОГДА ТабельУчетаРабочегоВремениРабочееВремя.Основание
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ПланРабот.ПустаяСсылка)
		|	КОНЕЦ,
		|	КатегорияСотрудниковСрезПоследних.ТарифнаяСтавка,
		|	ТабельУчетаРабочегоВремениРабочееВремя.ОтметкаТабеля,
		|	ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.Должность
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	ТарифнаяСтавка";

	Запрос.УстановитьПараметр("ПериодРегистрации", 	Документ.ПериодРегистрации);
	Запрос.УстановитьПараметр("Подразделение", 		Документ.Подразделение);

	Результат = Запрос.Выполнить().Выгрузить();
	
	// формируем таблицу рабочего времени сотрудника
	Если ЗаполнятьТзРВС			Тогда

		тзРабочееВремя = Результат.Скопировать(,"ФизическоеЛицо,ОтметкаТабеля,КоличествоТРВ,Количество");
		тзРабочееВремя.Свернуть("ФизическоеЛицо,ОтметкаТабеля","КоличествоТРВ,Количество");
		Для Каждого Стр ИЗ тзРабочееВремя Цикл
			// вычитаем на часы по плану работ
			Стр.Количество = Стр.Количество - Стр.КоличествоТРВ;
			Если Стр.Количество <> 0 Тогда
				СтрРВС = РабочееВремяСотрудника.Добавить();
				ЗаполнитьЗначенияСвойств( СтрРВС, Стр );
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
		
	// если перезаполняем табличную часть документа
	Если ЗаполнятьТЧДокумента Тогда
	
		тзПоПланамРабот = Результат.Скопировать(,"Должность,ФизическоеЛицо,Основание,ТарифнаяСтавка,КоличествоТРВ");
		тзПоПланамРабот.Свернуть("Должность,ФизическоеЛицо,Основание,ТарифнаяСтавка", "КоличествоТРВ");
		тзПоПланамРабот.Сортировать("ФизическоеЛицо,Должность,ТарифнаяСтавка");
		
		Документ.РабочееВремя.Очистить();
		Для Каждого СтрППР ИЗ тзПоПланамРабот Цикл
			// 2017 06 06
			// тарифную ставку берем как в документе ТРЗП
			СтрППР.ТарифнаяСтавка = УточнитьТарифнуюСтавкуСотрудника( СтрППР, Документ.Подразделение, Документ.ПериодРегистрации );
			Если ЗначениеЗаполнено( СтрППР.Основание) И СтрППР.КоличествоТРВ <> 0 Тогда
				СтрД = Документ.РабочееВремя.Добавить();
				ЗаполнитьЗначенияСвойств( СтрД, СТрППР );
			КонецЕсли;
		КонецЦикла;
		
		ЗначениеВРеквизитФормы( Документ, "Объект");
	КонецЕсли;
	
	
КонецПроцедуры

// из документа ТРЗП
Функция УточнитьТарифнуюСтавкуСотрудника( СтрППР, Подразделение, ПериодРегистрации )
	тз 		= УП_КадрыСервер.СотрудникиФизЛица( СтрППР.ФизическоеЛицо, ПериодРегистрации );
	Отбор = Новый Структура();
	Отбор.Вставить("Должность", 	СтрППР.Должность);
	Отбор.Вставить("Подразделение", Подразделение);
	мСтрок = тз.НайтиСтроки(Отбор);
	
	Если мСтрок.Количество() <> 0 Тогда
		Возврат мСтрок[0].ТарифнаяСтавка;
	КонецЕсли;
	Возврат СтрППР.ТарифнаяСтавка; 
	
КонецФункции



//&НаСервере
//Процедура ЗаполнитьПоТРВ_НаСервере( ЗаполнятьТЧДокумента = Истина, ЗаполнятьТзРВС = Истина )
//	
//	Если НЕ (ЗаполнятьТЧДокумента ИЛИ ЗаполнятьТзРВС ) Тогда
//		Возврат;
//	КонецЕсли;
//	//
//	Документ = РеквизитФормыВЗначение("Объект");
//	
//	Если ЗаполнятьТЧДокумента Тогда
//		Документ.РабочееВремя.Очистить();
//	КонецЕсли;
//	
//	Если 	ЗаполнятьТзРВС			Тогда
//		РабочееВремяСотрудника.Очистить();
//	КонецЕсли;
//	

//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.ФизическоеЛицо КАК ФизическоеЛицо,
//		|	ВЫБОР
//		|		КОГДА ТИПЗНАЧЕНИЯ(ТабельУчетаРабочегоВремениРабочееВремя.Основание) = ТИП(Документ.ПланРабот)
//		|			ТОГДА ТабельУчетаРабочегоВремениРабочееВремя.Основание
//		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ПланРабот.ПустаяСсылка)
//		|	КОНЕЦ КАК Основание,
//		|	КатегорияСотрудниковСрезПоследних.ТарифнаяСтавка КАК ТарифнаяСтавка,
//		|	СУММА(ВЫБОР
//		|			КОГДА ТИПЗНАЧЕНИЯ(ТабельУчетаРабочегоВремениРабочееВремя.Основание) = ТИП(Документ.ПланРабот)
//		|					И ТабельУчетаРабочегоВремениРабочееВремя.Основание <> ЗНАЧЕНИЕ(Документ.ПланРабот.ПустаяСсылка)
//		|				ТОГДА ТабельУчетаРабочегоВремениРабочееВремя.КоличествоЧасов
//		|			ИНАЧЕ 0
//		|		КОНЕЦ) КАК КоличествоТРВ,
//		|	СУММА(ТабельУчетаРабочегоВремениРабочееВремя.КоличествоЧасов) КАК Количество,
//		|	СУММА(0) КАК КоличествоТЗП,
//		|	ТабельУчетаРабочегоВремениРабочееВремя.ОтметкаТабеля,
//		|	ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.Должность
//		|ИЗ
//		|	Документ.ТабельУчетаРабочегоВремени.РабочееВремя КАК ТабельУчетаРабочегоВремениРабочееВремя
//		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифныеСтавкиФизическихЛиц.СрезПоследних(&ПериодРегистрации, ) КАК КатегорияСотрудниковСрезПоследних
//		|		ПО ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.ФизическоеЛицо = КатегорияСотрудниковСрезПоследних.ФизическоеЛицо
//		|ГДЕ
//		|	НАЧАЛОПЕРИОДА(ТабельУчетаРабочегоВремениРабочееВремя.ДатаТабеля, МЕСЯЦ) = &ПериодРегистрации
//		|	И ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.Проведен
//		|	И ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.Подразделение = &Подразделение
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.ФизическоеЛицо,
//		|	ВЫБОР
//		|		КОГДА ТИПЗНАЧЕНИЯ(ТабельУчетаРабочегоВремениРабочееВремя.Основание) = ТИП(Документ.ПланРабот)
//		|			ТОГДА ТабельУчетаРабочегоВремениРабочееВремя.Основание
//		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ПланРабот.ПустаяСсылка)
//		|	КОНЕЦ,
//		|	КатегорияСотрудниковСрезПоследних.ТарифнаяСтавка,
//		|	ТабельУчетаРабочегоВремениРабочееВремя.ОтметкаТабеля,
//		|	ТабельУчетаРабочегоВремениРабочееВремя.Ссылка.Должность
//		|
//		|УПОРЯДОЧИТЬ ПО
//		|	ФизическоеЛицо,
//		|	ТарифнаяСтавка";

//	Запрос.УстановитьПараметр("ПериодРегистрации", 	Документ.ПериодРегистрации);
//	Запрос.УстановитьПараметр("Подразделение", 		Документ.Подразделение);

//	Результат = Запрос.Выполнить().Выгрузить();
//	
//	// формируем таблицу рабочего времени сотрудника
//	Если ЗаполнятьТзРВС			Тогда

//		тзРабочееВремя = Результат.Скопировать(,"ФизическоеЛицо,ОтметкаТабеля,КоличествоТРВ,Количество");
//		тзРабочееВремя.Свернуть("ФизическоеЛицо,ОтметкаТабеля","КоличествоТРВ,Количество");
//		Для Каждого Стр ИЗ тзРабочееВремя Цикл
//			// вычитаем на часы по плану работ
//			Стр.Количество = Стр.Количество - Стр.КоличествоТРВ;
//			Если Стр.Количество <> 0 Тогда
//				СтрРВС = РабочееВремяСотрудника.Добавить();
//				ЗаполнитьЗначенияСвойств( СтрРВС, Стр );
//			КонецЕсли;
//		КонецЦикла;
//	КонецЕсли;
//		
//		
//	// если перезаполняем табличную часть документа
//	Если ЗаполнятьТЧДокумента Тогда
//	
//		тзПоПланамРабот = Результат.Скопировать(,"Должность,ФизическоеЛицо,Основание,ТарифнаяСтавка,КоличествоТРВ");
//		тзПоПланамРабот.Свернуть("Должность,ФизическоеЛицо,Основание,ТарифнаяСтавка", "КоличествоТРВ");
//		тзПоПланамРабот.Сортировать("Должность,ФизическоеЛицо,ТарифнаяСтавка");
//		//
//		Документ.РабочееВремя.Очистить();
//		Для Каждого СтрППР ИЗ тзПоПланамРабот Цикл
//			Если ЗначениеЗаполнено( СтрППР.Основание) И СтрППР.КоличествоТРВ <> 0 Тогда
//				СтрД = Документ.РабочееВремя.Добавить();
//				ЗаполнитьЗначенияСвойств( СтрД, СТрППР );
//			КонецЕсли;
//		КонецЦикла;
//		
//		ЗначениеВРеквизитФормы( Документ, "Объект");
//	КонецЕсли;
//	
//	
//КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоТРВ(Команда)
	ЗаполнитьПоТРВ_НаСервере();
	ЭтаФорма.Модифицированность = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	Объект.ПериодРегистрации = НачалоМесяца( Объект.ПериодРегистрации );
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьПоТРВ_НаСервере( Ложь);
КонецПроцедуры

&НаСервере
Функция СписокСотрудников()
	м1 	= РабочееВремяСотрудника.Выгрузить( , "ФизическоеЛицо");
	м2 	= Объект.РабочееВремя.Выгрузить(, "ФизическоеЛицо");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВТ_м1.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_Сотрудники1
		|ИЗ
		|	&м1 КАК ВТ_м1
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	м2.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТ_Сотрудники2
		|ИЗ
		|	&м2 КАК м2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Сотрудники1.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВсеСотрудники
		|ИЗ
		|	ВТ_Сотрудники1 КАК ВТ_Сотрудники1
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_Сотрудники2.ФизическоеЛицо
		|ИЗ
		|	ВТ_Сотрудники2 КАК ВТ_Сотрудники2
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВсеСотрудники.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВсеСотрудники КАК ВсеСотрудники
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо";

		
	Запрос.УстановитьПараметр("м1",  м1  );
	Запрос.УстановитьПараметр("м2",  м2  );
	// возвращаем массив
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Сортировать( "ФизическоеЛицо");
    Возврат Результат.ВыгрузитьКолонку( "ФизическоеЛицо");
	
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТабельПодразделения( ТабДок, ВыводитьОснования = Истина )
	Макет 			= Документы.ТабельПодразделения.ПолучитьМакет( "ТабельПодразделения" );
	ЕстьТабели  	= (РабочееВремяСотрудника.Количество() > 0);
	Если ЕстьТабели Тогда
		тзТРВ = РабочееВремяСотрудника.Выгрузить();
		тзТРВ.Свернуть("ОтметкаТабеля", "Количество");
		тзТРВ.Сортировать("ОтметкаТабеля");
	КонецЕсли;
	//
	ЕстьПланыРабот	= (Объект.РабочееВремя.Количество() >0);
	Если ЕстьПланыРабот Тогда
		тзЗП = Объект.РабочееВремя.Выгрузить();
		тзЗП.Свернуть("Основание,ТарифнаяСтавка", "КоличествоТЗП,Количество");
		тзЗП.Сортировать("Основание,ТарифнаяСтавка");
	КонецЕсли;
	
	// шапка
	ОблШапка 	= Макет.ПолучитьОбласть("Шапка|Начало");
	ОблШапка.Параметры.Подразделение 		= Объект.Подразделение;
	ОблШапка.Параметры.ПериодРегистрации	= Формат( Объект.ПериодРегистрации, "ДФ='ММММ гггг'");
	ТабДок.Вывести( ОблШапка );
	// табели
	Если ЕстьТабели Тогда
		ОблНачТРВ = Макет.ПолучитьОбласть("Шапка|НачалоТРВ");
		ТабДок.Присоединить( ОблНачТРВ );
		Для Каждого сТРВ ИЗ тзТРВ Цикл
			ОблТРВ = Макет.ПолучитьОбласть("Шапка|ОтметкаТРВ");
			ЗаполнитьЗначенияСвойств( ОблТРВ.Параметры, сТРВ );
			ТабДок.Присоединить( ОблТРВ );
		КонецЦикла;
	КонецЕсли;
	
	// 
	Если ЕстьПланыРабот Тогда
		Если ВыводитьОснования Тогда
			Основание = Неопределено;
			
			ОблНачЗП = Макет.ПолучитьОбласть("Шапка|НачалоТЗП");
			ТабДок.Присоединить( ОблНачЗП );
			
			Для Каждого сЗП ИЗ тзЗП Цикл
				Если сЗП.Основание <> Основание Тогда
					ОблНачПР 	= Макет.ПолучитьОбласть("Шапка|НачалоПланаРабот");
					ЗаполнитьЗначенияСвойств( ОблНачПР.Параметры, сЗП );
					ТабДок.Присоединить( ОблНачПР );
					Основание 	= сЗП.Основание;
				КонецЕсли;
				
				ОблЗП = Макет.ПолучитьОбласть("Шапка|ПланРабот");
				ЗаполнитьЗначенияСвойств( ОблЗП.Параметры, сЗП );
				ТабДок.Присоединить( ОблЗП );
			КонецЦикла;
		Иначе
			// сводная отметка ТРВ
			ОблТРВ = Макет.ПолучитьОбласть("Шапка|ОтметкаТРВ");
			ОблТРВ.Параметры.ОтметкаТабеля = "По табелям задач проектов";
			ТабДок.Присоединить( ОблТРВ );
			
		КонецЕсли;
	КонецЕсли; 
	// итого
	ОблИтого = Макет.ПолучитьОбласть("Шапка|Итого");
	ТабДок.Присоединить( ОблИтого );
	
	
	ИтогоПоПодразделению = 0;
	
	// массив сотрудников
	мСотрудники = СписокСотрудников();
	Для Каждого ЭлСотрудник ИЗ мСотрудники Цикл
		ОблСтр = Макет.ПолучитьОбласть("Сотрудник|Начало");
		ОблСтр.Параметры.НомерСотрудника 	= мСотрудники.Найти( ЭлСотрудник ) + 1;
		ОблСтр.Параметры.ФизическоеЛицо		= ЭлСотрудник;
		ТабДок.Вывести(ОблСтр);
		ИтогоПоСотруднику = 0;
		
		// табели
		Если ЕстьТабели Тогда
			ОблНачТРВ = Макет.ПолучитьОбласть("Сотрудник|НачалоТРВ");
			ТабДок.Присоединить( ОблНачТРВ );
			Для Каждого сТРВ ИЗ тзТРВ Цикл
				ОблТРВ 	= Макет.ПолучитьОбласть("Сотрудник|ОтметкаТРВ");
				мС		= РабочееВремяСотрудника.НайтиСтроки( Новый Структура("ФизическоеЛицо,ОтметкаТабеля", ЭлСотрудник, сТРВ.ОтметкаТабеля ));
				Если мС.Количество() > 0 Тогда
					ОблТРВ.Параметры.КоличествоТРВ 	= мС[0].Количество;
					ИтогоПоСотруднику				= ИтогоПоСотруднику + мС[0].Количество;
				КонецЕсли;
				ТабДок.Присоединить( ОблТРВ );
			КонецЦикла;
		КонецЕсли;
	
		// табели задач проектов
		Если ЕстьПланыРабот Тогда
			Если ВыводитьОснования Тогда
				
				Основание = Неопределено;
				
				ОблНачЗП = Макет.ПолучитьОбласть("Сотрудник|НачалоТЗП");
				ТабДок.Присоединить( ОблНачЗП );
				
				Для Каждого сЗП ИЗ тзЗП Цикл
					Если сЗП.Основание <> Основание Тогда
						ОблНачПР 	= Макет.ПолучитьОбласть("Сотрудник|НачалоПланаРабот");
						ТабДок.Присоединить( ОблНачПР );
						Основание 	= сЗП.Основание;
					КонецЕсли;
					
					
					ОблЗП = Макет.ПолучитьОбласть("Сотрудник|ПланРабот");
					мС		= Объект.РабочееВремя.НайтиСтроки( Новый Структура("ФизическоеЛицо,ТарифнаяСтавка,Основание", 
																					ЭлСотрудник, 
																					сЗП.ТарифнаяСтавка,
																					сЗП.Основание));
					Если мС.Количество() > 0 Тогда
						ЗаполнитьЗначенияСвойств( ОблЗП.Параметры, мС[0]);
						ИтогоПоСотруднику				= ИтогоПоСотруднику + мС[0].КоличествоТЗП;
						
					КонецЕсли;
					
					ТабДок.Присоединить( ОблЗП );
				КонецЦикла;
			Иначе
				// сводная отметка ТРВ
				ОблТРВ = Макет.ПолучитьОбласть("Сотрудник|ОтметкаТРВ");
				ИтогоПоПланамРабот = 0;
				мС		= Объект.РабочееВремя.НайтиСтроки( Новый Структура("ФизическоеЛицо", ЭлСотрудник));
				Если мС.Количество() > 0 Тогда
					Для Каждого Эл ИЗ мС Цикл
						ИтогоПоПланамРабот	= ИтогоПоПланамРабот + Эл.КоличествоТЗП;
					КонецЦикла;
				КонецЕсли;
				ОблТРВ.Параметры.КоличествоТРВ = ИтогоПоПланамРабот;
				ТабДок.Присоединить( ОблТРВ );
				
				ИтогоПоСотруднику = ИтогоПоСотруднику + ИтогоПоПланамРабот;
			КонецЕсли;
		КонецЕсли; 
		// итого
		ОблИтого = Макет.ПолучитьОбласть("Сотрудник|Итого");
		ОблИтого.Параметры.ИтогоПоСотруднику = ИтогоПоСотруднику;
		ТабДок.Присоединить( ОблИтого );
		
		//
		ИтогоПоПодразделению = ИтогоПоПодразделению + ИтогоПоСотруднику;
		
		
	КонецЦикла;
	
	// подвал
	ОблПодв	= Макет.ПолучитьОбласть("Подвал|Начало");
	ОблПодв.Параметры.ИсполнительДокумента = Объект.ИсполнительДокумента.ФизическоеЛицо;
	ОблПодв.Параметры.ДатаПечати 	= Формат( ТекущаяДата(),"ДЛФ=DD" );
	
	ТабДок.Вывести(ОблПодв);
	
	// табели
	Если ЕстьТабели Тогда
		ОблНачТРВ = Макет.ПолучитьОбласть("Подвал|НачалоТРВ");
		ТабДок.Присоединить( ОблНачТРВ );
		Для Каждого сТРВ ИЗ тзТРВ Цикл
			ОблТРВ 	= Макет.ПолучитьОбласть("Подвал|ОтметкаТРВ");
			ОблТРВ.Параметры.КоличествоТРВ 	= сТРВ.Количество;
			ТабДок.Присоединить( ОблТРВ );
		КонецЦикла;
	КонецЕсли;

	// табели задач проектов
	Если ЕстьПланыРабот Тогда
		Если ВыводитьОснования Тогда
		
			Основание 	= Неопределено;
			ОблНачЗП 	= Макет.ПолучитьОбласть("Подвал|НачалоТЗП");
			ТабДок.Присоединить( ОблНачЗП );
			Для Каждого сЗП ИЗ тзЗП Цикл
				Если сЗП.Основание <> Основание Тогда
					ОблНачПР 	= Макет.ПолучитьОбласть("Подвал|НачалоПланаРабот");
					ТабДок.Присоединить( ОблНачПР );
					Основание 	= сЗП.Основание;
				КонецЕсли;
				
				ОблЗП = Макет.ПолучитьОбласть("Подвал|ПланРабот");
				ЗаполнитьЗначенияСвойств( ОблЗП.Параметры, сЗП);
				ТабДок.Присоединить( ОблЗП );
			КонецЦикла;
			
		Иначе
			// сводная отметка ТРВ
			ОблТРВ = Макет.ПолучитьОбласть("Подвал|ОтметкаТРВ");
			ОблТРВ.Параметры.КоличествоТРВ = тзЗП.Итог("КоличествоТЗП") - тзЗП.Итог("Количество");
			ТабДок.Присоединить( ОблТРВ );
			
		КонецЕсли;
	КонецЕсли; 
	// итого
	ОблИтого = Макет.ПолучитьОбласть("Подвал|Итого");
	ОблИтого.Параметры.ИтогоПоПодразделению = ИтогоПоПодразделению;
	
	ТабДок.Присоединить( ОблИтого );
	
КонецПроцедуры

&НаКлиенте
Процедура Табель(Команда)
	ТабДок = Новый ТабличныйДокумент;
	
	ЗаполнитьТабельПодразделения( ТабДок );
	
	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб			= Истина;
	ТабДок.Показать("Табель подразделения!");
	
КонецПроцедуры

&НаКлиенте
Процедура ТабельСокращенный(Команда)
	ТабДок = Новый ТабличныйДокумент;
	
	ЗаполнитьТабельПодразделения( ТабДок, Ложь );
	
	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Ландшафт;
	ТабДок.АвтоМасштаб			= Истина;
	ТабДок.Показать("Табель подразделения!");
	
КонецПроцедуры
