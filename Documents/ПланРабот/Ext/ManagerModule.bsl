//*****************************************************************
// формирует структуру для плана работ, который содержится в смете
// если сметы задачи проекта, в которую включен План работ нет, то возвращается неопределено
// 
Функция СуммаПланаРаботПоСметеЗадачиПроекта( ЗадачаПроекта ) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЕСТЬNULL(БюджетПоМесяцамОбороты.Месяц, ДАТАВРЕМЯ(1, 1, 1))) КАК Месяц,
		|	СУММА(ЕСТЬNULL(БюджетПоМесяцамОбороты.СуммаОборот, 0)) КАК Сумма
		|ИЗ
		|	РегистрНакопления.БюджетПоМесяцам.Обороты КАК БюджетПоМесяцамОбороты
		|ГДЕ
		|	БюджетПоМесяцамОбороты.СтатьяСметы 		= &СтатьяФОТПП
		|	И БюджетПоМесяцамОбороты.ЗадачаПроекта 	= &ЗадачаПроекта
		|	И БюджетПоМесяцамОбороты.ТипСуммы 		= ЗНАЧЕНИЕ(Перечисление.ТипСуммыБюджета.Факт)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(БюджетПоМесяцам.Сумма) КАК Сумма,
		|	БюджетПоМесяцам.Регистратор КАК СметаЗадачиПроекта
		|ИЗ
		|	РегистрНакопления.БюджетПоМесяцам КАК БюджетПоМесяцам
		|ГДЕ
		|	БюджетПоМесяцам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипСуммыБюджета.План)
		|	И БюджетПоМесяцам.ЗадачаПроекта = &ЗадачаПроекта
		|	И БюджетПоМесяцам.СтатьяСметы = &СтатьяФОТПП
		|
		|СГРУППИРОВАТЬ ПО
		|	БюджетПоМесяцам.Регистратор";

		
	// закрыто
	Запрос.УстановитьПараметр("СтатьяФОТПП", 	Справочники.СтатьиСметы.ФОТ_ПП );
	Запрос.УстановитьПараметр("ЗадачаПроекта",  ЗадачаПроекта );
	// 
	МассивРезультатовЗапроса = Запрос.ВыполнитьПакет();
	
	тзЗакрыто = МассивРезультатовЗапроса[0].Выгрузить();
	тзСмета   = МассивРезультатовЗапроса[1].Выгрузить();
	
	сРезультат = Новый Структура;
	// нет сметы задачи, включающей план работ
	Если тзСмета.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// план по смете
	сРезультат.Вставить("СуммаПлан", 			тзСмета[0].Сумма);
	сРезультат.Вставить("СметаЗадачиПроекта", 	тзСмета[0].СметаЗадачиПроекта);
	
	Если ЗначениеЗаполнено( тзЗакрыто[0].Месяц) Тогда
		сРезультат.Вставить("Месяц", 		тзЗакрыто[0].Месяц);
		сРезультат.Вставить("СуммаЗакрыто", тзЗакрыто[0].Сумма);
	Иначе
		сРезультат.Вставить("Месяц", 		Дата(1,1,1));
		сРезультат.Вставить("СуммаЗакрыто", 0);
	КонецЕсли;
	Возврат сРезультат;	
	
КонецФункции

Функция ЗакрытиеПланаРабот( ПланРабот )   Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЕСТЬNULL(БюджетПоМесяцам.Месяц, ДАТАВРЕМЯ(1, 1, 1))) КАК Месяц,
		|	СУММА(ЕСТЬNULL(БюджетПоМесяцам.Сумма, 0)) КАК Сумма
		|ИЗ
		|	РегистрНакопления.БюджетПоМесяцам КАК БюджетПоМесяцам
		|ГДЕ
		|	БюджетПоМесяцам.СтатьяСметы = &СтатьяФОТПП
		|	И БюджетПоМесяцам.ЗадачаПроекта = &ЗадачаПроекта
		|	И БюджетПоМесяцам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипСуммыБюджета.Факт)
		|	И ВЫБОР
		|			КОГДА ТИПЗНАЧЕНИЯ(БюджетПоМесяцам.Регистратор) = ТИП(Документ.ТабельРаботПоЗадачеПроекта)
		|				ТОГДА БюджетПоМесяцам.Регистратор.ПланРабот = &ПланРабот
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	БюджетПоМесяцам.ЗадачаПроекта";

		
	// закрыто
	Запрос.УстановитьПараметр("СтатьяФОТПП", 	Справочники.СтатьиСметы.ФОТ_ПП );
	Запрос.УстановитьПараметр("ПланРабот",  	ПланРабот );
	Запрос.УстановитьПараметр("ЗадачаПроекта",  ПланРабот.ЗадачаПроекта );
	
	сРезультат 				= Новый Структура;
	// 
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		сРезультат.Вставить("Месяц", 		ВыборкаДетальныеЗаписи.Месяц);
		сРезультат.Вставить("СуммаЗакрыто", ВыборкаДетальныеЗаписи.Сумма);
		Возврат сРезультат;
	КонецЦикла;
	сРезультат.Вставить("Месяц", 		Дата(1,1,1));
	сРезультат.Вставить("СуммаЗакрыто", 0);
	Возврат сРезультат;
	
	
КонецФункции


Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	// печать счёта на оплату
	ПодготовитьПечатнуюФорму(
		"ПланРабот",
		НСтр("ru = 'План работ'"),
		"ОбщиеМакеты.ПФ_MXL_ПланРабот",
		МассивОбъектов,
		КоллекцияПечатныхФорм,
		ОбъектыПечати,
		ПараметрыВывода);
	
		
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Ложь;
	
	
КонецПроцедуры

Процедура ПодготовитьПечатнуюФорму(Знач ИмяМакета, ПредставлениеМакета, ПолныйПутьКМакету = "", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, ИмяМакета);
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			ИмяМакета,
			ПредставлениеМакета,
			УП_ПланыРаботПоПроектам.ПечатьПланаРабот(МассивОбъектов, ОбъектыПечати, ИмяМакета),
			,
			ПолныйПутьКМакету);
	КонецЕсли;
	
	
КонецПроцедуры

