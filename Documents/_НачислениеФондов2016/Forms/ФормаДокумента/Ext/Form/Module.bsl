// статья начисления не итоговая
// статья базы может быть итоговой
&НаСервере
Процедура НачислитьНаСервере()
	
	Док = РеквизитФормыВЗначение("Объект");
	Док.Начисление.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта,
		|	БюджетПоМесяцамОбороты.СтатьяСметы,
		|	СУММА(БюджетПоМесяцамОбороты.СуммаОборот) КАК Сумма,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.Владелец.Код КАК ЗадачаПроектаВладелецКод
		|ИЗ
		|	РегистрНакопления.БюджетПоМесяцам.Обороты КАК БюджетПоМесяцамОбороты
		|ГДЕ
		|	БюджетПоМесяцамОбороты.ТипСуммы = &ТипСуммыПлан
		|	И БюджетПоМесяцамОбороты.Месяц = &Месяц
		|	И БюджетПоМесяцамОбороты.СтатьяСметы В(&СтатьиСметы)
		|	И БюджетПоМесяцамОбороты.ЗадачаПроекта.Подразделение = &Подразделение
		|	И БюджетПоМесяцамОбороты.ЗадачаПроекта.Владелец.ГодПроекта = &ГодПроекта
		|
		|СГРУППИРОВАТЬ ПО
		|	БюджетПоМесяцамОбороты.СтатьяСметы,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗадачаПроектаВладелецКод";
		
		
	Запрос.УстановитьПараметр("ГодПроекта", 	Объект.ГодПроекта);
	Запрос.УстановитьПараметр("Месяц", 			НачалоМесяца(Объект.ПериодРегистрации));
	Запрос.УстановитьПараметр("Подразделение", 	Объект.Подразделение );
	// статьи, входящие в расчет итоговой
	СтатьиСметы = СтатьиВходящиеВИтоговую( Объект.СтатьяБазыНачисления, СтруктураСметы); 		
	Запрос.УстановитьПараметр("СтатьиСметы", 	СтатьиСметы);
	// 2017 02 17
	//Запрос.УстановитьПараметр("ТипСуммыПлан", 	Перечисления.ТипСуммыБюджета.План);
	Запрос.УстановитьПараметр("ТипСуммыПлан", 	Перечисления.ТипСуммыБюджета.Факт);
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	тзЗадачи = РезультатЗапроса.Скопировать();
	тзЗадачи.Свернуть("ЗадачаПроекта");
	Для Каждого СтрЗП ИЗ тзЗадачи Цикл
		ЗадачаПроекта = СтрЗП.ЗадачаПроекта;
		// может быть фонд ДП или КМ, поэтому не понятно
		//Если ФондДП(ЗадачаПроекта) = 0 Тогда
		//	Продолжить;
		//КонецЕсли;
		
		Отбор = Новый Структура("ЗадачаПроекта", ЗадачаПроекта );
		тзПоЗадаче 				= РезультатЗапроса.Скопировать( Отбор );
		СтрДок 					= Док.Начисление.Добавить();
		СтрДок.ЗадачаПроекта 	= ЗадачаПроекта;
		
		СтрокаФормулы 	= РазвернутьФормулуРасчета( Объект.СтатьяБазыНачисления, СтруктураСметы, тзПоЗадаче );
		СуммаБаза		= Вычислить( СтрокаФормулы );
		
		
		СтрДок.СуммаБазаРаспределения 	= СуммаБаза;
		СтрДок.СуммаНачислено			= Окр(СтрДок.СуммаБазаРаспределения * Док.ПроцентНачисления/100, 2);
	КонецЦикла;
		
	ЗначениеВРеквизитФормы( Док, "Объект");
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СуммаПоНеИтоговойСтатье( СтатьяСметы,  тзПоЗадаче )
	СтрСумма = тзПоЗадаче.Найти( СтатьяСметы, "СтатьяСметы" );
	Если СтрСумма = Неопределено Тогда
		Возврат "0";
	КонецЕсли;
	Возврат Формат( СтрСумма.Сумма,"ЧЦ=15; ЧДЦ=2; ЧРД=.; ЧГ=0") ;
КонецФункции


&НаСервереБезКонтекста
Функция РазвернутьФормулуРасчета( СтатьяСметы, СтруктураСметы, тзПоЗадаче )
	// строка таблицы значений
	СтрокаСтруктуры = ПолучитьСтрокуСтруктуры( СтатьяСметы, СтруктураСметы );
	// не должно такого быть, заглушка
	Если СтрокаСтруктуры = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	ФормулаРасчета = СокрЛП( СтрокаСтруктуры.ФормулаРасчета);
	
	Если НЕ СтрокаСтруктуры.Итоговая Тогда
		Возврат СуммаПоНеИтоговойСтатье( СтрокаСтруктуры.Статья,  тзПоЗадаче )
	КонецЕсли;
	
	мСтрок = СтрРазделить( СтрокаСтруктуры.ФормулаРасчета, "+-/");
	
	// имя предопределенного статьи 
	Для Каждого Эл ИЗ мСтрок Цикл
		СтатьяЭл = Справочники.СтатьиСметы[СокрЛП(Эл)];
		СтрокаСтруктуры = ПолучитьСтрокуСтруктуры( СтатьяЭл, СтруктураСметы );
		Если СтрокаСтруктуры.Итоговая Тогда
			// меняем имя на формулу
			РазвернутаяФормула 	= РазвернутьФормулуРасчета( СтрокаСтруктуры.Статья, СтруктураСметы, тзПоЗадаче );
			ФормулаРасчета		= СтрЗаменить( ФормулаРасчета, Эл, "(" + РазвернутаяФормула + ")");
		Иначе
			// заменяем на значение
			ФормулаРасчета		= СтрЗаменить( ФормулаРасчета, Эл, СуммаПоНеИтоговойСтатье( СтрокаСтруктуры.Статья,  тзПоЗадаче ));
			
		КонецЕсли;
	КонецЦикла;
	
	Возврат ФормулаРасчета;
КонецФункции


// формируем развернутую формулу для итоговой статьи структуры расчета
// заменяем
//&НаСервереБезКонтекста
//Функция РасчетИтоговойСуммы( СтатьяСметы,  тзПоЗадаче, СтруктураСметы )
//	ИтоговаяСумма = 0;
//	
//	СтрокаСтруктуры = ПолучитьСтрокуСтруктуры( СтатьяСметы, СтруктураСметы );
//	// не должно такого быть, заглушка
//	Если СтрокаСтруктуры = Неопределено Тогда
//		Возврат ИтоговаяСумма;
//	КонецЕсли;
//	
//	// если строка не итоговая, то возвращаем ее сумму
//	Если НЕ СтрокаСтруктуры.Итоговая Тогда
//		Возврат СуммаПоНеИтоговойСтатье( СтрокаСтруктуры.Статья,  тзПоЗадаче );
//	КонецЕсли;
//	
//	// Если строка итоговая
//	мСтрок = СтрРазделить( СтрокаСтруктуры.ФормулаРасчета, "+-/");
//	// имя предопределенного статьи 
//	Для Каждого Эл ИЗ мСтрок Цикл
//		СтатьяЭл = Справочники.СтатьиСметы[СокрЛП(Эл)];
//		СтрокаСтруктуры = ПолучитьСтрокуСтруктуры( СтатьяЭл, СтруктураСметы );
//		Если СтрокаСтруктуры.Итоговая Тогда
//			ИтоговаяСумма = ИтоговаяСумма + РасчетИтоговойСуммы( СтрокаСтруктуры.Статья,  тзПоЗадаче, СтруктураСметы )
//		Иначе
//			ИтоговаяСумма = ИтоговаяСумма + СуммаПоНеИтоговойСтатье( СтрокаСтруктуры.Статья,  тзПоЗадаче );
//		КонецЕсли;
//	КонецЦикла;
//	
//	Возврат ИтоговаяСумма;
//	
//КонецФункции




&НаКлиенте
Процедура Начислить(Команда)
	НачислитьНаСервере();
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура УстановитьСтруктуруСметыПоГодуПроекта()
	МенЗап = РегистрыСведений.СтруктураСметыПоГодам.ПолучитьПоследнее( НачалоГода(Дата( Объект.ГодПроекта, 1, 1)));
	СтруктураСметы = МенЗап.СтруктураСметы;
	//
	УстановитьСписокВыбораСтатей();
КонецПроцедуры

&НаСервереБезКонтекста
Функция МассивСтатейДляВыбора( СтруктураСметы,  Итоговые = Ложь, НеИтоговые = Ложь )
	мСтатей = Новый Массив;
	Для Каждого Стр ИЗ СтруктураСметы.Структура Цикл
		Если Итоговые И Стр.Итоговая Тогда
			мСтатей.Добавить( Стр.Статья );
		КонецЕсли;
		Если НеИтоговые И НЕ Стр.Итоговая Тогда
			мСтатей.Добавить( Стр.Статья );
		КонецЕсли;
	КонецЦикла;
	Возврат мСтатей;
			
КонецФункции

&НаСервере
Процедура УстановитьСписокВыбораСтатей()
	// все
	мСтатьи = МассивСтатейДляВыбора( СтруктураСметы,  Истина, Истина );
	Элементы.СтатьяБазыНачисления.СписокВыбора.ЗагрузитьЗначения( мСтатьи );
	// только не групповые
	мСтатьи = МассивСтатейДляВыбора( СтруктураСметы,  Ложь, Истина );
	Элементы.СтатьяНачисления.СписокВыбора.ЗагрузитьЗначения( мСтатьи );
	
КонецПроцедуры

// заполняем список выбора статей по году 
&НаКлиенте
Процедура ГодПроектаПриИзменении(Элемент)
	УстановитьСтруктуруСметыПоГодуПроекта();
	//УстановитьСписокВыбораСтатей();
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьСтруктуруСметыПоГодуПроекта();
	//УстановитьСписокВыбораСтатей();
КонецПроцедуры

// создаем массив статей, входящих в итоговую статью
// и формулу расчета
&НаКлиенте
Процедура СтатьяБазыНачисленияПриИзменении(Элемент)
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьСтрокуСтруктуры( Статья, СтруктураСметы )
	Отбор = Новый Структура("Статья", Статья );
	СтрСС 	= СтруктураСметы.Структура.НайтиСтроки( Отбор );
	
	Если СтрСс.Количество() = 0 Тогда Возврат Неопределено; КонецЕсли;
	Возврат СтрСс[0];
	
КонецФункции

&НаСервереБезКонтекста
Функция СтатьиВходящиеВИтоговую( СтатьяСметы, СтруктураСметы )
	мСтатей = Новый Массив;
	СтрокаСтруктуры = ПолучитьСтрокуСтруктуры( СтатьяСметы, СтруктураСметы );
	// не должно такого быть, заглушка
	Если СтрокаСтруктуры = Неопределено Тогда
		Возврат мСтатей;
	КонецЕсли;
	
	Если НЕ СтрокаСтруктуры.Итоговая Тогда
		мСтатей.Добавить( СтатьяСметы );
		Возврат мСтатей;
	КонецЕсли;
	
	// пока кроме рентабельности
	мСтрок = СтрРазделить( СтрокаСтруктуры.ФормулаРасчета, "+-/");
	// имя предопределенного статьи 
	Для Каждого Эл ИЗ мСтрок Цикл
		СтатьяЭл = Справочники.СтатьиСметы[СокрЛП(Эл)];
		СтрокаСтруктуры = ПолучитьСтрокуСтруктуры( СтатьяЭл, СтруктураСметы );
		Если СтрокаСтруктуры.Итоговая Тогда
			мСЭл = СтатьиВходящиеВИтоговую( СтрокаСтруктуры.Статья, СтруктураСметы );
			Для Каждого ЭлЭл ИЗ мСЭл Цикл
				мСтатей.Добавить( ЭлЭл );
			КонецЦикла;
		Иначе
			мСтатей.Добавить( СтрокаСтруктуры.Статья );
		КонецЕсли;
	КонецЦикла;
	
	Возврат мСтатей;
КонецФункции

&НаКлиенте
Процедура ПериодРегистрацииПриИзменении(Элемент)
	Объект.ПериодРегистрации = НачалоМесяца( Объект.ПериодРегистрации );
КонецПроцедуры
