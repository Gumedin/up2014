&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	// контрагент проекта
	Контрагент	= ПараметрыОтбора.Получить("Контрагент");
	Если Контрагент <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Контрагент");
		Иначе
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора( Список.Отбор,
				"Контрагент",
				Контрагент,
				ВидСравненияКомпоновкиДанных.Равно,,Истина);
		КонецЕсли;
	КонецЕсли;
	
	// контрагент проекта
	Договор	= ПараметрыОтбора.Получить("Договор");
	Если Договор <> Неопределено Тогда 
		Если Не ЗначениеЗаполнено(Договор) Тогда
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"Договор");
		Иначе
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора( Список.Отбор,
				"Договор",
				Договор,
				ВидСравненияКомпоновкиДанных.Равно,,Истина);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура КонтрагентОплатыПриИзменении(Элемент)
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("Контрагент", КонтрагентОплаты );
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорОплатыПриИзменении(Элемент)
	ПараметрыОтбора = Новый Соответствие();
	Параметрыотбора.Вставить("Договор", ДоговорОплаты );
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДоговорОплатыПриИзменении("");
	КонтрагентОплатыПриИзменении("");
КонецПроцедуры
