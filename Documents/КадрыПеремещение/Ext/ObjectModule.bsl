
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Отказ = Истина;
	// регистр Сотрудники
	Движения.Сотрудники.Записывать = Истина;
	Для Каждого ТекСтрокаСотрудник Из Сотрудник Цикл
		Если ТекСтрокаСотрудник.Активна Тогда
		// закрываем старую 
			Отказ = Ложь;
			// 2016 11 26
			// если измерения новой записи полностью совпадают с измерениями старой записи
			// например изменили  только количество, тогда старуб запись не закрываем
			Если 	ТекСтрокаСотрудник.Подразделение 	= Подразделение
			и		ТекСтрокаСотрудник.Должность		= Должность
			и		ТекСтрокаСотрудник.ТарифнаяСтавка	= ТарифнаяСтавка Тогда
			
			Иначе
				Движение 					= Движения.Сотрудники.Добавить();
				//Движение.Период 			= ДатаПеремещения - 24*60*60; // закрываем предыдущей датой
				// последний день работы на старом месте - предыдущий до перемещения
				Движение.Период 			= НачалоДня(ДатаПеремещения)-1; 
				
				Движение.Подразделение 		= ТекСтрокаСотрудник.Подразделение;
				Движение.Должность 			= ТекСтрокаСотрудник.Должность;
				Движение.ТарифнаяСтавка 	= ТекСтрокаСотрудник.ТарифнаяСтавка;
				Движение.ФизическоеЛицо 	= ФизическоеЛицо;
				//
				Движение.СтатусСотрудника 	= Справочники.СтатусыСотрудников.Закрыта;
				Движение.Количество 		= ТекСтрокаСотрудник.Количество;
				Движение.Основание 			= Основание;
				
				//Удаляем все последующие за датой изменение статуса по старой должности
				Запрос = Новый Запрос;
				Запрос.Текст = 
					"ВЫБРАТЬ
					|	Сотрудники.Регистратор КАК Регистратор,
					|ИЗ
					|	РегистрСведений.Сотрудники КАК Сотрудники
					|ГДЕ
					|	Сотрудники.Подразделение = &Подразделение
					|	И Сотрудники.Должность = &Должность
					|	И Сотрудники.ТарифнаяСтавка = &ТарифнаяСтавка
					|	И Сотрудники.ФизическоеЛицо = &ФизическоеЛицо
					|	И Сотрудники.Период >= &Период";
				
				Запрос.УстановитьПараметр("Подразделение", ТекСтрокаСотрудник.Подразделение);
				Запрос.УстановитьПараметр("Должность", ТекСтрокаСотрудник.Должность);
				Запрос.УстановитьПараметр("ТарифнаяСтавка", ТекСтрокаСотрудник.ТарифнаяСтавка);
				Запрос.УстановитьПараметр("ФизическоеЛицо", ФизическоеЛицо);
				Запрос.УстановитьПараметр("Период", НачалоДня(ДатаПеремещения));
				
				ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			        НаборЗаписей = РегистрыСведений.Сотрудники.СоздатьНаборЗаписей();
			        НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
			        НаборЗаписей.Прочитать();
					Для Каждого Запись Из НаборЗаписей Цикл
						Если Запись.Период >= НачалоДня(ДатаПеремещения) Тогда 							
							НаборЗаписей.Удалить(Запись);
						КонецЕсли;
					КонецЦикла;					
					НаборЗаписей.Записать(Истина);
				КонецЦикла;
			КонецЕсли;		
		
		КонецЕсли;
	КонецЦикла;
	
	// открываем новую должность
	Движение 					= Движения.Сотрудники.Добавить();
	Движение.Период 			= ДатаПеремещения; 
	Движение.Подразделение 		= Подразделение;
	Движение.Должность 			= Должность;
	Движение.ТарифнаяСтавка 	= ТарифнаяСтавка;
	Движение.ФизическоеЛицо 	= ФизическоеЛицо;
	//
	Движение.СтатусСотрудника 	= Справочники.СтатусыСотрудников.Работает;
	Движение.Количество 		= Количество;
	Движение.Основание 			= Основание;
	

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ИсполнительДокумента 	= ПараметрыСеанса.ТекущийПользователь;

КонецПроцедуры
