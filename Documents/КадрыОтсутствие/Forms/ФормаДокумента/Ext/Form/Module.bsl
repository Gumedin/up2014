
&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	ПересчетИсполненийСотрудника();
КонецПроцедуры

&НаСервере
Процедура ПересчетИсполненийСотрудника()
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.Сотрудник.Очистить();
	
	
	// активные исполнения на момент увольнения
	тзИсполнения =  УП_КадрыСервер.СотрудникиФизЛица( Документ.ФизическоеЛицо, Документ.ДатаНачала );
	Если  тзИсполнения.Количество() <> 0 Тогда 
		Документ.Сотрудник.Загрузить(  тзИсполнения );
	КонецЕсли;
	
	ЗначениеВРеквизитФормы( Документ, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачалаПриИзменении(Элемент)
	ПересчетИсполненийСотрудника();
	ПересчитатьДатуОкончания();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ПересчетИсполненийСотрудника();
	ПересчитатьКалендарныеДни();
	//ПересчитатьДатуВыходаНаРаботу();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено( Объект.ДатаНачала ) Тогда
		КалендарныхДней = 7;
		Сутки = 24 * 60 * 60;
		Объект.ДатаНачала 		= НачалоДня(ТекущаяДата()) + Сутки;
		
	КонецЕсли;
КонецПроцедуры

#Область ЗаполнениеПосещенийПоДокументу

&НаСервереБезКонтекста
Процедура ЗаполнитьПосещенияПоКадровомуДокументу( Документ )
	Сутки = 24 * 60 * 60;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КадрыОтсутствие.ФизическоеЛицо.Организация.Контрагент КАК Контрагент,
		|	КадрыОтсутствие.СтатусОтсутствия.ОтметкаТабеля КАК ПредметПосещения,
		|	КадрыОтсутствие.ФизическоеЛицо,
		|	КадрыОтсутствие.Факт КАК Отработано,
		|	КадрыОтсутствие.СтатусОтсутствия.Цвет КАК Цвет,
		|	КадрыОтсутствие.ДатаНачала,
		|	КадрыОтсутствие.ДатаОкончания
		|ИЗ
		|	Документ.КадрыОтсутствие КАК КадрыОтсутствие
		|ГДЕ
		|	КадрыОтсутствие.Ссылка = &Ссылка
		|	И НЕ КадрыОтсутствие.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	//
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() <> 0 Тогда
		Д1 				= РезультатЗапроса[0].ДатаНачала;
		ДатаОкончания 	= РезультатЗапроса[0].ДатаОкончания;
		Пока Д1 <= ДатаОкончания Цикл
			сПосещение = Новый Структура("Контрагент,ПредметПосещения,ФизическоеЛицо,Отработано,Цвет");
			ЗаполнитьЗначенияСвойств( сПосещение, РезультатЗапроса[0] );
			УП_РаботаСРабочимКалендаремСервер.ДобавитьПосещение( Д1, сПосещение );
			Д1 = Д1 + Сутки;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПосещенияПоДокументу(Команда)
	Если ЭтаФорма.Модифицированность Тогда
		ПоказатьПредупреждение(,"Необходимо записать документ",10);
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПосещенияПоКадровомуДокументу( Объект.Ссылка);
	
	ПоказатьПредупреждение(,"Посещения созданы по документу",10);
	Объект.ЗаполненыПосещения 	= Истина;
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьКалендарныеДни()
	Сутки = 24 * 60 * 60;
	Д1 = НачалоДня( Объект.ДатаНачала );
	
	КалендарныхДней = 0;
	Пока Д1 <= Объект.ДатаОкончания Цикл
		ВидДня= ВидДня(  Д1 );
		Если ВидДня <> ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник") Тогда
			КалендарныхДней = КалендарныхДней + 1;
		КонецЕсли;
		Д1 = Д1 + Сутки;
	КонецЦикла;
	
	ПересчитатьДатуВыходаНаРаботу();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВидДня( Дата )
	Возврат УП_КадрыСервер.ПолучитьВидДняНаДату( Дата);
КонецФункции

&НаКлиенте
Процедура ПересчитатьДатуОкончания()
	Сутки = 24 * 60 * 60;
	Д1 = НачалоДня( Объект.ДатаНачала );
	ТекДатаОкончания = Д1 + (КалендарныхДней -1)* Сутки;
	
	Пока Д1 <= ТекДатаОкончания Цикл;
		ВидДня = ВидДня( Д1 );
		Если ВидДня = ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник") Тогда
			// увеличиваем отпуск на сутки
			ТекДатаОкончания = ТекДатаОкончания + Сутки;
		КонецЕсли;
		Д1 = Д1 + Сутки;
		
	КонецЦикла;
	Объект.ДатаОкончания = ТекДатаОкончания;
	ПересчитатьДатуВыходаНаРаботу();
КонецПроцедуры	
	
&НаКлиенте
Процедура ПересчитатьДатуВыходаНаРаботу()
	// дата выхода на работу
	Сутки = 24 * 60 *60;
	ДатаВыходаНаРаботу   = Объект.ДатаОкончания + Сутки;
	Пока Истина Цикл
		Если ВидДня( ДатаВыходаНаРаботу ) = ПредопределенноеЗначение("Перечисление.ВидыДнейПроизводственногоКалендаря.Праздник") Тогда
			ДатаВыходаНаРаботу = ДатаВыходаНаРаботу + Сутки;
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если НЕ ЗначениеЗаполнено( Объект.ДатаОкончания ) Тогда
		ПересчитатьДатуОкончания();
	КонецЕсли;		
	ПересчитатьКалендарныеДни();
КонецПроцедуры

&НаКлиенте
Процедура КалендарныхДнейПриИзменении(Элемент)
	ПересчитатьДатуОкончания();
КонецПроцедуры

#КонецОбласти