// 
&НаСервере
Процедура ЗаполнитьКоммерческиеРасходыПоЗадачам()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА СметаЗадачиПроектаРасчет.Статья = &СтДоходыВс
		|				ТОГДА СметаЗадачиПроектаРасчет.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ДоходПоСмете,
		|	СУММА(ВЫБОР
		|			КОГДА СметаЗадачиПроектаРасчет.Статья = &СтКоммРасходы
		|				ТОГДА СметаЗадачиПроектаРасчет.Сумма
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК КоммРасходыПоСмете,
		|	СметаЗадачиПроектаРасчет.Ссылка.ЗадачаПроекта
		|ИЗ
		|	Документ.СметаЗадачиПроекта.Расчет КАК СметаЗадачиПроектаРасчет
		|ГДЕ
		|	СметаЗадачиПроектаРасчет.Ссылка.Проведен
		|	И СметаЗадачиПроектаРасчет.Ссылка.ЗадачаПроекта В(&ЗадачиПроекта)
		|
		|СГРУППИРОВАТЬ ПО
		|	СметаЗадачиПроектаРасчет.Ссылка.ЗадачаПроекта";

		
	// 
	мЗадач = Объект.КоммерческоеВознаграждение.Выгрузить().ВыгрузитьКолонку("ЗадачаПроекта");
	Запрос.УстановитьПараметр("ЗадачиПроекта", 	мЗадач);
	Запрос.УстановитьПараметр("СтДоходыВс", 	Справочники.СтатьиСметы.ДохФинансовые);
	Если Объект.Дата < Дата( 2014, 1, 1) Тогда
		Запрос.УстановитьПараметр("СтКоммРасходы", 	Справочники.СтатьиСметы.РасходыКоммерческие );
	Иначе
		Запрос.УстановитьПараметр("СтКоммРасходы", 	Справочники.СтатьиСметы.ВознаграждениеКМ );
	КонецЕсли;

	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Стр ИЗ Объект.КоммерческоеВознаграждение Цикл
		СтрРез = Результат.Найти( Стр.ЗадачаПроекта, "ЗадачаПроекта");
		Если СтрРез = Неопределено Тогда
			Стр.СуммаПоСмете = 0;
		Иначе
			Стр.СуммаПоСмете = Стр.СуммаОбеспечено * СтрРез.КоммРасходыПоСмете / СтрРез.ДоходПоСмете;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачисленоРанее_НаСервере()
    СуммаОплачено 	= 0;
	СуммаАктов		= 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(КоммерческоеВознаграждение.СуммаВознаграждения) КАК СуммаНачислено,
		|	СУММА(КоммерческоеВознаграждение.Сумма) КАК СуммаАктов,
		|	КоммерческоеВознаграждение.ЗадачаПроекта
		|ИЗ
		|	Документ.ДокументУТ.КоммерческоеВознаграждение КАК КоммерческоеВознаграждение
		|ГДЕ
		|	КоммерческоеВознаграждение.Ссылка.Договор = &Договор
		|	И КоммерческоеВознаграждение.Ссылка.Ссылка <> &Ссылка
		|	И КоммерческоеВознаграждение.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	КоммерческоеВознаграждение.ЗадачаПроекта";

	//
	Запрос.УстановитьПараметр("Договор", Объект.Договор);
	Запрос.УстановитьПараметр("Ссылка",  Объект.Ссылка);

	Результат = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрО ИЗ Объект.КоммерческоеВознаграждение Цикл
		СтрР = Результат.Найти( СтрО.ЗадачаПроекта, "ЗадачаПроекта");
		Если СтрР = Неопределено Тогда 
			Продолжить; 
		КонецЕсли;
		СтрО.СуммаНачислено 	= СтрР.СуммаНачислено;
		СтрО.СуммаАктов 		= СтрР.СуммаАктов;
		
		СуммаНачислено 			= СуммаНачислено + СтрО.СуммаНачислено;
		СуммаАктов 				= СуммаАктов + СтрО.СуммаАктов;
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоЗадачиПоДоговору_НаСервере()
	Документ = РеквизитФормыВЗначение("Объект");
	Документ.КоммерческоеВознаграждение.Очистить();
	Если Документ.СуммаДокумента <> 0 Тогда	
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДоговорыЗадачиПроекта.ЗадачаПроекта,
			|	ДоговорыЗадачиПроекта.Сумма КАК СуммаОбеспечено		
			|ИЗ
			|	Документ.Договор.ЗадачиПроекта КАК ДоговорыЗадачиПроекта
			|ГДЕ
			|	ДоговорыЗадачиПроекта.Ссылка = &Договор";

		//
		Запрос.УстановитьПараметр("Договор", 	Документ.Договор);

		Результат = Запрос.Выполнить();

		ВыборкаДетальныеЗаписи = Результат.Выбрать();

		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Стр = Документ.КоммерческоеВознаграждение.Добавить();
			// в расшифровку платежа
			ЗаполнитьЗначенияСвойств( Стр, ВыборкаДетальныеЗаписи );
			
		КонецЦикла;
	КонецЕсли;
	ЗначениеВРеквизитФормы(Документ, "Объект");
	// теперь долю коммерческих расходов по сумме обеспечено
	ЗаполнитьКоммерческиеРасходыПоЗадачам();	
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьСуммуАктаПоЗадачам()
	
	Если Объект.КоммерческоеВознаграждение.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	Если Объект.СуммаДокумента = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МассивКоэфф = Новый Массив;
	Для Каждого Стр ИЗ Объект.КоммерческоеВознаграждение Цикл
		// всего сумма сметы
		МассивКоэфф.Добавить( Стр.СуммаОбеспечено  );
	КонецЦикла;
	//
	мРез = РаспределитьПропорционально( Объект.СуммаДокумента, МассивКоэфф);
	Для Каждого Стр ИЗ Объект.КоммерческоеВознаграждение Цикл
		Если мРез <> Неопределено Тогда
			Стр.Сумма = мРез[Объект.КоммерческоеВознаграждение.Индекс(Стр)];
		Иначе
			Стр.Сумма = 0;
		КонецЕсли;
	КонецЦикла;
	
	ОстаткиСумм_ПоЗадачам();
	
КонецПроцедуры

&НаКлиенте
Процедура ОстаткиСумм_ПоЗадачам()
	СуммаПоСмете		= 0;
	СуммаНеНачислено 	= 0;
	СуммаНачислено		= 0;
	СуммаАктов			= 0;
	Для Каждого Стр ИЗ Объект.КоммерческоеВознаграждение Цикл
		// остаток по задаче
		Стр.СуммаНеНачислено	= Стр.СуммаПоСмете 	- Стр.СуммаНачислено - Стр.СуммаВознаграждения;

		СуммаПоСмете 			= СуммаПоСмете 		+ Стр.СуммаПоСмете;
		СуммаНачислено 			= СуммаНачислено 	+ Стр.СуммаНачислено;
		СуммаНеНачислено 		= СуммаНеНачислено 	+ Стр.СуммаНеНачислено;
		СуммаАктов 				= СуммаАктов 		+ Стр.СуммаАктов;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура ЗаполнитьПоЗадачиПоДоговору(Команда)
	// состав табличной части Расшифровка платежа
	ЗаполнитьПоЗадачиПоДоговору_НаСервере();
	// начислено ранее
	ЗаполнитьНачисленоРанее_НаСервере();
	//
	РаспределитьСуммуАктаПоЗадачам();
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьСуммуНачисленияПоЗадачам()
	
	Если Объект.КоммерческоеВознаграждение.Количество()=0 Тогда
		Возврат;
	КонецЕсли;
	Если Объект.СуммаДокумента = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Стр ИЗ Объект.КоммерческоеВознаграждение Цикл
		Если Стр.Вручную Тогда
		// ничего не делаем
		
		Иначе
			
		Если Стр.СуммаОбеспечено <> 0 Тогда
				//Стр.СуммаВознаграждения = Стр.Сумма * (Стр.СуммаПоСмете - Стр.СуммаНачислено)/ Стр.СуммаОбеспечено;
				// с учетом предыдущих                  СуммаВознаграждения
				Стр.СуммаВознаграждения = (Стр.Сумма + Стр.СуммаАктов ) * Стр.СуммаПоСмете/ Стр.СуммаОбеспечено - Стр.СуммаНачислено;
			Иначе
				Стр.СуммаВознаграждения = 0;
			КонецЕсли;
		КонецЕсли;
		//
	КонецЦикла;
	
	
	ОстаткиСумм_ПоЗадачам();
	
КонецПроцедуры


&НаКлиенте
Процедура РаспределитьНачислениеПоЗадачам(Команда)
	//
	РаспределитьСуммуАктаПоЗадачам();
    //
	РаспределитьСуммуНачисленияПоЗадачам();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	// начилено ранее
	ЗаполнитьНачисленоРанее_НаСервере();
	//
	РаспределитьСуммуНачисленияПоЗадачам();
	//
	ОстаткиСумм_ПоЗадачам();
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ЗаполнитьНачисленоРанее_НаСервере();
	//
	РаспределитьСуммуНачисленияПоЗадачам();
	//
	ОстаткиСумм_ПоЗадачам();
КонецПроцедуры


&НаКлиенте
Процедура КоммерческоеВознаграждениеПриИзменении(Элемент)
	РаспределитьСуммуНачисленияПоЗадачам();
КонецПроцедуры


&НаКлиенте
Процедура КоммерческоеВознаграждениеСуммаВознагражденияПриИзменении(Элемент)
	Стр =  Элементы.КоммерческоеВознаграждение.ТекущиеДанные;
	Стр.Вручную = Истина;
	
КонецПроцедуры

//Создано по задаче #133079 от 07.09.2018 ГумединАГ
//Заполняет список оплат с суммами, которые они закрыли
&НаСервере
Процедура ЗаполнитьОплатыНаСервере()
	//Получаем все оплаты по договору акта	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Оплата.Ссылка КАК Оплата,
		|	ОплатаАктыВыполненныхРабот.Обеспечено КАК Обеспечено,
		|	Оплата.Дата КАК Дата
		|ИЗ
		|	Документ.Оплата КАК Оплата
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Оплата.АктыВыполненныхРабот КАК ОплатаАктыВыполненныхРабот
		|		ПО (ОплатаАктыВыполненныхРабот.Ссылка = Оплата.Ссылка)
		|ГДЕ
		|	Оплата.Договор = &Договор
		|	И Оплата.Проведен = &Проведен
		|	И ОплатаАктыВыполненныхРабот.Акт = &Акт
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	Запрос.УстановитьПараметр("Договор", Объект.Договор);
	Запрос.УстановитьПараметр("Акт", Объект.Ссылка);
	Запрос.УстановитьПараметр("Проведен", Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ТЧОплата = Объект.ТаблицаОплата;
	ТЧОплата.Очистить();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТЧОплатаСтрока = ТЧОплата.Добавить();
		ТЧОплатаСтрока.ДокументОплаты = ВыборкаДетальныеЗаписи.Оплата;
		ТЧОплатаСтрока.Обеспечено = ВыборкаДетальныеЗаписи.Обеспечено;
	КонецЦикла;

КонецПроцедуры

//Создано по задаче #133079 от 07.09.2018 ГумединАГ
&НаКлиенте
Процедура ЗаполнитьОплаты(Команда)
	ЗаполнитьОплатыНаСервере();
КонецПроцедуры

