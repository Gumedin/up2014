
Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр БонусыПоАктам Приход
     Движения.БонусыПоАктам.Записывать = Истина;
	Для Каждого ТекСтрокаКоммерческоеВознаграждение Из КоммерческоеВознаграждение Цикл
		Движение = Движения.БонусыПоАктам.Добавить();
		Движение.ВидДвижения 	= ВидДвиженияНакопления.Приход;
		Движение.Период 		= Дата;
		Движение.Акт			= Ссылка;
		Движение.ЗадачаПроекта 	= ТекСтрокаКоммерческоеВознаграждение.ЗадачаПроекта;
		Движение.Сумма 			= ТекСтрокаКоммерческоеВознаграждение.СуммаВознаграждения;
	КонецЦикла;
	
	СписокЗадач = Новый СписокЗначений;
	СписокЗадач.ЗагрузитьЗначения(КоммерческоеВознаграждение.ВыгрузитьКолонку("ЗадачаПроекта"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СметаЗадачиПроекта.Ссылка,
	               |	СметаЗадачиПроекта.ЗадачаПроекта
	               |ИЗ
	               |	Документ.СметаЗадачиПроекта КАК СметаЗадачиПроекта
	               |ГДЕ
	               |	СметаЗадачиПроекта.ЗадачаПроекта В(&ЗадачаПроекта)";
	Запрос.УстановитьПараметр("ЗадачаПроекта",СписокЗадач);
	ТаблицаСмет = Запрос.Выполнить().Выгрузить();

	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	БюджетПоМесяцам.ЗадачаПроекта,
	               |	СУММА(БюджетПоМесяцам.Сумма) КАК Сумма,
	               |	БюджетПоМесяцам.СтатьяСметы
	               |ИЗ
	               |	РегистрНакопления.БюджетПоМесяцам КАК БюджетПоМесяцам
	               |ГДЕ
	               |	БюджетПоМесяцам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипСуммыБюджета.Факт)
	               |	И (БюджетПоМесяцам.СтатьяСметы = ЗНАЧЕНИЕ(Справочник.СтатьиСметы.ДоходыВС)
	               |			ИЛИ БюджетПоМесяцам.СтатьяСметы = ЗНАЧЕНИЕ(Справочник.СтатьиСметы.ВознаграждениеКМ))
	               |	И БюджетПоМесяцам.ЗадачаПроекта В(&ЗадачаПроекта)
	               |	И БюджетПоМесяцам.Месяц = &Месяц
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	БюджетПоМесяцам.ЗадачаПроекта,
	               |	БюджетПоМесяцам.СтатьяСметы";
	Запрос.УстановитьПараметр("ЗадачаПроекта",СписокЗадач);
	Запрос.УстановитьПараметр("Месяц", НачалоМесяца(Дата));
	ФактическиеСуммы  = Запрос.Выполнить().выгрузить();
	
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	БюджетПоМесяцам.ЗадачаПроекта,
	               |	БюджетПоМесяцам.СтатьяСметы КАК СтатьяСметы,
	               |	СУММА(БюджетПоМесяцам.Сумма) КАК Сумма
	               |ИЗ
	               |	РегистрНакопления.БюджетПоМесяцам КАК БюджетПоМесяцам
	               |ГДЕ
	               |	БюджетПоМесяцам.Регистратор = &Регистратор
	               |	И БюджетПоМесяцам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипСуммыБюджета.Факт)
	               |	И БюджетПоМесяцам.Месяц = &Месяц
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	БюджетПоМесяцам.ЗадачаПроекта,
	               |	БюджетПоМесяцам.СтатьяСметы";
	Запрос.УстановитьПараметр("Регистратор",Ссылка);
	Запрос.УстановитьПараметр("Месяц", НачалоМесяца(Дата));

	ЕстьПроводка = НЕ Запрос.Выполнить().Пустой();
	
	СуммыПоДанномуПлатежу = Запрос.Выполнить().Выгрузить();
	
	
	Движения.БюджетПоМесяцам.Записывать = Истина;
	
	
	
		
	Для Каждого ТекКоммерческоеВознаграждение Из КоммерческоеВознаграждение Цикл
		
		Сметы = ТаблицаСмет.НайтиСтроки(Новый Структура("ЗадачаПроекта",ТекКоммерческоеВознаграждение.ЗадачаПроекта));
		
		Если Сметы.Количество() > 0 Тогда
			СметаЗадачиПроекта = Сметы[0].Ссылка; 	
		Иначе
			Продолжить;
		КонецЕсли;
		
		СтрокаСметы = СметаЗадачиПроекта.Расчет.НайтиСтроки(Новый Структура("Статья",Справочники.СтатьиСметы.ВознагрПосредника));
		Если СтрокаСметы.Количество() > 0 Тогда
			Параметр = СтрокаСметы[0].ЗначениеПараметра/100;
			СуммаИзСметы =  СтрокаСметы[0].Сумма;
		Иначе	
			Продолжить;
		КонецЕсли;	
		
		СуммаВознагрПосредника = ОКР(ТекКоммерческоеВознаграждение.Сумма*Параметр,2);
		
		ЗаполнитьДвижениеПоМесяцам(ТекКоммерческоеВознаграждение, Движения, "ВознагрПосредника",СуммаВознагрПосредника);
		
		СтрокаСметы = СметаЗадачиПроекта.Расчет.НайтиСтроки(Новый Структура("Статья",Справочники.СтатьиСметы.РасходыВознПосредника));
		Если СтрокаСметы.Количество() > 0 Тогда
			Параметр = СтрокаСметы[0].ЗначениеПараметра/100;
			СуммаИзСметы =  СтрокаСметы[0].Сумма;
		Иначе	
			Продолжить;
		КонецЕсли;
		
		СуммаРасходыВознПосредника = ОКР(СуммаВознагрПосредника*Параметр,2);
		
		ЗаполнитьДвижениеПоМесяцам(ТекКоммерческоеВознаграждение, Движения, "РасходыВознПосредника",СуммаРасходыВознПосредника);
		
		СуммаДоходыВс =  ОКР(ТекКоммерческоеВознаграждение.Сумма - СуммаВознагрПосредника - СуммаРасходыВознПосредника,2); 
		
		ЗаполнитьДвижениеПоМесяцам(ТекКоммерческоеВознаграждение, Движения, "ДоходыВс",СуммаДоходыВс);
		
		// 4.
		// 2015 06 02 ФОТ по оплате
		//ЗаполнитьДвижениеПоМесяцам(ТекКоммерческоеВознаграждение, Движения, "ФОТ_ПП" );
		
		// 5. 
		// 2017 08 09 - оплата дает факт по статье 5.1 вознаграждение клиент менкеджера по проекту
		Если  ГодЗадачиПроекта( ТекКоммерческоеВознаграждение.ЗадачаПроекта ) >= 2017 Тогда
			СтрокаСметы = СметаЗадачиПроекта.Расчет.НайтиСтроки(Новый Структура("Статья",Справочники.СтатьиСметы.ДоходыВс));
			Если СтрокаСметы.Количество() > 0 Тогда
				Параметр = СтрокаСметы[0].ЗначениеПараметра/100;
				СуммаСметы = СтрокаСметы[0].Сумма;
			Иначе	
				Продолжить;
			КонецЕсли;                                                         
			
			СтрокаФакта = ФактическиеСуммы.НайтиСтроки(Новый Структура("ЗадачаПроекта,СтатьяСметы",ТекКоммерческоеВознаграждение.ЗадачаПроекта,Справочники.СтатьиСметы.ДоходыВс));
			Если СтрокаФакта.Количество() > 0 Тогда
				СуммаФакта1_1 = СтрокаФакта[0].Сумма;
			Иначе	
				СуммаФакта1_1 = 0;
			КонецЕсли;
			
			СтрокаФакта = ФактическиеСуммы.НайтиСтроки(Новый Структура("ЗадачаПроекта,СтатьяСметы",ТекКоммерческоеВознаграждение.ЗадачаПроекта,Справочники.СтатьиСметы.ВознаграждениеКМ));
			Если СтрокаФакта.Количество() > 0 Тогда
				СуммаФакта5_1 = СтрокаФакта[0].Сумма;
			Иначе	
				СуммаФакта5_1 = 0;
			КонецЕсли;

			
			Если ЕстьПроводка Тогда
				ДоляОбеспечения = СуммаФакта1_1/СуммаСметы;
			Иначе
				ДоляОбеспечения = СуммаФакта1_1 + ТекКоммерческоеВознаграждение.Сумма/СуммаСметы;
			КонецЕсли;	
			
			СтрокаСметы = СметаЗадачиПроекта.Расчет.НайтиСтроки(Новый Структура("Статья",Справочники.СтатьиСметы.ВознаграждениеКМ));
			Если СтрокаСметы.Количество() > 0 Тогда
				Параметр = СтрокаСметы[0].ЗначениеПараметра/100;
				СуммаСметы = СтрокаСметы[0].Сумма;
			Иначе	
				Продолжить;
			КонецЕсли;    
			
			База = ДоляОбеспечения * СуммаСметы;
			
			Если ЕстьПроводка Тогда 
					
				Начисление = База - СуммаФакта5_1 - ТекКоммерческоеВознаграждение.Сумма; 
			Иначе
				Начисление = База - СуммаФакта5_1;
			КонецЕсли;
			
			Если начисление > 0 тогда
				
				ЗаполнитьДвижениеПоМесяцам(ТекКоммерческоеВознаграждение, Движения, "ВознаграждениеКМ",Начисление);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ЗаполнитьДвижениеПоМесяцам(Стр, Движения, ИмяСтатьи,Сумма)
	
	// 2017 08 09 
	
	
	
	//Сумма = Стр.Сумма; // Стр[ИмяСтатьи];
	СтатьяСметы = Справочники.СтатьиСметы[ИмяСтатьи];
	
			
	
	Если Сумма = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Движение = Движения.БюджетПоМесяцам.Добавить();
	
	Движение.Период 		= Дата;
	Движение.ЗадачаПроекта 	= Стр.ЗадачаПроекта;
	Движение.СтатьяСметы 	= СтатьяСметы;
	// 08,04,20013
	Движение.ТипСуммы 		= Перечисления.ТипСуммыБюджета.Факт;  // факт
	Движение.Месяц 			= НачалоМесяца(Дата);
	// 2016 02 15 
	Движение.РКО			= Истина;
	//
	
	
	Движение.Сумма       = Сумма;	

	
КонецПроцедуры		