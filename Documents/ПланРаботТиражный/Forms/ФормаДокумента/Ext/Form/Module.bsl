#Область ОбработчикиФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	//Вставить содержимое обработчика
	ИсполненВключая = ИсполнениеПланаРабота( Объект.Ссылка );
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ РазрешеноСоздаватьДокумент( Объект.Ссылка, Объект.ЗадачаПроекта.Владелец ) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;		
	СуммаПоСмете = СуммаПоСмете( Объект.Ссылка );
	

		
	УстановитьОстатокПоСмете( );
	// 
	НастроитьСписокПосещений();

КонецПроцедуры

#КонецОбласти


&НаСервереБезКонтекста
Функция ИсполнениеПланаРабота( ПланРабот  )
	
	СтрЗакрытия = Документы.ПланРаботТиражный.ЗакрытиеПланаРабот( ПланРабот);
	Если СтрЗакрытия = Неопределено Тогда
		Возврат Дата(1,1,1); 
	Иначе
		Возврат СтрЗакрытия.Месяц;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция СуммаПоСмете( ПланРабот )
	//СметаПлана  =  Документы.ПланРабот.СметаПланаРабот( ПланРабот );
	СметаПлана  =  УП_ПланыРаботПоПроектам.СметаПланаРабот( ПланРабот );
	
	//СтрСметы = Документы.ПланРабот.СуммаПланаРаботПоСметеЗадачиПроекта( ЗадачаПроекта );
	Если СметаПлана = Неопределено Тогда
		Возврат 0; 
	Иначе
		Возврат СметаПлана.СуммаПлан;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура УстановитьОстатокПоСмете()
	// т.к. в бюджет по месяцам идет сумма ФОТ, то
	СуммаВсего 		= Объект.Расчет.Итог("СуммаФОТ");
	Если СуммаПоСмете <> 0 Тогда
		Объект.ОстатокПоСмете = СуммаПоСмете - СуммаВсего;
	Иначе
		Объект.ОстатокПоСмете = 0;
	КонецЕсли;
КонецПроцедуры

 &НаСервере
Процедура НастроитьСписокПосещений()
    ЭлементОтбора = КонтрагентыПосещений.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
    ЭлементОтбора.ЛевоеЗначение    = Новый ПолеКомпоновкиДанных("ПредметПосещения");
    ЭлементОтбора.ВидСравнения     = ВидСравненияКомпоновкиДанных.Равно;
    ЭлементОтбора.Использование    = Истина;
    ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
    ЭлементОтбора.ПравоеЗначение   = Объект.Ссылка;
КонецПроцедуры   



// период работы не ограничен календарным годом !!! (годом проекта)
// в пределах строки
// скидка с ЦЕНЫ, т.к. 
&НаКлиенте
Процедура ПересчитатьПланРаботПоСтроке( Стр )
	Если Стр <> Неопределено Тогда
		Стр.Сумма 		= Стр.Количество * Стр.Цена;
		Стр.СуммаФОТ 	= Стр.Количество * Стр.ЦенаФОТ;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РасчетПриИзменении(Элемент)
	Стр = Элементы.Расчет.ТекущиеДанные;
	ПересчитатьПланРаботПоСтроке( Стр );
	
	//
	УстановитьОстатокПоСмете( );
КонецПроцедуры

&НаСервереБезКонтекста
Функция  ПолучитьЦенуНоменклатуры( Номенклатура, ВидЦены, Дата )
	Возврат ЦенаНоменклатуры( Номенклатура, ВидЦены, Дата  );
	
КонецФункции

&НаКлиенте
Процедура ПриИзменении_Номенклатуры_Месяца_Скидки()
	Стр = Элементы.Расчет.ТекущиеДанные;
	Стр.Месяц 	= НачалоМесяца( Стр.Месяц );
	Цена 		= ПолучитьЦенуНоменклатуры( Стр.Номенклатура,  ПредопределенноеЗначение("Справочник.ВидыЦен.ЦенаОтпускная"), 	Стр.Месяц );
	ЦенаФОТ 	= ПолучитьЦенуНоменклатуры( Стр.Номенклатура,  ПредопределенноеЗначение("Справочник.ВидыЦен.ЦенаФОТ"), 			Стр.Месяц );
	
	Стр.Цена =  Цена - Стр.Скидка;
	// 
	Если Цена = 0 Тогда
		Стр.ЦенаФОТ = 0;
	Иначе
		К = ЦенаФОТ/Цена;
		Стр.ЦенаФОТ = Стр.Цена * К;
	КонецЕсли;
	//
	ПересчитатьПланРаботПоСтроке( Стр );
КонецПроцедуры


&НаКлиенте
Процедура РасчетНоменклатураПриИзменении(Элемент)
	ПриИзменении_Номенклатуры_Месяца_Скидки();
КонецПроцедуры

&НаКлиенте
Процедура РасчетМесяцПриИзменении(Элемент)
	ПриИзменении_Номенклатуры_Месяца_Скидки();
КонецПроцедуры

&НаКлиенте
Процедура РасчетСкидкаПриИзменении(Элемент)
	ПриИзменении_Номенклатуры_Месяца_Скидки();
КонецПроцедуры


#Область ОбслуживаниеПосещений

&НаКлиенте
Процедура ЗаполнитьПосещенияПоИсполнителямЗадачи(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		ПоказатьПредупреждение(,"План работ не записан!", 10);
	Иначе
		УП_РаботаСРабочимКалендаремСервер.ЗаполнитьКонтрагентовПосещенияПоИсполнителямЗадачи( Объект.Ссылка, 3, 1 );
	КонецЕсли;
	Элементы.КонтрагентыПосещений.Обновить();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьПосещенияКонтрагентовНаСервере( ПредметПосещения )
	// 
	УП_РаботаСРабочимКалендаремСервер.ОчиститьКонтрагентовПосещенийПоПредмету( ПредметПосещения );
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПосещения(Команда)
	ОчиститьПосещенияКонтрагентовНаСервере( Объект.Ссылка );
	Элементы.КонтрагентыПосещений.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура РасчетПередНачаломИзменения(Элемент, Отказ)
	Если Элементы.Расчет.ТекущиеДанные.Месяц <= ИсполненВключая Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры


#КонецОбласти


#Область ЗаполнениеИзКалькулятора

&НаКлиенте
Процедура ЗаполнитьИзКалькулятора(Команда)
	Перем КалькуляторПРТ;
	Если Объект.Проведен Тогда
		ПоказатьПредупреждение(,"Заполнить из калькулятора можно только непроведенный план работ!");
		Возврат;
	КонецЕсли;
	
	ОпОповещения = Новый ОписаниеОповещения("ПодтвердитьЗаполнение", ЭтаФорма );
	ПоказатьВводЗначения( ОпОповещения, КалькуляторПРТ,, Тип("СправочникСсылка.КалькуляторПланаРаботТиражного"));
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьЗаполнение(КалькуляторПРТ, ДопПараметры ) Экспорт
	Если КалькуляторПРТ = Неопределено Тогда Возврат; КонецЕсли;
	
	ОпОповещения = Новый ОписаниеОповещения("ПослеЗакрытияВопроса", ЭтаФорма, КалькуляторПРТ  );
	ПоказатьВопрос(ОпОповещения, "Заполнить текущий план работ из выбранного калькулятора?",
						РежимДиалогаВопрос.ДаНет);
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияВопроса(Результат, КалькуляторПРТ ) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьИзКалькулятораНаСервере( КалькуляторПРТ );
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзКалькулятораНаСервере( КалькуляторПРТ )
	// ничего не проверяем проверяем 
	Док = РеквизитФормыВЗначение("Объект");
	ЗаполнитьЗначенияСвойств( Док, КалькуляторПРТ );
	Расчет = КалькуляторПРТ.Расчет.Выгрузить();
	Док.Расчет.Загрузить( Расчет );
	
	ЗначениеВРеквизитФормы( Док, "Объект");
	
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры


#КонецОбласти



#Область ЗаполнениеРасчета

&НаСервере
Процедура Расчет_ОбработатьИзменения( Команда, сКалендарь = Неопределено, НазвПоляКалендаря = "" )
	ДокПРТ = РеквизитФормыВЗначение("Объект");
	
	УП_ПланыРаботПоПроектам.ОбработатьИзмененияРасчета( ДокПРТ, Период, Количество,
					Номенклатура, 
					ИсполненВключая, Команда, сКалендарь, НазвПоляКалендаря);
					
	ДокПРТ.Расчет.Сортировать("Месяц,Номенклатура");
	ЗначениеВРеквизитФормы( ДокПРТ, "Объект");	
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция РабочиеДниПоМесяцам( ДатаНачала, ДатаОкончания);
	Возврат УП_ПланыРаботПоПроектам.РабочиеДниПоМесяцам( ДатаНачала, ДатаОкончания);
КонецФункции


 &НаКлиенте
Процедура УстановитьПоКалендарю( НазвПоказателя )

	Если ЗначениеЗаполнено( Номенклатура ) 
	И 	 Количество <> 0 Тогда
		// рабочих дней и т.д. по месяцам
		сМ = РабочиеДниПоМесяцам( Период.ДатаНачала, Период.ДатаОкончания);
		//
		Расчет_ОбработатьИзменения( "Установить",  сМ, НазвПоказателя );
		
	Иначе
		ПоказатьПредупреждение(, "Должны быть указаны номенклатура и количество!", 10);
		
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ВычестьИзПланаРабот(Команда)
	Расчет_ОбработатьИзменения( "Вычесть" );
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВПланРабот(Команда)
	Расчет_ОбработатьИзменения( "Добавить" );
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВПланеРабот(Команда)
	Расчет_ОбработатьИзменения( "Установить" );
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВПланеРабот(Команда)
	Расчет_ОбработатьИзменения( "Очистить" );
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКалендарюВдень(Команда)
	УстановитьПоКалендарю( "РДней" );
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКалендарюВнеделю(Команда)
	УстановитьПоКалендарю( "РНедель" );
КонецПроцедуры

#КонецОбласти