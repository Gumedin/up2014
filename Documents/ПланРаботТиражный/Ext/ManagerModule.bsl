Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	// печать счёта на оплату
	ПодготовитьПечатнуюФорму(
		"ПланРабот",
		НСтр("ru = 'План работ (тиражный)'"),
		"ОбщиеМакеты.ПФ_MXL_ПланРаботТиражный",
		МассивОбъектов,
		КоллекцияПечатныхФорм,
		ОбъектыПечати,
		ПараметрыВывода);
		
		
	ПодготовитьПечатнуюФорму(
		"ТиражноеЗакрытие",
		НСтр("ru = 'Закрытие плана работ (тиражного)'"),
		"ОбщиеМакеты.ПФ_MXL_ПланРабот",
		МассивОбъектов,
		КоллекцияПечатныхФорм,
		ОбъектыПечати,
		ПараметрыВывода);
		
		
		
		
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Ложь;
	
	
КонецПроцедуры


Процедура ПодготовитьПечатнуюФорму(Знач ИмяМакета, ПредставлениеМакета, ПолныйПутьКМакету = "", МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода)
	
	//НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПланРабот");
	//Если НужноПечататьМакет Тогда
	//	УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
	//	КоллекцияПечатныхФорм,
	//	ИмяМакета,
	//	ПредставлениеМакета,
	//	ПечатьПланаРабот(МассивОбъектов, ОбъектыПечати, ИмяМакета),
	//	,
	//	ПолныйПутьКМакету);
	//КонецЕсли;
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ПланРабот");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		ИмяМакета,
		ПредставлениеМакета,
		УП_ПланыРаботПоПроектам.ПечатьПланаРаботТиражного(МассивОбъектов, ОбъектыПечати, ИмяМакета),
		,
		ПолныйПутьКМакету);
	КонецЕсли;
	
	НужноПечататьМакет = УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ТиражноеЗакрытие");
	Если НужноПечататьМакет Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
		КоллекцияПечатныхФорм,
		ИмяМакета,
		ПредставлениеМакета,
		ПечатьЗакрытияПланаРабот(МассивОбъектов, ОбъектыПечати, ИмяМакета),
		,
		ПолныйПутьКМакету);
	КонецЕсли;
	
	
КонецПроцедуры

Функция ПечатьЗакрытияПланаРабот(МассивОбъектов, ОбъектыПечати, ИмяМакета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланРабот.Ссылка
		|ИЗ
		|	Документ.ПланРаботТиражный КАК ПланРабот
		|ГДЕ
		|	ПланРабот.Ссылка В(&МассивОбъектов)";
	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ЗакрытиеПланаРаботТиражного";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПланРаботТиражный.ПФ_MXL_ЗакрытиеПланаРаботТиражный");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// выводим документ
		СформироватьЗакрытиеПланаРабот(ТабличныйДокумент, Шапка.Ссылка, Макет );
		
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	
	КонецЦикла;
	
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.Защита = Истина;
	Возврат ТабличныйДокумент;
	
КонецФункции


Процедура СформироватьЗакрытиеПланаРабот(ТабДок, Ссылка, Макет) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗакрытиеАктаТПФизическиеЛица.ФизическоеЛицо,
		|	ЗакрытиеАктаТПФизическиеЛица.Номенклатура,
		|	СУММА(ЗакрытиеАктаТПФизическиеЛица.Количество) КАК Количество,
		|	СУММА(ЗакрытиеАктаТПФизическиеЛица.СуммаФОТ) КАК СуммаФОТ,
		|	ЗакрытиеАктаТПФизическиеЛица.Ссылка КАК Документ,
		|	НАЧАЛОПЕРИОДА(ЗакрытиеАктаТПФизическиеЛица.Ссылка.Дата, МЕСЯЦ) КАК Месяц,
		|	ЗакрытиеАктаТПФизическиеЛица.Ссылка.АктТиражногоПодразделения.Контрагент КАК Контрагент,
		|	ЗакрытиеАктаТПФизическиеЛица.Ссылка.АктТиражногоПодразделения.Подразделение КАК Подразделение
		|ПОМЕСТИТЬ ВТ_ДанныеЗакрытия
		|ИЗ
		|	Документ.ЗакрытиеАктаТП.ФизическиеЛица КАК ЗакрытиеАктаТПФизическиеЛица
		|ГДЕ
		|	ЗакрытиеАктаТПФизическиеЛица.Ссылка.АктТиражногоПодразделения.ПланРабот = &ПланРабот
		|	И ЗакрытиеАктаТПФизическиеЛица.Ссылка.Проведен
		|	И ЗакрытиеАктаТПФизическиеЛица.Количество <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗакрытиеАктаТПФизическиеЛица.ФизическоеЛицо,
		|	ЗакрытиеАктаТПФизическиеЛица.Номенклатура,
		|	ЗакрытиеАктаТПФизическиеЛица.Ссылка,
		|	НАЧАЛОПЕРИОДА(ЗакрытиеАктаТПФизическиеЛица.Ссылка.Дата, МЕСЯЦ),
		|	ЗакрытиеАктаТПФизическиеЛица.Ссылка.АктТиражногоПодразделения.Контрагент,
		|	ЗакрытиеАктаТПФизическиеЛица.Ссылка.АктТиражногоПодразделения.Подразделение
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗакрытиеТПЗакрытие.ФизическоеЛицо,
		|	ЗакрытиеТПЗакрытие.Номенклатура,
		|	СУММА(ЗакрытиеТПЗакрытие.Количество),
		|	СУММА(ЗакрытиеТПЗакрытие.СуммаФОТ),
		|	ЗакрытиеТПЗакрытие.Ссылка,
		|	НАЧАЛОПЕРИОДА(ЗакрытиеТПЗакрытие.Ссылка.Дата, МЕСЯЦ),
		|	ЗакрытиеТПЗакрытие.Ссылка.Проект.Контрагент,
		|	ЗакрытиеТПЗакрытие.Ссылка.ПланРабот.Подразделение
		|ИЗ
		|	Документ.ЗакрытиеТП.Закрытие КАК ЗакрытиеТПЗакрытие
		|ГДЕ
		|	ЗакрытиеТПЗакрытие.Ссылка.ПланРабот = &ПланРабот
		|	И ЗакрытиеТПЗакрытие.Ссылка.Проведен
		|	И ЗакрытиеТПЗакрытие.Количество <> 0
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗакрытиеТПЗакрытие.Ссылка,
		|	ЗакрытиеТПЗакрытие.ФизическоеЛицо,
		|	ЗакрытиеТПЗакрытие.Номенклатура,
		|	ЗакрытиеТПЗакрытие.Ссылка.Проект.Контрагент,
		|	ЗакрытиеТПЗакрытие.Ссылка.ПланРабот.Подразделение,
		|	НАЧАЛОПЕРИОДА(ЗакрытиеТПЗакрытие.Ссылка.Дата, МЕСЯЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеЗакрытия.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ВТ_ДанныеЗакрытия.Номенклатура КАК Номенклатура,
		|	ВТ_ДанныеЗакрытия.Количество,
		|	ВТ_ДанныеЗакрытия.СуммаФОТ,
		|	ВТ_ДанныеЗакрытия.Документ,
		|	ВТ_ДанныеЗакрытия.Контрагент,
		|	ВТ_ДанныеЗакрытия.Подразделение,
		|	ВТ_ДанныеЗакрытия.Месяц КАК Месяц
		|ИЗ
		|	ВТ_ДанныеЗакрытия КАК ВТ_ДанныеЗакрытия
		|
		|УПОРЯДОЧИТЬ ПО
		|	Месяц,
		|	Номенклатура,
		|	ФизическоеЛицо";
	
	Запрос.УстановитьПараметр("ПланРабот", 		Ссылка);
	тзЗакрытие = Запрос.Выполнить().Выгрузить();
	Если тзЗакрытие.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	ЗаполнитьЗначенияСвойств( Шапка.Параметры, Ссылка );
	Шапка.Параметры.Проект = Ссылка.ЗадачаПроекта.Владелец;
	ТабДок.Вывести(Шапка );
	
	Для Каждого СтрЗ из тзЗакрытие Цикл
		ШапкаЗакрытие = Макет.ПолучитьОбласть("Закрытие");
		ШапкаЗакрытие.Параметры.Заполнить( СтрЗ );
		ШапкаЗакрытие.Параметры.Номер = тзЗакрытие.Индекс( СтрЗ )+ 1;
		ТабДок.Вывести(ШапкаЗакрытие);
	КонецЦикла;
	
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	тзЗакрытие.Свернуть("","Количество,СуммаФОТ");
	ЗаполнитьЗначенияСвойств( Подвал.Параметры, тзЗакрытие[0] );
	ТабДок.Вывести(Подвал);
	
	
	//}}
КонецПроцедуры



// Процедура печати документа.
//
Функция ПечатьПланаРабот(МассивОбъектов, ОбъектыПечати, ИмяМакета = "ПланРабот") Экспорт
	Запрос = Новый Запрос;

	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланРабот.Ссылка
		|ИЗ
		|	Документ.ПланРаботТиражный КАК ПланРабот
		|ГДЕ
		|	ПланРабот.Ссылка В(&МассивОбъектов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	КалькуляторПланаРабот.Ссылка
		|ИЗ
		|	Справочник.КалькуляторПланаРабот КАК КалькуляторПланаРабот
		|ГДЕ
		|	КалькуляторПланаРабот.Ссылка В(&МассивОбъектов)";
	
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Шапка = Запрос.Выполнить().Выбрать();
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.КлючПараметровПечати = "ПланРаботТиражный";
	
	Макет = УправлениеПечатью.ПолучитьМакет("Документ.ПланРаботТиражный.ПФ_MXL_ПланРаботТиражный");
	
	Пока Шапка.Следующий() Цикл
		Если ТабличныйДокумент.ВысотаТаблицы > 0 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		// выводим документ
		//УП_ПланыРаботПоПроектам.СформироватьПланРаботПоИсточнику(ТабличныйДокумент, Шапка.Ссылка, Макет );
		СформироватьПланРаботПоИсточнику(ТабличныйДокумент, Шапка.Ссылка, Макет );
		
		// конец вывода документа

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
	
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура СформироватьПланРаботПоИсточнику(ТабДок, Ссылка, Макет) Экспорт
	
	// начальный фронт работ
	тзФронтРабот = ПолучитьФронтРаботПоПлануДокументу( Ссылка );
	
	тзНоменклатуры 	 = тзФронтРабот.Скопировать(,"Номенклатура");
	тзНоменклатуры.Свернуть( "Номенклатура", "");
	тзНоменклатуры.Сортировать("Номенклатура");
	
	Шапка = Макет.ПолучитьОбласть("Шапка|Начало");
	ЗаполнитьЗначенияСвойств( Шапка.Параметры, Ссылка );
	Шапка.Параметры.Проект = Ссылка.ЗадачаПроекта.Владелец;
	ТабДок.Вывести(Шапка );
	Для Каждого НС из тзНоменклатуры Цикл
		ШапкаК = Макет.ПолучитьОбласть("Шапка|Номенклатура");
		ШапкаК.Параметры.Номенклатура = НС.Номенклатура;
		ТабДок.Присоединить(ШапкаК);
	КонецЦикла;
	ШапкаИ = Макет.ПолучитьОбласть("Шапка|Итого");
	ТабДок.Присоединить(ШапкаИ );
	
	тзМесяцы = тзФронтРабот.Скопировать(,"Месяц");
	тзМесяцы.Свернуть( "Месяц", "");
	тзМесяцы.Сортировать("Месяц");
	Для Каждого Месяц ИЗ тзМесяцы Цикл
		ОблМесяц = Макет.ПолучитьОбласть("Месяц|Начало");
		ОблМесяц.Параметры.Номер = тзМесяцы.Индекс( Месяц)  + 1;
		ОблМесяц.Параметры.Месяц = ПредставлениеПериода( НачалоМесяца( Месяц.Месяц ), 
														 КонецМесяца( Месяц.Месяц), "ФП=Истина");
		ТабДок.Вывести(ОблМесяц);
		
		//
		Для Каждого НС из тзНоменклатуры Цикл
			ОблМесяцК = Макет.ПолучитьОбласть("Месяц|Номенклатура");
			Р = ДетальноеКоличество( тзФронтРабот, Месяц.Месяц, НС.Номенклатура );
			ОблМесяцК.Параметры.Количество 	= Р["Количество"];
			ОблМесяцК.Параметры.Сумма 		= Р["Сумма"];
			ТабДок.Присоединить(ОблМесяцК );
		КонецЦикла;
		ОблМесяцИ = Макет.ПолучитьОбласть("Месяц|Итого");
		// 
		Р = ДетальноеКоличество( тзФронтРабот, Месяц.Месяц );
		ОблМесяцИ.Параметры.Количество 	= Р["Количество"];
		ОблМесяцИ.Параметры.Сумма 		= Р["Сумма"];
		ТабДок.Присоединить( ОблМесяцИ );
		
	КонецЦикла;
	
	Подвал = Макет.ПолучитьОбласть("Подвал|Начало");
	ЗаполнитьЗначенияСвойств( Шапка.Параметры, Ссылка );
	ТабДок.Вывести(Подвал);
	Для Каждого НС из тзНоменклатуры Цикл
		ПодвалК = Макет.ПолучитьОбласть("Подвал|Номенклатура");
		//
		Р = ДетальноеКоличество( тзФронтРабот,, НС.Номенклатура );
		ПодвалК.Параметры.Количество 	= Р["Количество"];
		ПодвалК.Параметры.Сумма 		= Р["Сумма"];
		
		
		
		ТабДок.Присоединить(ПодвалК );
	КонецЦикла;
	ПодвалИ = Макет.ПолучитьОбласть("Подвал|Итого");
	
	Р = ДетальноеКоличество( тзФронтРабот );
	ПодвалИ.Параметры.Количество 	= Р["Количество"];
	ПодвалИ.Параметры.Сумма 		= Р["Сумма"];
	
	
	ТабДок.Присоединить(ПодвалИ);
	
	
	//}}
КонецПроцедуры

Функция ПолучитьФронтРаботПоПлануДокументу( Ссылка )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланРаботТиражныйРасчет.Месяц,
		|	ПланРаботТиражныйРасчет.Номенклатура,
		|	СУММА(ПланРаботТиражныйРасчет.Количество) КАК Количество,
		|	СУММА(ПланРаботТиражныйРасчет.Сумма) КАК Сумма
		|ИЗ
		|	Документ.ПланРаботТиражный.Расчет КАК ПланРаботТиражныйРасчет
		|ГДЕ
		|	ПланРаботТиражныйРасчет.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ПланРаботТиражныйРасчет.Номенклатура,
		|	ПланРаботТиражныйРасчет.Месяц";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
КонецФункции


Функция ДетальноеКоличество( ФронтРабот, Месяц = Неопределено, Номенклатура = Неопределено)
	Отбор = Новый Структура;
	Если Месяц <> Неопределено Тогда
		Отбор.Вставить("Месяц", Месяц);
	КонецЕсли;
	Если Номенклатура <> Неопределено Тогда
		Отбор.Вставить("Номенклатура", Номенклатура);
	КонецЕсли;
	Если Отбор.Количество() <> 0 Тогда
		тз = ФронтРабот.Скопировать( Отбор, "Количество,Сумма");
		Количество 	= тз.Итог("Количество");
		Сумма 		= тз.Итог("Сумма");
	Иначе
		Количество 	= ФронтРабот.Итог("Количество");
		Сумма	 	= ФронтРабот.Итог("Сумма");
	КонецЕсли;
	С = Новый Соответствие;
	с.Вставить("Количество", Количество );
	с.Вставить("Сумма", 	 Сумма);
	
		
	Возврат с;
		
КонецФункции



Функция ЗакрытиеПланаРабот( ПланРабот )   Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ЕСТЬNULL(БюджетПоМесяцам.Месяц, ДАТАВРЕМЯ(1, 1, 1))) КАК Месяц,
		|	СУММА(ЕСТЬNULL(БюджетПоМесяцам.Сумма, 0)) КАК Сумма
		|ИЗ
		|	РегистрНакопления.БюджетПоМесяцам КАК БюджетПоМесяцам
		|ГДЕ
		|	БюджетПоМесяцам.СтатьяСметы = &СтатьяФОТПП
		|	И БюджетПоМесяцам.ЗадачаПроекта = &ЗадачаПроекта
		|	И БюджетПоМесяцам.ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипСуммыБюджета.Факт)
		|	И ВЫБОР
		|			КОГДА ТИПЗНАЧЕНИЯ(БюджетПоМесяцам.Регистратор) = ТИП(Документ.ТабельРаботПоЗадачеПроектаТиражный)
		|				ТОГДА БюджетПоМесяцам.Регистратор.ПланРаботТиражный = &ПланРабот
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ
		|
		|СГРУППИРОВАТЬ ПО
		|	БюджетПоМесяцам.ЗадачаПроекта";

		
	// закрыто
	Запрос.УстановитьПараметр("СтатьяФОТПП", 	Справочники.СтатьиСметы.ФОТ_ПП );
	Запрос.УстановитьПараметр("ПланРабот",  	ПланРабот );
	Запрос.УстановитьПараметр("ЗадачаПроекта",  ПланРабот.ЗадачаПроекта );
	
	сРезультат 				= Новый Структура;
	// 
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		сРезультат.Вставить("Месяц", 		ВыборкаДетальныеЗаписи.Месяц);
		сРезультат.Вставить("СуммаЗакрыто", ВыборкаДетальныеЗаписи.Сумма);
		Возврат сРезультат;
	КонецЦикла;
	сРезультат.Вставить("Месяц", 		Дата(1,1,1));
	сРезультат.Вставить("СуммаЗакрыто", 0);
	Возврат сРезультат;
	
	
КонецФункции


Функция ИсполнениеПланаРабот( ПланРабот  )  Экспорт
	
	СтрЗакрытия = ЗакрытиеПланаРабот( ПланРабот);
	Если СтрЗакрытия = Неопределено Тогда
		Возврат Дата(1,1,1); 
	Иначе
		Возврат СтрЗакрытия.Месяц;
	КонецЕсли;
КонецФункции


Функция ПроведеннаяСметаЗадачи( ПланРабот ) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СметаЗадачиПроектаДокументы.Ссылка
		|ИЗ
		|	Документ.СметаЗадачиПроекта.Документы КАК СметаЗадачиПроектаДокументы
		|ГДЕ
		|	СметаЗадачиПроектаДокументы.Документ = &Документ
		|	И СметаЗадачиПроектаДокументы.Ссылка.Проведен";

	Запрос.УстановитьПараметр("Документ", ПланРабот);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	Возврат Неопределено;

КонецФункции


// 2016 09 26
// новая версия, берем в т.ч с последующих месяцев, очищаем пропущенные месяцы
// сЗакрыто - структура Номенклатура, Закрыто 

Процедура ИсправитьРасчетПоТекущемуЗакрытию( ПланРаботТиражный, ПериодРегистрации, сЗакрыто ) Экспорт
	ИсполненВключая = Документы.ПланРаботТиражный.ИсполнениеПланаРабот( ПланРаботТиражный );
	Если ПериодРегистрации  <= ИсполненВключая Тогда
		Сообщить(, "План работ (тиражный) " + ПланРаботТиражный + " исполнен по " + Формат( ИсполненВключая,  "ДЛФ=DD"));
		Возврат;
	КонецЕсли;
	
	// текущее состояние
	ДокОб		= ПланРаботТиражный.ПолучитьОбъект();
	// 
	сОстатки = Новый Соответствие;
	МаксимальныйМесяцПлана = Дата(1,1,1);
	
	// работаем с таблицей значения
	тзРасчет 	= ДокОб.Расчет.Выгрузить();
	// в текущей таблице может не быть месяца для периода регистрации, отрабатываем сначала закрыто
	Для Каждого Эл ИЗ сЗакрыто Цикл
		Номенклатура 	= Эл.Ключ;
		Количество 		= Эл.Значение;
		
		Отбор 	= Новый Структура("Номенклатура,Месяц", Номенклатура, ПериодРегистрации );
		мСтрок 	= тзРасчет.НайтиСтроки( Отбор );
		Если мСтрок.Количество() = 0 Тогда
			СтрокаР = тзРасчет.Добавить();
			СтрокаР.Номенклатура 	= Номенклатура;
			СтрокаР.Месяц			= ПериодРегистрации;
			//ОбновитьОстаткиПоНоменклатуре( сОстатки, СтрокаР.Номенклатура, -Количество );
		Иначе
			// будем считать, что строка одна
			// в конце свернем 
			СтрокаР = мСтрок[0];
			// добавим в остаток текущее количество
			//ОбновитьОстаткиПоНоменклатуре( сОстатки, СтрокаР.Номенклатура, СтрокаР.Количество );
		КонецЕсли;
		//
		ОбновитьОстаткиПоНоменклатуре( сОстатки, СтрокаР.Номенклатура, СтрокаР.Количество -Количество );
		СтрокаР.Количество	= Количество;
		ПересчетСтрокиПланаРаботТиражного( СтрокаР );
		
		// чтобы было куда переносить остатки, добавим строку на на следующий месяц
		СледующийМесяц = ДобавитьМесяц( ПериодРегистрации, 1);
		Отбор 	= Новый Структура("Номенклатура,Месяц", Номенклатура,  СледующийМесяц);
		мСтрок 	= тзРасчет.НайтиСтроки( Отбор );
		Если мСтрок.Количество() = 0 Тогда
			СтрокаР = тзРасчет.Добавить();
			СтрокаР.Номенклатура 	= Номенклатура;
			СтрокаР.Месяц			= СледующийМесяц;
		КонецЕсли;
		
	КонецЦикла;
	
	// теперь в расчете точно есть строка для периода регистрации
	Для Каждого СтрокаР ИЗ  тзРасчет Цикл
		Если 	СтрокаР.Месяц <= ИсполненВключая Тогда
			
		ИначеЕсли СтрокаР.Месяц < ПериодРегистрации Тогда
		// добавляем в сумму остатков
			ОбновитьОстаткиПоНоменклатуре( сОстатки, СтрокаР.Номенклатура, СтрокаР.Количество );
			СтрокаР.Количество = 0;
			
			//
		ИначеЕсли СтрокаР.Месяц = ПериодРегистрации Тогда
			// уже обработали
			
		Иначе
		// период больше, списываем из остатков, пока они не закончаться
		//
			Остаток = ПолучитьОстатокПоНоменклатуре( сОстатки, СтрокаР.Номенклатура);
			Если 		Остаток = 0 Тогда 
			// ничего не делаем
			ИначеЕсли 	Остаток > 0 Тогда // просто прибавляем к следующему месяцу
				СтрокаР.Количество = СтрокаР.Количество + Остаток;
				ПересчетСтрокиПланаРаботТиражного( СтрокаР );
				// сбрасываем остаток по номенклатуре в 0
				ОбновитьОстаткиПоНоменклатуре( сОстатки, СтрокаР.Номенклатура, -Остаток );
			Иначе // остаток <0 
				ИсправленныйОстаток = СтрокаР.Количество + Остаток;
				Если ИсправленныйОстаток >=0 Тогда
					СтрокаР.Количество = ИсправленныйОстаток;
					// сбрасываем остаток полностью
					ОбновитьОстаткиПоНоменклатуре( сОстатки, СтрокаР.Номенклатура, -Остаток );
				Иначе // <0, в текущей строке не хватило остатка
					ОбновитьОстаткиПоНоменклатуре( сОстатки, СтрокаР.Номенклатура, СтрокаР.Количество );
					СтрокаР.Количество = 0;
				КонецЕсли;					
				
			КонецЕсли;
		КонецЕсли;
		// пересчитываем все строки
		ПересчетСтрокиПланаРаботТиражного( СтрокаР );
		МаксимальныйМесяцПлана = Макс( МаксимальныйМесяцПлана, СтрокаР.Месяц );
			
	КонецЦикла;
	// проверяем, есть ли не закрытые остатки по номенклатуре
	// записываем их в разницу остатка по смете
	СуммаФОТОстатка = 0;
	Для Каждого Эл ИЗ сОстатки Цикл
		Номенклатура 	= Эл.Ключ;
		Остаток 		= ПолучитьОстатокПоНоменклатуре( сОстатки, Номенклатура);
		Месяц 			= ДобавитьМесяц(ПериодРегистрации, 1);
		ЦенаФОТ 		= ЦенаНоменклатуры( Номенклатура,  ПредопределенноеЗначение("Справочник.ВидыЦен.ЦенаФОТ"), 	Месяц);
		СуммаФОТОстатка = СуммаФОТОстатка + Остаток * ЦенаФОТ;
	КонецЦикла;
	
	// считаем итоги
	// до исправления документа, ПО ФОТ
	СуммаФОТТекущая 		= ДокОб.Расчет.Итог("СуммаФОТ") + ДокОб.ОстатокПоСмете;
	СуммаФОТИсправленная 	= тзРасчет.Итог("СуммаФОТ") + СуммаФОТОстатка;
	Разница = СуммаФОТТекущая - СуммаФОТИсправленная;
	Если Разница >= 0 Тогда
	// денег хватает
		ДокОб.ОстатокПоСмете = СуммаФОТТекущая - тзРасчет.Итог("СуммаФОТ");
		// для клиента автоматов
		СуммаТекущая 		= ДокОб.Расчет.Итог("Сумма") + ДокОб.СкидкаКлиенту;
		ДокОб.СкидкаКлиенту	= СуммаТекущая - тзРасчет.Итог("Сумма");
	
	Иначе
	// денег не хватает
		Сообщить("Недостаточная сумма ("+Формат(Разница, "ЧЦ=15; ЧДЦ=2")+")по смете задачи для "+ ПланРаботТиражный);
		Возврат;
	КонецЕсли;
	
	// из-за того, что ставки фот могут быть изменены между месяцами правим сумму остаток по смете
	ДокСметаЗадачи			= Документы.ПланРаботТиражный.ПроведеннаяСметаЗадачи( ПланРаботТиражный );
	
	тзРасчет.Сортировать("Месяц");
	ДокОб.Расчет.Загрузить( тзРасчет );
	
	Попытка
		// перепроводим план работ
		ДокОб.Записать( РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный );
		
		// теперь смету задачи проекта 
		Если ДокСметаЗадачи <> Неопределено Тогда
			ДокСметаЗадачи_Об = ДокСметаЗадачи.ПолучитьОбъект();
			// 
			УстановитьПривилегированныйРежим( Истина );
			ДокСметаЗадачи_Об.Записать( РежимЗаписиДокумента.Проведение, РежимПроведенияДокумента.Неоперативный );
			УстановитьПривилегированныйРежим( Ложь );
		КонецЕсли;
		
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
		
	КонецПопытки;
	
КонецПроцедуры


Процедура ОбновитьОстаткиПоНоменклатуре( сОстатки, Номенклатура, Количество )
	ОстатокПоНоменклатуре = сОстатки.Получить( Номенклатура );
	ОстатокПоНоменклатуре = ?(ОстатокПоНоменклатуре = Неопределено, 0, ОстатокПоНоменклатуре);
	сОстатки.Вставить( Номенклатура, ОстатокПоНоменклатуре + Количество );
КонецПроцедуры

Функция ПолучитьОстатокПоНоменклатуре( сОстатки, Номенклатура)
	Остаток = сОстатки.Получить( Номенклатура );
	Возврат	?(Остаток = Неопределено, 0, Остаток );
КонецФункции

// при установленном количестве и месяце
Процедура ПересчетСтрокиПланаРаботТиражного( СтрокаР )
	СтрокаР.Цена 		= ЦенаНоменклатуры( СтрокаР.Номенклатура,  ПредопределенноеЗначение("Справочник.ВидыЦен.ЦенаОтпускная"), 	СтрокаР.Месяц );
	СтрокаР.ЦенаФОТ 	= ЦенаНоменклатуры( СтрокаР.Номенклатура,  ПредопределенноеЗначение("Справочник.ВидыЦен.ЦенаФОТ"), 			СтрокаР.Месяц );
	СтрокаР.СуммаФОТ	= СтрокаР.Количество * СтрокаР.ЦенаФОТ;
	СтрокаР.Сумма 	 	= СтрокаР.Количество * СтрокаР.Цена;
	
КонецПроцедуры
