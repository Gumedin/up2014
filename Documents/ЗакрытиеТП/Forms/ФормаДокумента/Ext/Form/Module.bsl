&НаСервере
Процедура ПриИзмененииТиражногоПроекта()
	МоментВремени = ?(Объект.Ссылка.Пустая(), ТекущаяДата(), Объект.Ссылка.МоментВремени()) ;

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ОстаткиЛимитаТПОстатки.СуммаОстаток) КАК СуммаОстаток
		|ИЗ
		|	РегистрНакопления.ОстаткиТирАиП.Остатки(
		|			&МоментВремени,
		|			Источник = &Проект
		|				И ПланРабот = &ПланРабот) КАК ОстаткиЛимитаТПОстатки";

	Запрос.УстановитьПараметр("МоментВремени", 	МоментВремени);
	Запрос.УстановитьПараметр("Проект", 		Объект.Проект);
	Запрос.УстановитьПараметр("ПланРабот", 		Объект.ПланРабот);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	ОстатокЛимитаТиражногоПроекта = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОстатокЛимитаТиражногоПроекта = ВыборкаДетальныеЗаписи.СуммаОстаток;
	КонецЦикла;

	// устанавливаем по умлочанию
	Попытка 
		Объект.ПланРабот = Объект.Проект.ПланРабот;
	Исключение
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = ОписаниеОшибки();
		Сообщение.Сообщить();
	КонецПопытки;
	
Конецпроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено( Объект.МесяцНачисления ) Тогда
		Объект.МесяцНачисления = НачалоМесяца(ТекущаяДата());
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТиражныйПроектПриИзменении(Элемент)
	ПриИзмененииТиражногоПроекта();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
КонецПроцедуры

&НаКлиенте
Процедура МесяцНачисленияПриИзменении(Элемент)
	Объект.МесяцНачисления = НачалоМесяца( Объект.МесяцНачисления );
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Объект.МесяцНачисления = НачалоМесяца( ДобавитьМесяц( НачалоМесяца(Объект.Дата), -1 ));
КонецПроцедуры

//&НаСервереБезКонтекста
//Функция МасиивПлановРабот(ТиражныйПроект)
//	Возврат ПланыРаботПоПроектам.СписокПлановРаботПоПодразделению( ТиражныйПроект.Подразделение );
//КонецФункции

&НаСервереБезКонтекста
Функция ПодразделениеТП( Проект )
	Возврат Проект.Подразделение;
КонецФункции


&НаКлиенте
Процедура ПланРаботНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ТипЗнч( Объект.ПланРабот ) = Тип( "ДокументСсылка.ПланРаботТиражный") Тогда
		//
		ПараметрыПР = Новый Структура;
		ПараметрыПР.Вставить("Подразделение", ПодразделениеТП( Объект.Проект) );
		
		ФормаВыбора 	= ПолучитьФорму( "Документ.ПланРаботТиражный.Форма.ФормаВыбораДляПодразделения", ПараметрыПР, Элемент );
		ФормаВыбора.Открыть();
		СтандартнаяОбработка = Ложь;
		
	КонецЕсли;
	//
	//мПР =  МасиивПлановРабот( Объект.ТиражныйПроект );
	//Если мПР.Количество() <> 0  Тогда
	//	Элементы.ПланРабот.РежимВыбораИзСписка = Истина;
	//	Элементы.ПланРабот.СписокВыбора.ЗагрузитьЗначения( мПР );
	//Иначе
	//	СтандартнаяОбработка = Ложь;
	//КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеНоменклатураНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	мНоменклатуры = мНоменклатуры( Объект.ПланРабот );
	Если мНоменклатуры <>  Неопределено Тогда
		ЭтаФорма.Элементы.ЗакрытиеНоменклатура.РежимВыбораИзСписка	=	Истина;
		ЭтаФорма.Элементы.ЗакрытиеНоменклатура.СписокВыбора.ЗагрузитьЗначения(мНоменклатуры);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция мНоменклатуры( ПланРаботТиражный )
	Возврат УП_ПланыРаботПоПроектам.МассивНоменклатурыИзПланаРаботТиражного( ПланРаботТиражный );
КонецФункции

&НаСервереБезКонтекста
Функция мЦен( ПланРаботТиражный, Номенклатура, НазваниеЦены )
	тзЦены 	= УП_ПланыРаботПоПроектам.ПолучитьЦеныНоменклатурыИзПланаРабот(ПланРаботТиражный, Номенклатура );
	мЦен	=  тзЦены.ВыгрузитьКолонку( НазваниеЦены );
	Возврат мЦен;
КонецФункции


&НаКлиенте
Процедура ПересчетСуммПоСтроке( Стр )
	// 
	Стр.Сумма 		= Стр.Количество * Стр.Цена - Стр.Скидка;
	// пропорция цены
	Если Стр.Цена <> 0 Тогда
		К = Стр.Сумма/Стр.Цена;
		// пересчет суммы
		Стр.СуммаФОТ 	= К * Стр.ЦенаФОТ;
	Иначе
		Стр.СуммаФОТ 	= Стр.Количество  * Стр.ЦенаФОТ;
	КонецЕсли;
КонецПроцедуры

// максимальная цена номенклатуры
&НаСервереБезКонтекста
Функция ПолучитьМаксЦенуИзПланаРабот( ПланРаботТиражный, Номенклатура )
	СтЦен = Новый Структура;
	тзЦены = УП_ПланыРаботПоПроектам.ПолучитьЦеныНоменклатурыИзПланаРабот(ПланРаботТиражный, Номенклатура );
	Если тзЦены.Количество() <> 0 Тогда
		СтЦен.Вставить("Цена", 		тзЦены[0].Цена);
		СтЦен.Вставить("ЦенаФОТ", 	тзЦены[0].ЦенаФОТ);
	Иначе
		СтЦен.Вставить("Цена", 		0);
		СтЦен.Вставить("ЦенаФОТ", 	0);
	КонецЕсли;
	Возврат СтЦен;
КонецФункции


&НаКлиенте
Процедура ЗакрытиеНоменклатураПриИзменении(Элемент)
	Перем ЦенаФОТ, Цена;
	Стр = Элементы.Закрытие.ТекущиеДанные;
	Если ЗначениеЗаполнено(Стр.Номенклатура) Тогда
	
		СтЦен 		= ПолучитьМаксЦенуИзПланаРабот( Объект.ПланРабот, Стр.Номенклатура );
		Стр.ЦенаФОТ = СтЦен.ЦенаФОТ;
		Стр.Цена    = СтЦен.Цена;	
		
	Иначе
		Стр.ЦенаФОТ = 0;
		Стр.Цена    = 0;	
	КонецЕсли;
	ПересчетСуммПоСтроке( Стр );

КонецПроцедуры

//&НаКлиенте
//Процедура ЗакрытиеКоличествоПриИзменении(Элемент)
//	Стр = Элементы.Закрытие.ТекущиеДанные;
//	ПересчетСуммПоСтроке( Стр );
//КонецПроцедуры


&НаКлиенте
Процедура ПланРаботПриИзменении(Элемент)
	Для Каждого Стр ИЗ Объект.Закрытие Цикл
		Стр.Номенклатура = Неопределено;
	КонецЦикла;
КонецПроцедуры


//&НаКлиенте
//Процедура ЗакрытиеСкидкаПриИзменении(Элемент)
//	Стр = Элементы.Закрытие.ТекущиеДанные;
//	ПересчетСуммПоСтроке( Стр );
//	
//КонецПроцедуры


&НаКлиенте
Процедура ЗакрытиеЦенаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Стр = Элементы.Закрытие.ТекущиеДанные;
	
	мЦен  = мЦен( Объект.ПланРабот,  Стр.Номенклатура, "Цена" );
	Если мЦен <>  Неопределено Тогда
		ЭтаФорма.Элементы.ЗакрытиеЦена.РежимВыбораИзСписка	=	Истина;
		ЭтаФорма.Элементы.ЗакрытиеЦена.СписокВыбора.ЗагрузитьЗначения(мЦен);
	КонецЕсли;
КонецПроцедуры


//&НаКлиенте
//Процедура ЗакрытиеЦенаПриИзменении(Элемент)
//	Стр = Элементы.Закрытие.ТекущиеДанные;
//	ПересчетСуммПоСтроке( Стр );
//КонецПроцедуры


&НаКлиенте
Процедура ЗакрытиеЦенаФОТНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Стр = Элементы.Закрытие.ТекущиеДанные;
	
	мЦен  = мЦен( Объект.ПланРабот,  Стр.Номенклатура, "ЦенаФОТ" );
	Если мЦен <>  Неопределено Тогда
		ЭтаФорма.Элементы.ЗакрытиеЦенаФОТ.РежимВыбораИзСписка	=	Истина;
		ЭтаФорма.Элементы.ЗакрытиеЦенаФОТ.СписокВыбора.ЗагрузитьЗначения(мЦен);
	КонецЕсли;
КонецПроцедуры


//&НаКлиенте
//Процедура ЗакрытиеЦенаФОТПриИзменении(Элемент)
//	Стр = Элементы.Закрытие.ТекущиеДанные;
//	ПересчетСуммПоСтроке( Стр );
//КонецПроцедуры


&НаКлиенте
Процедура ЗакрытиеПриИзменении(Элемент)
	Стр = Элементы.Закрытие.ТекущиеДанные;
	ПересчетСуммПоСтроке( Стр );
КонецПроцедуры

