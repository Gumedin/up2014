

&НаСервереБезКонтекста
Функция  ПолучитьЦенуНоменклатуры( Номенклатура, ВидЦены, Дата )
	Возврат ЦенаНоменклатуры( Номенклатура, ВидЦены, Дата  );
КонецФункции



#Область ОбработчикиСобытий

&НаКлиенте
Функция РасчетСуммыВсего( )
	СуммаВсегоФОТ 	= Объект.Расчет.Итог("СуммаФОТ") 	+ Объект.ОстатокПоСмете;
	СуммаВсего 		= Объект.Расчет.Итог("Сумма") 		- Объект.СкидкаКлиенту;
КонецФункции


&НаКлиенте
Процедура ПересчитатьПланРаботПоСтроке( Стр )
	Стр.Сумма 		= Стр.Количество * Стр.Цена;
	Стр.СуммаФОТ 	= Стр.Количество * Стр.ЦенаФОТ;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзменении_Номенклатуры_Месяца()
	Стр = Элементы.Расчет.ТекущиеДанные;
	Стр.Месяц 		= НачалоМесяца( Стр.Месяц );
	Стр.Цена 		= ПолучитьЦенуНоменклатуры( Стр.Номенклатура,  ПредопределенноеЗначение("Справочник.ВидыЦен.ЦенаОтпускная"), 	Стр.Месяц );
	Стр.ЦенаФОТ 	= ПолучитьЦенуНоменклатуры( Стр.Номенклатура,  ПредопределенноеЗначение("Справочник.ВидыЦен.ЦенаФОТ"), 			Стр.Месяц );
	
	//
	ПересчитатьПланРаботПоСтроке( Стр );
КонецПроцедуры


&НаКлиенте
Процедура РасчетПриИзменении(Элемент)
	Стр = Элементы.Расчет.ТекущиеДанные;
	ПересчитатьПланРаботПоСтроке( Стр );
	
	//
	РасчетСуммыВсего();
КонецПроцедуры

&НаКлиенте
Процедура РасчетПередНачаломИзменения(Элемент, Отказ)
	Если Элементы.Расчет.ТекущиеДанные.Месяц <= Объект.ИсполненВключая Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура РасчетНоменклатураПриИзменении(Элемент)
	ПриИзменении_Номенклатуры_Месяца();
КонецПроцедуры

&НаКлиенте
Процедура РасчетМесяцПриИзменении(Элемент)
	ПриИзменении_Номенклатуры_Месяца();
КонецПроцедуры

&НаКлиенте
Процедура ОстатокПоСметеПриИзменении(Элемент)
	РасчетСуммыВсего();
КонецПроцедуры

&НаКлиенте
Процедура ИсполненВключаяПриИзменении(Элемент)
	Объект.ИсполненВключая = НачалоМесяца( Объект.ИсполненВключая );
КонецПроцедуры

&НаКлиенте
Процедура РасчетМесяцОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	Если ВыбранноеЗначение <= Объект.ИсполненВключая Тогда
		ПоказатьПредупреждение(,"Месяц должен быть больше чем " + Формат(Объект.ИсполненВключая,"ДЛФ=DD"));
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СкидкаКлиентуПриИзменении(Элемент)
	РасчетСуммыВсего();
КонецПроцедуры


#КонецОбласти

#Область ЗаполнениеРасчета

&НаСервере
Процедура Расчет_ОбработатьИзменения( Команда, сКалендарь = Неопределено, НазвПоляКалендаря = "" )
	СправКПР = РеквизитФормыВЗначение("Объект");
	
	УП_ПланыРаботПоПроектам.ОбработатьИзмененияРасчета( СправКПР, Период, Количество,
					Номенклатура, 
					СправКПР.ИсполненВключая, Команда, сКалендарь, НазвПоляКалендаря);
					
	СправКПР.Расчет.Сортировать("Месяц,Номенклатура");
	ЗначениеВРеквизитФормы( СправКПР, "Объект");	
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция РабочиеДниПоМесяцам( ДатаНачала, ДатаОкончания);
	Возврат УП_ПланыРаботПоПроектам.РабочиеДниПоМесяцам( ДатаНачала, ДатаОкончания);
КонецФункции


 &НаКлиенте
Процедура УстановитьПоКалендарю( НазвПоказателя )

	Если ЗначениеЗаполнено( Номенклатура ) 
	И 	 Количество <> 0 Тогда
		// рабочих дней и т.д. по месяцам
		сМ = РабочиеДниПоМесяцам( Период.ДатаНачала, Период.ДатаОкончания);
		//
		Расчет_ОбработатьИзменения( "Установить",  сМ, НазвПоказателя );
		
	Иначе
		ПоказатьПредупреждение(, "Должны быть указаны номенклатура и количество!", 10);
		
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ВычестьИзПланаРабот(Команда)
	Расчет_ОбработатьИзменения( "Вычесть" );
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВПланРабот(Команда)
	Расчет_ОбработатьИзменения( "Добавить" );
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВПланеРабот(Команда)
	Расчет_ОбработатьИзменения( "Установить" );
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьВПланеРабот(Команда)
	Расчет_ОбработатьИзменения( "Очистить" );
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКалендарюВдень(Команда)
	УстановитьПоКалендарю( "РДней" );
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоКалендарюВнеделю(Команда)
	УстановитьПоКалендарю( "РНедель" );
КонецПроцедуры

#КонецОбласти