
&НаКлиенте
Процедура РесурсыМощностьПриИзменении(Элемент)
	ТекДанные = Элементы.Ресурсы.ТекущиеДанные;
	ТекДанные.Количество = ТекДанные.Мощность * Объект.Продолжительность * 8; // 8 часов в рабочем дне
КонецПроцедуры


&НаСервереБезКонтекста
Функция ТарифнаяСтавкаИсполнителя(Исполнитель)
	Если ТипЗнч( Исполнитель ) = Тип("СправочникСсылка.Должности") Тогда
		Возврат Исполнитель.ТарифнаяСтавка;
		
		
	Иначе // физическое лицо
		Возврат УП_КадрыСервер.ТарифнаяСтавкаФизЛица( Исполнитель );
		
	КонецЕсли;
	Возврат Справочники.ТарифныеСтавки.ПустаяСсылка();
КонецФункции

&НаКлиенте
Процедура РесурсыДолжностьПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Ресурсы.ТекущиеДанные;
	ТекущиеДанные.ТарифнаяСтавка = ТарифнаяСтавкаИсполнителя(ТекущиеДанные.Исполнитель);
	
КонецПроцедуры

&НаКлиенте
Процедура ТипОграниченияПриИзменении(Элемент)
	УстановитьДоступностьСроков();
КонецПроцедуры


&НаКлиенте
Процедура УстановитьДоступностьСроков()
	Элементы.РаннийФиниш.Доступность 	= Ложь;
	Элементы.ПозднийСтарт.Доступность 	= Ложь;
	Элементы.РаннийСтарт.Доступность 	= Ложь;
	Элементы.ПозднийФиниш.Доступность 	= Ложь;
	
	Если 		Объект.ТипОграничения = ПредопределенноеЗначение("Перечисление.ТипыОграниченияРабот.КакМожноРаньше") Тогда
		
	ИначеЕсли	Объект.ТипОграничения = ПредопределенноеЗначение("Перечисление.ТипыОграниченияРабот.КакМожноПозже") Тогда
		
	ИначеЕсли	Объект.ТипОграничения = ПредопределенноеЗначение("Перечисление.ТипыОграниченияРабот.НачалоНеПозднее") Тогда
		Элементы.РаннийСтарт.Доступность 	= Истина;
		
	ИначеЕсли	Объект.ТипОграничения = ПредопределенноеЗначение("Перечисление.ТипыОграниченияРабот.НачалоНеРанее") Тогда
		Элементы.РаннийСтарт.Доступность 	= Истина;
		
	ИначеЕсли	Объект.ТипОграничения = ПредопределенноеЗначение("Перечисление.ТипыОграниченияРабот.ОкончаниеНеПозднее") Тогда
		Элементы.ПозднийФиниш.Доступность 	= Истина;
		
	ИначеЕсли	Объект.ТипОграничения = ПредопределенноеЗначение("Перечисление.ТипыОграниченияРабот.ОкончаниеНеРанее") Тогда
		Элементы.ПозднийФиниш.Доступность 	= Истина;
		
	ИначеЕсли	Объект.ТипОграничения = ПредопределенноеЗначение("Перечисление.ТипыОграниченияРабот.ФиксированноеНачало") Тогда
		Элементы.РаннийСтарт.Доступность 	= Истина;
		
	ИначеЕсли	Объект.ТипОграничения = ПредопределенноеЗначение("Перечисление.ТипыОграниченияРабот.ФиксированноеОкончание") Тогда
		Элементы.ПозднийФиниш.Доступность 	= Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьСроковРаботы();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСроковРаботы()
	Если НЕ ЗначениеЗаполнено( Объект.ТипРасчетаСрокаРаботы ) Тогда
		Объект.ТипРасчетаСрокаРаботы = ПредопределенноеЗначение("Перечисление.ТипыРасчетаСрокаРабот.ПоЗадачеПроекта");
	КонецЕсли;
	
	Если Объект.ТипРасчетаСрокаРаботы = ПредопределенноеЗначение("Перечисление.ТипыРасчетаСрокаРабот.ПоЗадачеПроекта") Тогда
	
		ЭтаФорма.Элементы.ГруппаСрокиЗадачи.Видимость 				= Истина;
		ЭтаФорма.Элементы.ГруппаСрокиРаботы.Видимость 				= Ложь;
		ЭтаФорма.Элементы.ГруппаНастройкиРасчетаСроков.Видимость 	= Ложь;
	Иначе
		ЭтаФорма.Элементы.ГруппаСрокиЗадачи.Видимость 				= Ложь;
		ЭтаФорма.Элементы.ГруппаСрокиРаботы.Видимость 				= Истина;
		
		Если Объект.ТипРасчетаСрокаРаботы = ПредопределенноеЗначение("Перечисление.ТипыРасчетаСрокаРабот.Автоматически" ) Тогда
			ЭтаФорма.Элементы.ГруппаНастройкиРасчетаСроков.Видимость = Истина;
			
			УстановитьДоступностьСроков();
		Иначе
			ЭтаФорма.Элементы.ГруппаНастройкиРасчетаСроков.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры



&НаКлиенте
Процедура ТипРасчетаСрокаРаботыПриИзменении(Элемент)
	УстановитьВидимостьСроковРаботы();
КонецПроцедуры
