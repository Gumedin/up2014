&НаКлиенте
Процедура ВидимостьСтраницыКарты()
	КоличествоАдресов = 0;
	Для Каждого КИ из Объект.КонтактнаяИнформация Цикл
		Если КИ.Тип = ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес") Тогда
			КоличествоАдресов = КоличествоАдресов + 1;
			Если Элементы.ВидАдреса.СписокВыбора.НайтиПоЗначению( КИ.Вид ) = Неопределено Тогда
				Элементы.ВидАдреса.СписокВыбора.Добавить( КИ.Вид);
			КонецЕсли;			
		КонецЕсли;
		
	КонецЦикла;
	
	Если КоличествоАдресов <> 0 Тогда
		ВидАдреса	= Элементы.ВидАдреса.СписокВыбора.Получить(0).Значение;
	КонецЕсли;

	//Элементы.ГруппаКарта.Видимость = (КоличествоАдресов <> 0);
	Элементы.ГруппаКарта.Видимость = Истина;
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
  	УправлениеКонтактнойИнформацией.ПриСозданииНаСервере(ЭтотОбъект, Объект, "ГруппаКонтактнаяИнформация", ПоложениеЗаголовкаЭлементаФормы.Лево);
  	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
  	УправлениеКонтактнойИнформацией.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
  	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
	
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
  	УправлениеКонтактнойИнформацией.ОбработкаПроверкиЗаполненияНаСервере(ЭтотОбъект, Объект, Отказ);
  	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.КонтактнаяИнформация
  	УправлениеКонтактнойИнформацией.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
  	// Конец СтандартныеПодсистемы.КонтактнаяИнформация
КонецПроцедуры



// СтандартныеПодсистемы.КонтактнаяИнформация
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияПриИзменении(Элемент)
  УправлениеКонтактнойИнформациейКлиент.ПредставлениеПриИзменении(ЭтотОбъект, Элемент);
  
  // т.к. элемент не записан
  // ВидимостьСтраницыКарты();
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
  Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеНачалоВыбора(ЭтотОбъект, Элемент, , СтандартнаяОбработка);
  ОбновитьКонтактнуюИнформацию(Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияОчистка(Элемент, СтандартнаяОбработка)
  Результат = УправлениеКонтактнойИнформациейКлиент.ПредставлениеОчистка(ЭтотОбъект, Элемент.Имя);
  ОбновитьКонтактнуюИнформацию(Результат);
КонецПроцедуры
&НаКлиенте
Процедура Подключаемый_КонтактнаяИнформацияВыполнитьКоманду(Команда)
  Результат = УправлениеКонтактнойИнформациейКлиент.ПодключаемаяКоманда(ЭтотОбъект, Команда.Имя);
  ОбновитьКонтактнуюИнформацию(Результат);
  УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуВводаАдреса(ЭтотОбъект, Результат);
КонецПроцедуры
&НаСервере
Функция ОбновитьКонтактнуюИнформацию(Результат = Неопределено)
	
  Возврат УправлениеКонтактнойИнформацией.ОбновитьКонтактнуюИнформацию(ЭтотОбъект, Объект, Результат);
КонецФункции
// Конец СтандартныеПодсистемы.КонтактнаяИнформация


&НаСервереБезКонтекста
Функция ЕстьРолиДоступа()
	Возврат (РольДоступна( Метаданные.Роли.ФинансовыйМенеджер )
		или  РольДоступна(Метаданные.Роли.ПолныеПрава)
		//Добавлено 06.04.2018 17Ж37 Гумедин А.Г. по задаче #128970
		или  РольДоступна(Метаданные.Роли.КоммерческийДиректор));	
КонецФункции

&НаКлиенте
Процедура ДоступностьПолей()
	ДоступностьЭлементов = ЕстьРолиДоступа();
	//
	Элементы.Наименование.Доступность 		= ДоступностьЭлементов;
	Элементы.Родитель.Доступность 			= ДоступностьЭлементов;
	Элементы.НаименованиеПолное.Доступность = ДоступностьЭлементов;
	Элементы.КПП.Доступность 				= ДоступностьЭлементов;
	Элементы.ИНН.Доступность 				= ДоступностьЭлементов;
	Элементы.КодПоОКПО.Доступность 			= ДоступностьЭлементов;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДоступностьПолей();
	ВидимостьСтраницыКарты();
	                                        
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьАдрес(  Знач КонтактнаяИнформация, Вид )
	Отбор = Новый Структура("Вид", Вид );
	мКИ = КонтактнаяИнформация.НайтиСтроки( Отбор );
	Если мКИ.Количество() <> 0 Тогда
		Возврат мКИ[0].Представление;
	КонецЕсли;
	Возврат "";
	
КонецФункции

&НаКлиенте
Процедура ПоказатьАдрес( Знач КонтактнаяИнформация, Вид )
	Адрес = ПолучитьАдрес( КонтактнаяИнформация, Вид );
	Если НЕ ЗначениеЗаполнено( Адрес ) ТОгда
		Возврат;
	КонецЕсли;
	спАдресов = Новый СписокЗначений;
	спАдресов.Добавить( Адрес );
	
	// перерисовываем
	Карта = УП_КартыКлиент.ПолучитьКодХТМЛ_Яндекс( спАдресов );
КонецПроцедуры

&НаКлиенте
Процедура Группа1ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница.Имя = "ГруппаКарта" Тогда
		ВидимостьСтраницыКарты();
		//
		ПоказатьАдрес( Объект.КонтактнаяИнформация, ВидАдреса );
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВидАдресаПриИзменении(Элемент)
	ПоказатьАдрес( Объект.КонтактнаяИнформация, ВидАдреса );
КонецПроцедуры


// оповещение
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Изменение_Контрагента" Тогда
		//Объект.
		//ЭтаФорма.Элементы.Мнемокод.
		//ОбновитьОтображениеДанных( Элементы.Мнемокод );
	КонецЕсли;
КонецПроцедуры

#Область УстановитьРасходы

&НаСервереБезКонтекста
Процедура УстановитьРасходыДляКонтрагентовПосещенийНаСервере( Контрагент, Расходы )
	Набор = РегистрыСведений.КонтрагентыПосещений.СоздатьНаборЗаписей();
	Набор.Отбор.Контрагент.Установить(Контрагент);
	Набор.Прочитать();
	Для Каждого КП ИЗ Набор Цикл
		КП.Расходы = Расходы;
	КонецЦикла;
	Набор.Записать(Истина);

	
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасходыДляКонтрагентовПосещений(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		ПоказатьПредупреждение(,"Запишите контрагента!", 10);
		Возврат;
	КонецЕсли;
	УстановитьРасходыДляКонтрагентовПосещенийНаСервере( Объект.Ссылка, Объект.Расходы );
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьРасходыДляПосещенийКонтрагентовНаСервере(Контрагент, Расходы)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПосещенияКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ПосещенияКонтрагентов КАК ПосещенияКонтрагентов
		|ГДЕ
		|	ПосещенияКонтрагентов.Контрагент = &Контрагент
		|	И ПосещенияКонтрагентов.Дата > &НачалоМесяцаПосещений
		|	И НЕ ПосещенияКонтрагентов.Отработано
		|	И НЕ ПосещенияКонтрагентов.ПометкаУдаления";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("НачалоМесяцаПосещений", НачалоМесяцаПосещений());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ПосещениеОб 		= ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
		ПосещениеОб.Расходы = Расходы;
		Попытка
			ПосещениеОб.Записать();
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Не удалось установить расходы по посещению " + ПосещениеОб + ", " + ОписаниеОшибки();
			Сообщение.Сообщить();
			Возврат;
		КонецПопытки;
			
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРасходыДляПосещенийКонтрагентов(Команда)
	Если Объект.Ссылка.Пустая() Тогда
		ПоказатьПредупреждение(,"Запишите контрагента!", 10);
		Возврат;
	КонецЕсли;
	
	УстановитьРасходыДляПосещенийКонтрагентовНаСервере(Объект.Ссылка, Объект.Расходы );
КонецПроцедуры

&НаКлиенте
Процедура ПроездНаОплачиваетсяПриИзменении(Элемент)
	Если Объект.ПроездНаОплачивается Тогда
		Объект.Расходы = 0;
	КонецЕсли;
КонецПроцедуры


#КонецОбласти