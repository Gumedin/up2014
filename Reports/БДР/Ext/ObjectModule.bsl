Функция БюджетПоЗадачеПроекта( Параметры ) Экспорт
	//Бюджет по задаче [#129530]	
	//Формируем бюджет план/факт по задаче
	
	тзБюджет = Новый ТаблицаЗначений;
	тзБюджет.Колонки.Добавить("ЗадачаПроекта");
	тзБюджет.Колонки.Добавить("КодСтатьи");
	тзБюджет.Колонки.Добавить("Статья");
	тзБюджет.Колонки.Добавить("Месяц");
	тзБюджет.Колонки.Добавить("ТипСуммы");
	тзБюджет.Колонки.Добавить("ВидПлана");        
	тзБюджет.Колонки.Добавить("СуммаПоСтатье");
	тзБюджет.Колонки.Добавить("Источник");
	
	ГодЗадач = Параметры.ГодЗадач.Значение;
	
	Если ГодЗадач = Неопределено Тогда 
		Сообщить("Год задач не заданы");
		Возврат тзБюджет;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	БюджетПоМесяцам.ЗадачаПроекта КАК ЗадачаПроекта,
	               |	БюджетПоМесяцам.ЗадачаПроекта.ГодЗадачи КАК ГодЗадачаПроекта,
	               |	БюджетПоМесяцам.Месяц КАК Месяц,
	               |	БюджетПоМесяцам.ТипСуммы КАК ТипСуммы,
	               |	БюджетПоМесяцам.ВидПлана КАК ВидПлана,
	               |	СУММА(БюджетПоМесяцам.Сумма) КАК СуммаПоСтатье,
	               |	БюджетПоМесяцам.Регистратор КАК Регистратор,
	               |	БюджетПоМесяцам.СтатьяСметы КАК Статья
	               |ИЗ
	               |	РегистрНакопления.БюджетПоМесяцам КАК БюджетПоМесяцам
	               |ГДЕ
	               |	БюджетПоМесяцам.ТипСуммы <> &ТипСуммы
	               |	И БюджетПоМесяцам.ЗадачаПроекта.ГодЗадачи = &ГодЗадач";
	
	Запрос.УстановитьПараметр("ГодЗадач", ГодЗадач);
	Запрос.УстановитьПараметр("ТипСуммы", Перечисления.ТипСуммыБюджета.ПервичныйДокумент);
	
	Если Параметры.ТиповыеЗадачи.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И БюджетПоМесяцам.ЗадачаПроекта.ТиповаяЗадача В ИЕРАРХИИ(&ТиповыеЗадачи)";
		Запрос.УстановитьПараметр("ТиповыеЗадачи", Параметры.ТиповыеЗадачи.Значение);
	КонецЕсли;
	
	Если Параметры.СтатусыПроектов.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И БюджетПоМесяцам.ЗадачаПроекта.Владелец.Статус В(&СтатусыПроектов)";
		Запрос.УстановитьПараметр("СтатусыПроектов", Параметры.СтатусыПроектов.Значение);
	КонецЕсли;
	
	// Добавлено 28.05.2018 по задаче #129698 Гумедин А.Г.
	Если Параметры.Кураторы.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И БюджетПоМесяцам.ЗадачаПроекта.Владелец.Куратор В (&Кураторы)";
		Запрос.УстановитьПараметр("Кураторы", Параметры.Кураторы.Значение);
	КонецЕсли;
	
	Если Параметры.Менеджеры.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И БюджетПоМесяцам.ЗадачаПроекта.Владелец.МенеджерПроекта В (&Менеджеры)";
		Запрос.УстановитьПараметр("Менеджеры", Параметры.Менеджеры.Значение);
	КонецЕсли;
	
	Если Параметры.Директора.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И БюджетПоМесяцам.ЗадачаПроекта.Владелец.ДиректорПроекта В (&Директора)";
		Запрос.УстановитьПараметр("Директора", Параметры.Директора.Значение);
	КонецЕсли;
	
	Если Параметры.Подразделения.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И БюджетПоМесяцам.ЗадачаПроекта.Подразделение В (&Подразделения)";
		Запрос.УстановитьПараметр("Подразделения", Параметры.Подразделения.Значение);
	КонецЕсли;
	
	Если Параметры.ВидыЗадач.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И БюджетПоМесяцам.ЗадачаПроекта.ТиповаяЗадача.ВидТиповойЗадачи В (&ВидыЗадач)";
		Запрос.УстановитьПараметр("ВидыЗадач", Параметры.ВидыЗадач.Значение);
	КонецЕсли;
	
	Если Параметры.ВидыНоменклатуры.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И БюджетПоМесяцам.ЗадачаПроекта.ТиповаяЗадача.ВидНоменклатуры В (&ВидыНоменклатуры)";
		Запрос.УстановитьПараметр("ВидыНоменклатуры", Параметры.ВидыНоменклатуры.Значение);
	КонецЕсли;
	
	//Группировка перенесена сюда, дабы условие работало корректно. 29.08.2018 По задаче #133062 ГумединАГ
	Запрос.Текст = Запрос.Текст + "
						|   СГРУППИРОВАТЬ ПО
						|	БюджетПоМесяцам.ЗадачаПроекта,
						|	БюджетПоМесяцам.ТипСуммы,  
						|	БюджетПоМесяцам.Регистратор,   
						|	БюджетПоМесяцам.СтатьяСметы,    
						|	БюджетПоМесяцам.Месяц,  
						|	БюджетПоМесяцам.ВидПлана,
						|	БюджетПоМесяцам.ЗадачаПроекта.ГодЗадачи";
	////////////////////////////////////////////////////////
		
//	Если Параметры.ТиповыеЗадачи.Значение.Количество() > 0 Тогда
//		Запрос.УстановитьПараметр("ТиповыеЗадачи", Параметры.ТиповыеЗадачи.Значение);
//	КонецЕсли;;
	
//	Если Параметры.СтатусыПроектов.Значение.Количество() > 0 Тогда
//		Запрос.УстановитьПараметр("СтатусыПроектов", Параметры.СтатусыПроектов.Значение);
//	КонецЕсли;;
	
	тзРезультат = Запрос.Выполнить().Выгрузить();
	
	тзРезультат.Свернуть("ГодЗадачаПроекта, ЗадачаПроекта, Статья, Месяц, ТипСуммы, ВидПлана, Регистратор", "СуммаПоСтатье");
	
	тзПоГодам = тзРезультат.Скопировать();
	тзПоГодам.Свернуть("ГодЗадачаПроекта");
	
	тзПоЗадачам = тзРезультат.Скопировать();
	тзПоЗадачам.Свернуть("ГодЗадачаПроекта, ЗадачаПроекта");
	
	тзПоПериодам = тзРезультат.Скопировать();
//	тзПоПериодам.Свернуть("ГодЗадачаПроекта, ЗадачаПроекта, Месяц, ТипСуммы, ВидПлана");
	тзПоПериодам.Свернуть("Месяц, ТипСуммы, ВидПлана");
	
	//По годам, т.к. может быть разная структура смет
	Для Каждого итераторГод Из тзПоГодам Цикл
		//сСметы - структура сметы
		сСметы 	= УП_СметаПроекта.ПолучитьСтруктуруСметыЗадачи( итераторГод.ГодЗадачаПроекта );
		
		сСметыОстаток = Новый Соответствие;
		Для Каждого СтрСметы Из сСметы Цикл
			сСметыОстаток.Вставить(СтрСметы.Ключ, "");
		КонецЦикла;
		
		Для Каждого итераторЗадача Из тзПоЗадачам Цикл
			ОтборЗадача = Новый Структура();
			ОтборЗадача.Вставить("ГодЗадачаПроекта", итераторГод.ГодЗадачаПроекта);
			ОтборЗадача.Вставить("ЗадачаПроекта", итераторЗадача.ЗадачаПроекта);
			тзРезультатЗадача = тзРезультат.Скопировать(ОтборЗадача,"Месяц, ТипСуммы,ВидПлана,Статья,Регистратор,СуммаПоСтатье");
				
			итераторЗадача_ЗадачаПроекта = итераторЗадача.ЗадачаПроекта;
			
			Для Каждого итераторДетализация Из тзПоПериодам Цикл
				Если итераторДетализация.Месяц <> Null Тогда
					Отбор = Новый Структура();
					Отбор.Вставить("ТипСуммы", итераторДетализация.ТипСуммы);
					Отбор.Вставить("ВидПлана", итераторДетализация.ВидПлана);
					Отбор.Вставить("Месяц", итераторДетализация.Месяц);

					тзРезультатЗаПериод = тзРезультатЗадача.НайтиСтроки(Отбор);
					
					итераторДетализация_Месяц = итераторДетализация.Месяц;
					итераторДетализация_ТипСуммы = итераторДетализация.ТипСуммы;
					итераторДетализация_ВидПлана = итераторДетализация.ВидПлана;
					
					Для Каждого СтрСметы Из сСметыОстаток Цикл
						сСметыОстаток.Вставить(СтрСметы.Ключ, "");
					КонецЦикла;
					
					Для Каждого стр Из тзРезультатЗаПериод Цикл
						бюджет = тзБюджет.Добавить();
						бюджет.ЗадачаПроекта = итераторЗадача_ЗадачаПроекта;
						бюджет.КодСтатьи = сСметы[стр.Статья.ИмяПредопределенныхДанных].КодСтатьи;
						бюджет.Статья = стр.Статья;
						бюджет.Месяц = итераторДетализация_Месяц;
						бюджет.ТипСуммы = итераторДетализация_ТипСуммы;
						бюджет.ВидПлана = итераторДетализация_ВидПлана;
						бюджет.СуммаПоСтатье = стр.СуммаПоСтатье;
						бюджет.Источник = стр.Регистратор;
						
						//Не пусто
						сСметыОстаток.Вставить(стр.Статья.ИмяПредопределенныхДанных, "+");
					КонецЦикла;
					
					Для Каждого СтрСметы ИЗ сСметы Цикл
						Если ПустаяСтрока(сСметыОстаток.Получить(СтрСметы.Ключ)) Тогда
							бюджет = тзБюджет.Добавить();
							бюджет.ЗадачаПроекта = итераторЗадача_ЗадачаПроекта;
							бюджет.КодСтатьи = СтрСметы.Значение.КодСтатьи;
							бюджет.Статья = СтрСметы.Значение.Статья;
							бюджет.Месяц = итераторДетализация_Месяц;
							бюджет.ТипСуммы = итераторДетализация_ТипСуммы;
							бюджет.ВидПлана = итераторДетализация_ВидПлана;
							бюджет.СуммаПоСтатье = 0;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат тзБюджет;
КонецФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	НастройкиСКД		= КомпоновщикНастроек.ПолучитьНастройки();
	
	//Получение самой СКД из макета
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	//Макет компоновки
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,НастройкиСКД, ДанныеРасшифровки );
	
	//тз = БюджетПоЗадачеПроекта(МакетКомпоновки.ЗначенияПараметров);
	//Связь между таблицей значений и именами в СКД
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("Бюджет", БюджетПоЗадачеПроекта(МакетКомпоновки.ЗначенияПараметров));
	
	//Компоновка данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);
 
	//Вывод результата
	ДокументРезультат.Очистить(); 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	//ДокументРезультат.Показать();

	//ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.АвтоМасштаб=Истина;
	ДокументРезультат.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
КонецПроцедуры