&НаСервере
Функция РеализацияПоЗадачеПроекта( Параметры )   Экспорт
	//Отчеты по Реализации [#129630]
	тзРеализация = Новый ТаблицаЗначений;
	тзРеализация.Колонки.Добавить("ЗадачаПроекта");
	тзРеализация.Колонки.Добавить("Договор");        
	тзРеализация.Колонки.Добавить("Организация");
	тзРеализация.Колонки.Добавить("Месяц");
	тзРеализация.Колонки.Добавить("Обеспечено");
	тзРеализация.Колонки.Добавить("Реализация");
	тзРеализация.Колонки.Добавить("Оплачено");
	
	ГодЗадач = Параметры.ГодЗадач.Значение;
	
	Если ГодЗадач = Неопределено Тогда
		Сообщить("Год задач не заданы");
		Возврат тзРеализация;
	КонецЕсли;
	
	//Запрос разбит на 2 части, что бы корректно получать динамические параметры
	//Изменено по задаче #133275 18.09.2018 ГумединАГ
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Реализация.ЗадачаПроекта,
	               |	Реализация.Договор,
	               |	Реализация.Месяц,
	               |	СУММА(Реализация.План) КАК Обеспечено,
	               |	СУММА(Реализация.Факт) КАК Реализация,
	               |	0 КАК Оплачено
	               |ИЗ
	               |	РегистрНакопления.Реализация КАК Реализация
	               |ГДЕ
	               |	Реализация.ЗадачаПроекта.ГодЗадачи = &ГодЗадач";
	
	Запрос.УстановитьПараметр("ГодЗадач", ГодЗадач);
	
	Если Параметры.ТиповыеЗадачи.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И Реализация.ЗадачаПроекта.ТиповаяЗадача В ИЕРАРХИИ(&ТиповыеЗадачи)";
		Запрос.УстановитьПараметр("ТиповыеЗадачи", Параметры.ТиповыеЗадачи.Значение);
	КонецЕсли;;
	
	Если Параметры.Организация.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И Реализация.Договор.Организация В (&ЮЛ)";
		Запрос.УстановитьПараметр("ЮЛ", Параметры.Организация.Значение);
	КонецЕсли;;
	
	Если Параметры.СтатусыПроектов.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И Реализация.ЗадачаПроекта.Владелец.Статус В(&СтатусыПроектов)";
		Запрос.УстановитьПараметр("СтатусыПроектов", Параметры.СтатусыПроектов.Значение);
	КонецЕсли;
	
	Запрос.Текст = Запрос.Текст + "
				|СГРУППИРОВАТЬ ПО
               	|	Реализация.ЗадачаПроекта,
               	|	Реализация.Договор,
               	|	Реализация.Месяц
               	|
               	|ОБЪЕДИНИТЬ ВСЕ
               	|
               	|ВЫБРАТЬ
               	|	ОбеспечениеОплата.ЗадачаПроекта,
               	|	ОбеспечениеОплата.Договор,
               	|	ОбеспечениеОплата.Месяц,
               	|	0,
               	|	0,
               	|	ОбеспечениеОплата.СуммаОплачено
			   	|ИЗ
               	|	РегистрНакопления.ОбеспечениеОплата КАК ОбеспечениеОплата
               	|ГДЕ
               	|	ОбеспечениеОплата.ЗадачаПроекта.ГодЗадачи = &ГодЗадач";
	
	Если Параметры.ТиповыеЗадачи.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И ОбеспечениеОплата.ЗадачаПроекта.ТиповаяЗадача В ИЕРАРХИИ(&ТиповыеЗадачи)";
		Запрос.УстановитьПараметр("ТиповыеЗадачи", Параметры.ТиповыеЗадачи.Значение);
	КонецЕсли;;
	
	Если Параметры.Организация.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И ОбеспечениеОплата.Договор.Организация В (&ЮЛ)";
		Запрос.УстановитьПараметр("ЮЛ", Параметры.Организация.Значение);
	КонецЕсли;;
	
	Если Параметры.СтатусыПроектов.Значение.Количество() > 0 Тогда
		Запрос.Текст = Запрос.Текст + " И ОбеспечениеОплата.ЗадачаПроекта.Владелец.Статус В(&СтатусыПроектов)";
		Запрос.УстановитьПараметр("СтатусыПроектов", Параметры.СтатусыПроектов.Значение);
	КонецЕсли;
		
//	Если Параметры.ТиповыеЗадачи.Значение.Количество() > 0 Тогда
//		Запрос.УстановитьПараметр("ТиповыеЗадачи", Параметры.ТиповыеЗадачи.Значение);
//	КонецЕсли;;
	
	тзРезультат = Запрос.Выполнить().Выгрузить();
	                                                     
	Для Каждого рез Из тзРезультат Цикл
		стр = тзРеализация.Добавить();
		стр.ЗадачаПроекта = рез.ЗадачаПроекта;
		стр.Месяц = рез.Месяц;
		стр.Обеспечено = рез.Обеспечено;
		стр.Реализация = рез.Реализация;
		стр.Оплачено = рез.Оплачено;
		стр.Договор = рез.Договор;
		стр.Организация = рез.Договор.Организация;
	КонецЦикла;
	
	Возврат тзРеализация;
КонецФункции

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	//
	НастройкиСКД		= КомпоновщикНастроек.ПолучитьНастройки();
	
	//Получение самой СКД из макета
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	
	//Макет компоновки
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,НастройкиСКД, ДанныеРасшифровки );
	
	//Связь между таблицей значений и именами в СКД
	ВнешниеНаборыДанных = Новый Структура;
//	ВнешниеНаборыДанных.Вставить("ТаблицаДоходов", РаспределениеДоходовПоЗадачеПроекта( ЗадачаПроекта ));
	// параметры из СКД
	ВнешниеНаборыДанных.Вставить("Реализация", РеализацияПоЗадачеПроекта( МакетКомпоновки.ЗначенияПараметров ));
	
	//Компоновка данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);

	//Вывод результата
	ДокументРезультат.Очистить(); 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	//ДокументРезультат.Показать();

	//ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.АвтоМасштаб=Истина;
	ДокументРезультат.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры