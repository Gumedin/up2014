																																								   
Функция ВернутьТаблицуКР(Период)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	УТ_КВ.Ссылка.Контрагент,
		|	УТ_КВ.Ссылка.Менеджер,
		|	УТ_КВ.ЗадачаПроекта,
		|	СУММА(УТ_КВ.Сумма),
		|	УТ_КВ.ЗадачаПроекта.ТиповаяЗадача.ВидТиповойЗадачи КАК ВидТЗ,
		|	УТ_КВ.ЗадачаПроекта.ТиповаяЗадача КАК ТиповаяЗадача,
		|	УТ_КВ.Ссылка КАК Акт,
		|	УТ_КВ.ЗадачаПроекта.Владелец.ГодПроекта КАК ГодПроекта
		|ПОМЕСТИТЬ ВТ_Акты
		|ИЗ
		|	Документ.ДокументУТ.КоммерческоеВознаграждение КАК УТ_КВ
		|ГДЕ
		|	УТ_КВ.Ссылка.Проведен
		|	И УТ_КВ.Ссылка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И УТ_КВ.ЗадачаПроекта.ТиповаяЗадача.ВидТиповойЗадачи В(&ВидТЗ)
		|
		|СГРУППИРОВАТЬ ПО
		|	УТ_КВ.Ссылка,
		|	УТ_КВ.ЗадачаПроекта,
		|	УТ_КВ.Ссылка.Контрагент,
		|	УТ_КВ.Ссылка.Менеджер,
		|	УТ_КВ.ЗадачаПроекта.ТиповаяЗадача.ВидТиповойЗадачи,
		|	УТ_КВ.ЗадачаПроекта.ТиповаяЗадача,
		|	УТ_КВ.ЗадачаПроекта.Владелец.ГодПроекта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СметаЗадачиПроекта.Расчет.(
		|		Ссылка,
		|		НомерСтроки,
		|		КодСтатьи,
		|		ИмяСтатьи,
		|		Статья,
		|		ЗначениеПараметра,
		|		Сумма,
		|		ИзмененоДокументом,
		|		Итоговая
		|	),
		|	СметаЗадачиПроекта.Ссылка КАК СметаЗадачиПроекта,
		|	ВТ_Акты.Контрагент,
		|	ВТ_Акты.Менеджер,
		|	ВТ_Акты.ЗадачаПроекта,
		|	ВТ_Акты.Сумма,
		|	ВТ_Акты.ВидТЗ,
		|	ВТ_Акты.ТиповаяЗадача,
		|	ВТ_Акты.Акт,
		|	ВТ_Акты.ГодПроекта
		|ИЗ
		|	ВТ_Акты КАК ВТ_Акты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СметаЗадачиПроекта КАК СметаЗадачиПроекта
		|		ПО ВТ_Акты.ЗадачаПроекта = СметаЗадачиПроекта.ЗадачаПроекта";

	МассивВидовТЗ = Новый Массив;
	МассивВидовТЗ.Добавить( Справочники.ВидыТиповыхЗадач.НайтиПоНаименованию("ПП (ЛО)"));
		
	Запрос.УстановитьПараметр("ДатаНачала", 	Период.ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", 	Период.ДатаОкончания);
	Запрос.УстановитьПараметр("ВидТЗ",			МассивВидовТЗ );		
	//Запрос.УстановитьПараметр("ГодПроекта",		2014 );		

	Результат = Запрос.Выполнить().Выгрузить();
	
	// данные из сметы задачи проекта
	Результат.Колонки.Добавить("П_ВознПоср", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7,3))); // 5
	Результат.Колонки.Добавить("СуммаНаклРасходы", 	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	Результат.Колонки.Добавить("СуммаРКО_НР", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	Результат.Колонки.Добавить("П_Вендору", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7,3))); 
	Результат.Колонки.Добавить("СуммаВендору", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	Результат.Колонки.Добавить("СуммаБазаКР", 		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	Результат.Колонки.Добавить("П_КР", 				Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7,3))); 
	Результат.Колонки.Добавить("СуммаКР", 			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	// производные колонки
	
	// 
	КоэффРКО = РегистрыСведений.ПлановыеПоказателиСметы.ПолучитьПоследнее( Период.ДатаНачала ).СтавкаРКО;
	Для Каждого СтрР ИЗ Результат Цикл
		СтрППЛО 	=  СтрР.Расчет.Найти( Справочники.СтатьиСметы.РасходыППЛО, 			"Статья");
		СтрДохФин 	=  СтрР.Расчет.Найти( Справочники.СтатьиСметы.ДохФинансовые, 		"Статья");
		СтрВознПоср	=  СтрР.Расчет.Найти( Справочники.СтатьиСметы.ВознагрПосредника, 	"Статья");
		СтрВознКМ	=  СтрР.Расчет.Найти( Справочники.СтатьиСметы.ВознаграждениеКМ, 	"Статья");
		
		// производные статьи
		// 5
		СтрР.П_ВознПоср 		= СтрВознПоср.ЗначениеПараметра;
		// 6
		СтрР.СуммаНаклРасходы 	= Окр( СтрР.П_ВознПоср * СтрР.Сумма / 100, 2);
		// 7
		СтрР.СуммаРКО_НР 		= Окр( СтрР.СуммаНаклРасходы * КоэффРКО / 100, 2);
		// 8
		СтрР.П_Вендору			= ?( СтрДохФин.Сумма = 0, 0,
									 Окр(СтрППЛО.Сумма/СтрДохФин.Сумма*100,3));							 
		// 9
		СтрР.СуммаВендору		= Окр( СтрР.П_Вендору * СтрР.Сумма / 100, 2);
		// 10 
		СтрР.СуммаБазаКР		= СтрР.Сумма - 
								  СтрР.СуммаНаклРасходы -
								  СтрР.СуммаРКО_НР - 
								  СтрР.СуммаВендору;
		// 11
		СтрР.П_КР				= СтрВознКМ.ЗначениеПараметра;
		//
		СтрР.СуммаКР			= Окр( СтрР.СуммаБазаКР * СтрР.П_КР / 100, 2);
											  
								  
	КонецЦикла;
	
	Возврат Результат;
КонецФункции


Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	//
	НастройкиСКД		= КомпоновщикНастроек.ПолучитьНастройки();
	
	//Получение самой СКД из макета
	СхемаКомпоновкиДанных = ПолучитьМакет("ОсновнаяСхемаКомпоновкиДанных");
	//
	
	
	//Макет компоновки
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,НастройкиСКД, ДанныеРасшифровки );
	
	// параметры из СКД
	ПериодОтчета		= МакетКомпоновки.ЗначенияПараметров.Период.Значение;
	//Связь между таблицей значений и именами в СКД
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("РасчетКР", ВернутьТаблицуКР(ПериодОтчета));
	
	
	//Компоновка данных
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,ВнешниеНаборыДанных,ДанныеРасшифровки);

	//Вывод результата
	ДокументРезультат.Очистить(); 
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	//ДокументРезультат.Показать();

	//ДокументРезультат = Новый ТабличныйДокумент;
	ДокументРезультат.АвтоМасштаб=Истина;
	ДокументРезультат.ОриентацияСтраницы=ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры
