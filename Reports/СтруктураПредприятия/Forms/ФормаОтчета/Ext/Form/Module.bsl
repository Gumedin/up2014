&НаСервереБезКонтекста
Функция  ПолноеПодразделение( Уровень, Знач Подразделение )    
	Стр = СокрЛП(Подразделение.Наименование);
	Если ЗначениеЗаполнено( Подразделение.Родитель )=1 Тогда
		Уровень = Уровень + 1;
		Стр = ПолноеПодразделение( Уровень, Подразделение.Родитель) + "/" + Стр ;
	КонецЕсли;
	Возврат Стр;
	
КонецФункции


&НаСервере
Функция СформироватьДанныеОтчета()
	
	// производственные - не ограничиваем
	РезультатЗапроса = УП_КадрыСервер.СотрудникиПодразделенияНаДату( ВыбранноеПодразделение, ДатаОтчета, ТолькоРаботающие, Ложь );
	
	// дополнительная обработка
	РезультатЗапроса.Колонки.Добавить("УровеньПодразделения");
	РезультатЗапроса.Колонки.Добавить("ПолноеПодразделение");
	Для Каждого Сотр ИЗ РезультатЗапроса Цикл
		Сотр.УровеньПодразделения	= 0;
		Сотр.ПолноеПодразделение 	= ПолноеПодразделение( Сотр.УровеньПодразделения, Сотр.Подразделение );   
	
	КонецЦикла;
	РезультатЗапроса.Сортировать("ПолноеПодразделение,ФизическоеЛицо");
	
	Возврат РезультатЗапроса;
	
КонецФункции

&НаСервере
Процедура ПечатьСтруктурыПредприятия( ТабДок )	
	Макет		= Отчеты.СтруктураПредприятия.ПолучитьМакет("Макет");
	// данные для отчета	
	тз = СформироватьДанныеОтчета();
		
	ОбластьШ	= Макет.ПолучитьОбласть("Шапка");
	ОбластьШ.Параметры.ДатаОтчета 		= Формат(ДатаОтчета, "ДЛФ=Д");
	ТабДок.Вывести(ОбластьШ);
	
	ВсегоСотрудников 	= 0;
	Подразделение 		= "";
	Руководитель  		= "";
	
	Для Каждого СтрТЗ ИЗ тз Цикл
		Если НЕ СтрТЗ.Подразделение = Подразделение Тогда
			ОбластьП 		= Макет.ПолучитьОбласть("Подразделение");
			Подразделение 	= СтрТЗ.Подразделение;
			РП				= УП_КадрыСервер.РуководительПодразделения( Подразделение, ДатаОтчета);
			Руководитель	= РП.Руководитель;
			
			ОбластьП.Параметры.ПечПодразделение 		= Подразделение;
			ОбластьП.Параметры.Руководитель				= Руководитель;
			ОбластьП.Параметры.ПечДолжностьРуководителя = РП.Должность;
			ТабДок.Вывести(ОбластьП);
			ВсегоСотрудников = ВсегоСотрудников + ?(ЗначениеЗаполнено(Руководитель), 1, 0);
			НомерСотр = 1;
		КонецЕсли;
		Если СтрТЗ.ФизическоеЛицо = Руководитель Тогда
			Продолжить; 
		КонецЕсли;
		НомерСотр	= НомерСотр + 1;
		ОбластьС 	= Макет.ПолучитьОбласть("Сотрудник");
		ОбластьС.Параметры.НомерСотр 	= НомерСотр;
		ОбластьС.Параметры.ПечДолжность	= СтрТЗ.Должность;
		ОбластьС.Параметры.ПечСотрудник = СтрТЗ.ФизическоеЛицо;
		ВсегоСотрудников = ВсегоСотрудников + 1;
		
		ТабДок.Вывести(ОбластьС);
	КонецЦикла;
	// 
	ОбластьПд =  Макет.ПолучитьОбласть("Подвал");
	ОбластьПд.Параметры.ВсегоСотрудников	= ВсегоСотрудников;
	ТабДок.Вывести(ОбластьПд);
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	ТабДок = Новый ТабличныйДокумент;
	
	ПечатьСтруктурыПредприятия( ТабДок );

	ТабДок.ОтображатьСетку = Ложь;
	//ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр 		= Истина;
	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДок.ОтображатьЗаголовки 	= Ложь;
	ТабДок.АвтоМасштаб			= Истина;
	ТабДок.Показать();
	

КонецПроцедуры

&НаСервереБезКонтекста
Функция  СформироватьДанные_ШтатноеРасписание( Подразделение, ДатаОтчета )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиСрезПоследних.Подразделение,
		|	СотрудникиСрезПоследних.Должность,
		|	СотрудникиСрезПоследних.ТарифнаяСтавка,
		|	СотрудникиСрезПоследних.ФизическоеЛицо,
		|	СотрудникиСрезПоследних.Количество,
		|	СотрудникиСрезПоследних.СтатусСотрудника,
		|	СотрудникиСрезПоследних.СтатусСотрудника.Активный,
		|	СотрудникиСрезПоследних.Должность.Производственная
		|ПОМЕСТИТЬ ВТ_ВсеСотрудники
		|ИЗ
		|	РегистрСведений.Сотрудники.СрезПоследних(
		|			&ДатаОтчета,
		|			&ВсеПодразделения
		|				ИЛИ Подразделение В ИЕРАРХИИ (&Подразделение)) КАК СотрудникиСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШтатноеРасписание.Подразделение,
		|	ШтатноеРасписание.Должность,
		|	ШтатноеРасписание.Должность.Производственная КАК Производственная,
		|	ШтатноеРасписание.Должность.ТарифнаяСтавка КАК ТарифнаяСтавка,
		|	СУММА(ШтатноеРасписание.Количество) КАК Ставок,
		|	СУММА(0) КАК Занято,
		|	СУММА(ШтатноеРасписание.Количество) КАК Вакантно
		|ИЗ
		|	РегистрСведений.ШтатноеРасписание КАК ШтатноеРасписание
		|ГДЕ
		|	ШтатноеРасписание.Количество > 0
		|	И (&ВсеПодразделения
		|			ИЛИ ШтатноеРасписание.Подразделение В ИЕРАРХИИ (&Подразделение))
		|
		|СГРУППИРОВАТЬ ПО
		|	ШтатноеРасписание.Должность,
		|	ШтатноеРасписание.Подразделение,
		|	ШтатноеРасписание.Должность.Производственная,
		|	ШтатноеРасписание.Должность.ТарифнаяСтавка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ВТ_ВсеСотрудники.Подразделение,
		|	ВТ_ВсеСотрудники.Должность,
		|	ВТ_ВсеСотрудники.Должность.Производственная,
		|	ВТ_ВсеСотрудники.ТарифнаяСтавка,
		|	СУММА(0),
		|	СУММА(ВТ_ВсеСотрудники.Количество),
		|	СУММА(-ВТ_ВсеСотрудники.Количество)
		|ИЗ
		|	ВТ_ВсеСотрудники КАК ВТ_ВсеСотрудники
		|ГДЕ
		|	ВТ_ВсеСотрудники.СтатусСотрудникаАктивный
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ВсеСотрудники.ТарифнаяСтавка,
		|	ВТ_ВсеСотрудники.Подразделение,
		|	ВТ_ВсеСотрудники.Должность,
		|	ВТ_ВсеСотрудники.Должность.Производственная";
		
		
	Запрос.УстановитьПараметр("ДатаОтчета",  		ДатаОтчета );
	Запрос.УстановитьПараметр("Подразделение", 		Подразделение);
	Запрос.УстановитьПараметр("ВсеПодразделения", НЕ ЗначениеЗаполнено( Подразделение));
	
		
	Результат = Запрос.Выполнить().Выгрузить();
	Результат.Свернуть("Подразделение,Должность,Производственная,ТарифнаяСтавка", "Ставок,Занято,Вакантно");
	Возврат Результат;
	
	
КонецФункции

//&НаСервереБезКонтекста
//Функция  СотрудникиНаДолжности(Сотрудники, Подразделение, Должность)
//	СписокСотрудников = "";
//	Отбор = Новый Структура;
//	Отбор.Вставить("Подразделение", Подразделение );
//	Отбор.Вставить("Должность", 	Должность);
//	м = Сотрудники.НайтиСтроки( Отбор );
//	Для Каждого Стр из м Цикл
//		СписокСотрудников = СписокСотрудников + ?(ЗначениеЗаполнено(СписокСотрудников),",","") + СокрЛП(Стр.ФИО);
//	КонецЦикла;
//	Возврат СписокСотрудников;
//КонецФункции

&НаСервереБезКонтекста
Функция  СотрудникиНаДолжности(Сотрудники, Подразделение, Должность, ТарифнаяСтавка )
	СписокСотрудников = "";
	Отбор = Новый Структура;
	Отбор.Вставить("Подразделение", Подразделение );
	Отбор.Вставить("Должность", 	Должность);
	Отбор.Вставить("ТарифнаяСтавка", ТарифнаяСтавка );
	м = Сотрудники.НайтиСтроки( Отбор );
	Для Каждого Стр из м Цикл
		СписокСотрудников = СписокСотрудников + ?(ЗначениеЗаполнено(СписокСотрудников),",","") + СокрЛП(Стр.ФИО);
	КонецЦикла;
	Возврат СписокСотрудников;
КонецФункции



&НаСервереБезКонтекста
Функция  СписокСотрудников( Подразделение, ДатаОтчета )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СотрудникиСрезПоследних.ФизическоеЛицо КАК ФИО,
		|	СотрудникиСрезПоследних.Подразделение,
		|	СотрудникиСрезПоследних.Должность,
		|	СотрудникиСрезПоследних.СтатусСотрудника,
		|	СотрудникиСрезПоследних.СтатусСотрудника.Активный КАК Активный,
		|	СотрудникиСрезПоследних.ТарифнаяСтавка
		|ПОМЕСТИТЬ ВТ_Все
		|ИЗ
		|	РегистрСведений.Сотрудники.СрезПоследних(
		|			&ДатаОтчета,
		|			&ВсеПодразделения
		|				ИЛИ Подразделение В ИЕРАРХИИ (&Подразделение)) КАК СотрудникиСрезПоследних
		|ГДЕ
		|	СотрудникиСрезПоследних.СтатусСотрудника.Активный
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Все.ФИО,
		|	ВТ_Все.Подразделение,
		|	ВТ_Все.Должность,
		|	ВТ_Все.СтатусСотрудника,
		|	ВТ_Все.ТарифнаяСтавка
		|ИЗ
		|	ВТ_Все КАК ВТ_Все
		|ГДЕ
		|	ВТ_Все.Активный";
	
	Запрос.УстановитьПараметр("ДатаОтчета", 		ДатаОтчета);
	//Запрос.УстановитьПараметр("мОрганизаций", 		мОрганизаций);
	Запрос.УстановитьПараметр("Подразделение", 		Подразделение);
	Запрос.УстановитьПараметр("ВсеПодразделения", 	НЕ ЗначениеЗаполнено( Подразделение));
	
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
КонецФункции	


&НаСервере
Процедура Печать_ШтатноеРасписание( ТабДок )	
	Если СТарифнымиСтавками Тогда
		Макет		= Отчеты.СтруктураПредприятия.ПолучитьМакет("ШтатноеРасписаниеПроизводственное");
	Иначе
		Макет		= Отчеты.СтруктураПредприятия.ПолучитьМакет("ШтатноеРасписание");
	КонецЕсли;		
	
	// 
	
	// данные для отчета	
	тз = СформироватьДанные_ШтатноеРасписание(  ВыбранноеПодразделение, ДатаОтчета );        
	// 2017 04 07
	
	тзПодр = тз.Скопировать( ,"Подразделение,Ставок,Занято,Вакантно");
	тзПодр.Свернуть("Подразделение", "Ставок,Занято,Вакантно");
	тзПодр.Сортировать("Подразделение");
	
	// сотрудники
	тзСотрудники = СписокСотрудников( ВыбранноеПодразделение, ДатаОтчета );
	
		
	ОбластьШ	= Макет.ПолучитьОбласть("Шапка");
	ОбластьШ.Параметры.ДатаОтчета 		= Формат(ДатаОтчета, "ДЛФ=Д");
	ТабДок.Вывести(ОбластьШ);
	
	
	//
	Для Каждого Подразделение ИЗ тзПодр Цикл
		ОбластьПодр	= Макет.ПолучитьОбласть("Подразделение");
		
		ОбластьПодр.Параметры.Заполнить( Подразделение );
		ТабДок.Вывести(ОбластьПодр);
		
		Отбор = Новый Структура;
		Отбор.Вставить("Подразделение", Подразделение.Подразделение);
		тзДолжн = тз.Скопировать(Отбор);
		тзДолжн.Сортировать("Должность");
		Для Каждого Должность из тзДолжн Цикл
			ОбластьД = Макет.ПолучитьОбласть("Должность");
			ОбластьД.Параметры.Номер = тзДолжн.Индекс(Должность)+1;
			ОбластьД.Параметры.СотрудникиНаДолжности = СотрудникиНаДолжности( тзСотрудники,Подразделение.Подразделение,Должность.Должность, Должность.ТарифнаяСтавка);
			ОбластьД.Параметры.Заполнить(Должность);
			ТабДок.Вывести(ОбластьД);
		КонецЦикла;
		
	КонецЦикла;
	ОбластьП	= Макет.ПолучитьОбласть("Подвал");
	ОбластьП.Параметры.Ставок 	= тзПодр.Итог("Ставок");
	ОбластьП.Параметры.Занято 	= тзПодр.Итог("Занято");
	ОбластьП.Параметры.Вакантно = тзПодр.Итог("Вакантно");
	ТабДок.Вывести(ОбластьП);
КонецПроцедуры


&НаКлиенте
Процедура ШтатноеРасписание(Команда)
	ТабДок = Новый ТабличныйДокумент;
	
	Печать_ШтатноеРасписание( ТабДок );

	ТабДок.ОтображатьСетку = Ложь;
	//ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр 		= Истина;
	ТабДок.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДок.ОтображатьЗаголовки 	= Ложь;
	ТабДок.АвтоМасштаб			= Истина;
	ТабДок.Показать();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ДатаОтчета = ТекущаяДата();
КонецПроцедуры
