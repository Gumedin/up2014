&НаСервере
Процедура ЗаполнитьДеревоСтатей( РодительСтатьи = Неопределено, ВеткаДерева = Неопределено )
	
	//
	РодительСтатьи = ?( РодительСтатьи = Неопределено, Справочники.СтатьиСметы.ПустаяСсылка(), РодительСтатьи);
	
	Если ВеткаДерева = Неопределено Тогда
	
		ВеткиДерева = ДеревоСтатей.ПолучитьЭлементы();
		ВеткиДерева.Очистить();
	Иначе 
		ВеткиДерева = ВеткаДерева.ПолучитьЭлементы();
	КонецЕсли;
	
	//
	СтруктураСметы 	= УП_СметаПроекта.ПолучитьСтруктуруСметыЗадачи( ГодПроекта, РодительСтатьи );	
	Если СтруктураСметы = Неопределено Тогда
		Сообщить("Структура сметы не определена на указанный год " + ГодПроекта);
		Возврат;
	КонецЕсли;
	
	// по табличной части документа
	Для Каждого СтрСС ИЗ СтруктураСметы Цикл
		ТекущаяВетка 			= ВеткиДерева.Добавить();
		ТекущаяВетка.КодСтатьи 	= СтрСС.Значение.КодСтатьи;
		ТекущаяВетка.Статья 	= СтрСС.Значение.Статья;
		ТекущаяВетка.ИмяСтатьи  = Справочники.СтатьиСметы.ПолучитьИмяПредопределенного( ТекущаяВетка.Статья );
		ТекущаяВетка.Выводить 	= Истина;
		// вниз
		Если СтрСС.Значение.Итоговая Тогда
			ЗаполнитьДеревоСтатей( ТекущаяВетка.Статья, ТекущаяВетка);
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры


&НаСервере
Функция СформироватьЗапросПоРегистру()
	
	Запрос = Новый Запрос;
	Текст = 
		"ВЫБРАТЬ
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.Владелец КАК Проект,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.Подразделение КАК Подразделение,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.Владелец.ДиректорПроекта КАК ДиректорПроекта,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.Владелец.МенеджерПроекта КАК КлиентМенеджер,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.ТиповаяЗадача КАК ТиповаяЗадача,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.ТиповаяЗадача.ВидТиповойЗадачи КАК ВидЗадачи,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.ТиповаяЗадача.ВидНоменклатуры 	КАК ВидНоменклатуры,";
		
		
	
	// 2014
	СтруктураСметы 	= УП_СметаПроекта.ПолучитьСтруктуруСметыЗадачи( ГодПроекта );	
	Если СтруктураСметы = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	// по табличной части документа
	Для Каждого СтрСС ИЗ СтруктураСметы Цикл
		Статья		= СтрСС.Значение.Статья;
		ИмяСтатьи 	= Статья.ИмяПредопределенныхДанных;
		
		Текст = Текст + "
		|	СУММА(ВЫБОР
		|		КОГДА БюджетПоМесяцамОбороты.ТипСуммы = ЗНАЧЕНИЕ( Перечисление.ТипСуммыБюджета.Факт )
		|				И БюджетПоМесяцамОбороты.СтатьяСметы = &" + ИмяСтатьи + "
		|			ТОГДА БюджетПоМесяцамОбороты.СуммаОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК Ф_" + ИмяСтатьи + ",
		|	СУММА(ВЫБОР
		|		КОГДА БюджетПоМесяцамОбороты.ТипСуммы = ЗНАЧЕНИЕ( Перечисление.ТипСуммыБюджета.План )
		|				И БюджетПоМесяцамОбороты.СтатьяСметы = &" + ИмяСтатьи + "
		|			ТОГДА БюджетПоМесяцамОбороты.СуммаОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ) КАК П_" + ИмяСтатьи + ",";
		
		Запрос.УстановитьПараметр( ИмяСтатьи, Статья );
		//
	КонецЦикла;
	
	
	// убираем последнюю запятую
	Текст = Лев( Текст, СтрДлина(Текст)-1);
	
	Текст = Текст + "
		|ИЗ
		|	РегистрНакопления.БюджетПоМесяцам.Обороты(
		|			,
		|			,
		|			,
		|			ЗадачаПроекта.Владелец.ГодПроекта = &ГодПроекта
		|				И Месяц <= &МесяцОтчета
		|				И ЗадачаПроекта.Владелец.Статус В (&СтатусыПроектов)
		|				И (&ВсеМенеджеры
		|					ИЛИ ЗадачаПроекта.Владелец.МенеджерПроекта В (&СпМенеджеров))
		|				И (&ВсеДиректора
		|					ИЛИ ЗадачаПроекта.Владелец.ДиректорПроекта В (&СпДиректоров))
		|				И (&ВсеПодразделения
		|					ИЛИ ЗадачаПроекта.Подразделение В (&СпПодразделений))
		|				И (&ВсеТиповыеЗадачи
		|					ИЛИ ЗадачаПроекта.ТиповаяЗадача В (&СпТиповыхЗадач))
		|				И (&ВсеВидыЗадач
		|					ИЛИ ЗадачаПроекта.ТиповаяЗадача.ВидТиповойЗадачи В (&СпВидовЗадач))
		|				И (&ВсеВидыНоменклатуры
		|					ИЛИ ЗадачаПроекта.ТиповаяЗадача.ВидНоменклатуры В (&СпВидовНоменкл))) КАК БюджетПоМесяцамОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.Владелец,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.Подразделение,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.Владелец.ДиректорПроекта,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.Владелец.МенеджерПроекта,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.ТиповаяЗадача,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.ТиповаяЗадача.ВидТиповойЗадачи,
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта.ТиповаяЗадача.ВидНоменклатуры";



		
		
	Запрос.УстановитьПараметр("ГодПроекта", 		ГодПроекта);
	
	
	Запрос.УстановитьПараметр("МесяцОтчета", 		Месяц);
	Запрос.УстановитьПараметр("СтатусыПроектов", 	Статусы.ВыгрузитьЗначения());
	
	// 0
	Запрос.УстановитьПараметр("ВсеДиректора", 		НЕ ЗначениеЗаполнено( Директора ));
	Запрос.УстановитьПараметр("СпДиректоров", 		Директора);
	// 1
	Запрос.УстановитьПараметр("ВсеМенеджеры", 		НЕ ЗначениеЗаполнено( Менеджеры ));
	Запрос.УстановитьПараметр("СпМенеджеров", 		Менеджеры);
	// 2
	Запрос.УстановитьПараметр("ВсеПодразделения", 	НЕ ЗначениеЗаполнено( Подразделения ));
	Запрос.УстановитьПараметр("СпПодразделений", 	Подразделения);
	// 3-
	Запрос.УстановитьПараметр("ВсеТиповыеЗадачи", 	НЕ ЗначениеЗаполнено( ТиповыеЗадачи ));
	Запрос.УстановитьПараметр("СпТиповыхЗадач", 	ТиповыеЗадачи);
	// 3
	Запрос.УстановитьПараметр("ВсеВидыЗадач", 		НЕ ЗначениеЗаполнено( ВидыЗадач ));
	Запрос.УстановитьПараметр("СпВидовЗадач", 		ВидыЗадач);
	// 4
	Запрос.УстановитьПараметр("ВсеВидыНоменклатуры",НЕ ЗначениеЗаполнено( ВидыНоменклатуры ));
	Запрос.УстановитьПараметр("СпВидовНоменкл", 	ВидыНоменклатуры);
	
	
	
	Запрос.Текст = Текст;
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат;

КонецФункции

Функция ПолучитьСтрокуСвертки( тз )
	СтрокаСвертки = "";
	Для Каждого К ИЗ тз.Колонки Цикл
		Если Лев(К.Имя,2) = "Ф_" или Лев(К.Имя,2) = "П_" Тогда
			
			СтрокаСвертки = СтрокаСвертки + ?(ЗначениеЗаполнено(СтрокаСвертки),",","") + К.Имя;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтрокаСвертки;
КонецФункции

&НаСервере
Функция СписокСтатейДляВывода( СпСтатей = Неопределено, Ветки = Неопределено )
	Если Ветки = Неопределено Тогда
		СпСтатей 	= Новый СписокЗначений;
		Ветки 		= ДеревоСтатей.ПолучитьЭлементы();
	КонецЕсли;
	Для Каждого Ветка ИЗ Ветки Цикл 
		Если Ветка.Выводить Тогда
			СпСтатей.Добавить( Справочники.СтатьиСметы.ПолучитьИмяПредопределенного( Ветка.Статья ), Ветка.Статья.Наименование) ;
		КонецЕсли;
		СписокСтатейДляВывода( СпСтатей, Ветка.ПолучитьЭлементы());
	КонецЦикла;
	Возврат СпСтатей;
		
КонецФункции

&НаСервере
Функция Процент( Сверху, Снизу)
	Если Снизу = 0 Тогда Возврат 0; КонецЕсли;
	Возврат Сверху/Снизу * 100;
КонецФункции

&НаСервереБезКонтекста
Процедура ПересчетСтатей( Префикс, сПараметры )
	сСтатей = Новый Соответствие;
	Для Каждого Колонка ИЗ сПараметры.Колонки Цикл
		Если Лев( Колонка.Имя, 2) = Префикс Тогда
			сСтатей.Вставить( Сред( Колонка.Имя, 3), сПараметры.Данные[Колонка.Имя] )
		КонецЕсли;
	КонецЦикла;
	
	// 2014 год
	сСметы 	= УП_СметаПроекта.ПолучитьСтруктуруСметыЗадачи( сПараметры.ГодПроекта );
	УП_СметаПроекта.ПересчетСметыЗадачи( сСметы, сСтатей );

	
	// пишем назад 
	Для Каждого Эл ИЗ сСтатей Цикл
		сПараметры.Данные[Префикс + Эл.Ключ] = Эл.Значение;
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура ВывестиСекциюОтчета(ТабДок, Макет, Уровень = 0, ГоризСтр, СписокСтатей, сПараметры )
	ОбластьГ	= Макет.ПолучитьОбласть(ГоризСтр + "|Начало");
	ОбластьГ.Параметры.Заполнить( сПараметры );
	ТабДок.Вывести(ОбластьГ, Уровень);
	// директора
	Если ДетДиректор Тогда
		ОбластьГД	= Макет.ПолучитьОбласть(ГоризСтр + "|ДиректорПроекта");
		ОбластьГД.Параметры.Заполнить( сПараметры );
		ТабДок.Присоединить(ОбластьГД, Уровень);
	КонецЕсли;
	// менеджеры
	Если ДетМенеджер Тогда
		ОбластьГД	= Макет.ПолучитьОбласть(ГоризСтр + "|КлиентМенеджер");
		ОбластьГД.Параметры.Заполнить( сПараметры );
		ТабДок.Присоединить(ОбластьГД, Уровень);
	КонецЕсли;
	// подразделения
	Если ДетПодразделение Тогда
		ОбластьГД	= Макет.ПолучитьОбласть(ГоризСтр + "|Подразделение");
		ОбластьГД.Параметры.Заполнить( сПараметры );
		ТабДок.Присоединить(ОбластьГД, Уровень);
	КонецЕсли;
	// типовая задач
	Если ДетТиповыеЗадачи Тогда
		ОбластьГД	= Макет.ПолучитьОбласть(ГоризСтр + "|ТиповаяЗадача");
		ОбластьГД.Параметры.Заполнить( сПараметры );
		ТабДок.Присоединить(ОбластьГД, Уровень);
	КонецЕсли;
	// вид задачи
	Если ДетВидЗадачи Тогда
		ОбластьГД	= Макет.ПолучитьОбласть(ГоризСтр + "|ВидЗадачи");
		ОбластьГД.Параметры.Заполнить( сПараметры );
		ТабДок.Присоединить(ОбластьГД, Уровень);
	КонецЕсли;
	// вид номенклатуры
	Если ДетВидНоменклатуры Тогда
		ОбластьГД	= Макет.ПолучитьОбласть(ГоризСтр + "|ВидНоменклатуры");
		ОбластьГД.Параметры.Заполнить( сПараметры );
		ТабДок.Присоединить(ОбластьГД, Уровень);
	КонецЕсли;
	
	//
	Если  ГоризСтр <> "Шапка" Тогда
		// считаем итоговые строки
		ПересчетСтатей("П_", сПараметры );
		ПересчетСтатей("Ф_", сПараметры );
	КонецЕсли;	
	
	Для Каждого Ст ИЗ СписокСтатей Цикл
		ОбластьГД = Макет.ПолучитьОбласть(ГоризСтр + "|НачалоСтатьи");
		Если  ГоризСтр = "Шапка" Тогда
			ОбластьГД.Параметры.Статья = Ст.Представление;
		КонецЕсли;
		ТабДок.Присоединить(ОбластьГД);
		
		// для заполнения
		СтруктураД 	= Новый Структура;
		Если  ГоризСтр <> "Шапка" Тогда
			
			План		= сПараметры.Данные["П_" + Ст.Значение];
			Факт 		= сПараметры.Данные["Ф_" + Ст.Значение];
			//
			СтруктураД.Вставить("План", План);
			СтруктураД.Вставить("Факт", Факт);
			СтруктураД.Вставить("Разница", Факт- План);
			СтруктураД.Вставить("Процент", Процент( Факт- План, План));
		КонецЕсли;			
			
			
		Если ВыводитьПлан Тогда
			ОбластьГД = Макет.ПолучитьОбласть(ГоризСтр + "|План");
			ОбластьГД.Параметры.Заполнить( СтруктураД );
			ТабДок.Присоединить(ОбластьГД);
		КонецЕсли;
		Если ВыводитьФакт Тогда
			ОбластьГД = Макет.ПолучитьОбласть(ГоризСтр + "|Факт");
			ОбластьГД.Параметры.Заполнить( СтруктураД );
			ТабДок.Присоединить(ОбластьГД);
		КонецЕсли;
		Если ВыводитьОтклонениеРуб Тогда
			ОбластьГД = Макет.ПолучитьОбласть(ГоризСтр + "|Отклонение");
			ОбластьГД.Параметры.Заполнить( СтруктураД );
			ТабДок.Присоединить(ОбластьГД);
		КонецЕсли;
		Если ВыводитьОтклонениеПроц Тогда
			ОбластьГД = Макет.ПолучитьОбласть(ГоризСтр + "|ОтклонениеПроцент");
			ОбластьГД.Параметры.Заполнить( СтруктураД );
			ТабДок.Присоединить(ОбластьГД);
		КонецЕсли;
	
	КонецЦикла;	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ВыбранныеСтатусы( СпСтатусов)
	Стр = "";
	Для Каждого Эл ИЗ СпСтатусов Цикл
		Стр = Стр + ?(ЗначениеЗаполнено(Стр),", ", "") + Эл.Значение;
	КонецЦикла;
	Возврат Стр;
КонецФункции

// формирует документ
&НаСервере
Процедура ПечатьОтчета( ТабДок )                  
	// по задачам проекта
	Результат = СформироватьЗапросПоРегистру();
	Если Результат.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	//
	СписокСтатей = СписокСтатейДляВывода();
	
	//
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	
	// вывод 
	Макет		= Отчеты._ПланФакт.ПолучитьМакет( "ПланФакт" );
	сПараметры = Новый Структура;
	сПараметры.Вставить("ГодПроекта", 		ГодПроекта);
	сПараметры.Вставить("Месяц", 	"По: " + Формат(Месяц,"ДФ= 'ММММ гггг'"));
	сПараметры.Вставить("Проекты", "Статусы проектов: " + ВыбранныеСтатусы( Статусы) );//Формат(Месяц,"ДФ= 'ММММ гггг'"))
	
	ВывестиСекциюОтчета( ТабДок, Макет, 0, "Шапка", СписокСтатей, сПараметры );
	
	// по проектам 
	тзПроекты 		= Результат.Скопировать();
	СтрокаСвертки 	= ПолучитьСтрокуСвертки( Результат );
	тзПроекты.Свернуть( "Проект,ДиректорПроекта,КлиентМенеджер", СтрокаСвертки );
	тзПроекты.Сортировать("Проект");
	Для Каждого СтрПр ИЗ тзПроекты Цикл
		// выводим проект
		сПараметры = Новый Структура;
		сПараметры.Вставить("ГодПроекта", 		ГодПроекта);
		сПараметры.Вставить("НомерСтроки", 		тзПроекты.Индекс( СтрПр)+1 );
		сПараметры.Вставить("Данные", 			СтрПр );
		сПараметры.Вставить("Проект", 			СтрПр.Проект );
		сПараметры.Вставить("ДиректорПроекта", 	СтрПр.ДиректорПроекта );
		сПараметры.Вставить("КлиентМенеджер", 	СтрПр.КлиентМенеджер );
		сПараметры.Вставить("Колонки", 			тзПроекты.Колонки);
		
		ВывестиСекциюОтчета( ТабДок, Макет, 1, "Проект", СписокСтатей, сПараметры  );
		
		Отбор = Новый Структура;
		Отбор.Вставить("Проект", СтрПр.Проект );
		мЗадачи = Результат.НайтиСтроки( Отбор );
		Для Каждого СтрЗП ИЗ мЗадачи Цикл
			// задача проекта
			сПараметры = Новый Структура;
			сПараметры.Вставить("ГодПроекта", 		ГодПроекта);
			сПараметры.Вставить("НомерСтроки", 		мЗадачи.Найти( СтрЗП)+1 );
			сПараметры.Вставить("Данные", 			СтрЗП );
			сПараметры.Вставить("ЗадачаПроекта", 	СтрЗП.ЗадачаПроекта );
			сПараметры.Вставить("Подразделение", 	СтрЗП.Подразделение );
			сПараметры.Вставить("ТиповаяЗадача", 	СтрЗП.ТиповаяЗадача );
			сПараметры.Вставить("ВидЗадачи", 		СтрЗП.ВидЗадачи );
			сПараметры.Вставить("ВидНоменклатуры", 	СтрЗП.ВидНоменклатуры );
			сПараметры.Вставить("Колонки", 			тзПроекты.Колонки);
			ВывестиСекциюОтчета( ТабДок, Макет, 2, "ЗадачаПроекта", СписокСтатей, сПараметры  );
			
		КонецЦикла;
		
		
	КонецЦикла;
	
	// подвал
	тзПроекты.Свернуть( "", СтрокаСвертки );
	сПараметры = Новый Структура;
	сПараметры.Вставить("ГодПроекта", 	ГодПроекта);
	сПараметры.Вставить("Данные", 		тзПроекты[0] );
	сПараметры.Вставить("Колонки", 		тзПроекты.Колонки);
	ВывестиСекциюОтчета( ТабДок, Макет, 0, "Подвал", СписокСтатей,  сПараметры );
	
	
	//
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	
КонецПроцедуры


&НаКлиенте
Процедура Сформировать(Команда)
	Если НЕ ЗначениеЗаполнено( Месяц ) Тогда
		Предупреждение("Укажите месяц контроля!", 10);
		Возврат;
	КонецЕсли;
		
	ТабДок = Новый ТабличныйДокумент;
	ПечатьОтчета( ТабДок );

	//ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр 			= Истина;
	ТабДок.АвтоМасштаб				= Истина;
	ТабДок.ОриентацияСтраницы		= ОриентацияСтраницы.Ландшафт;
	ТабДок.ПовторятьПриПечатиСтроки = ТабДок.Область(5,,6);
	ТабДок.ОтображатьЗаголовки 		= Ложь;
	ТабДок.ФиксацияСверху			= 6;
	ТабДок.ФиксацияСлева			= 2;
	
	//
	ТабДок.Показать();
	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено( ГодПроекта ) Тогда
		ГодПроекта = Год(ТекущаяДата());
	КонецЕсли;
	
	ЗаполнитьДеревоСтатей(); 
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьФлажки( Зн, ВеткаДерева = Неопределено  )
	Если ВеткаДерева = Неопределено Тогда
		ВеткиДерева = ДеревоСтатей.ПолучитьЭлементы();
	Иначе 
		ВеткиДерева = ВеткаДерева.ПолучитьЭлементы();
	КонецЕсли;
	
	Для Каждого Ветка ИЗ ВеткиДерева Цикл
		Ветка.Выводить = Зн;
		ИзменитьФлажки( Зн, Ветка );
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	ИзменитьФлажки( Истина );
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	ИзменитьФлажки( Ложь );
КонецПроцедуры

&НаКлиенте
Процедура МесяцПриИзменении(Элемент)
	Месяц = НачалоМесяца( Месяц );
КонецПроцедуры

&НаКлиенте
Процедура СтатьиБюджетаВыводитьПриИзменении(Элемент)
	Стр = Элементы.ДеревоСтатей.ТекущиеДанные;
	ИзменитьФлажки( Стр.Выводить, Стр);
КонецПроцедуры

&НаКлиенте
Процедура ГодПроектаПриИзменении(Элемент)
	//
	ЗаполнитьДеревоСтатей(); //
КонецПроцедуры
