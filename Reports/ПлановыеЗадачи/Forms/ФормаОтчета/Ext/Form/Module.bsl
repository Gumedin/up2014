&НаСервере
Функция ПланРаботПоЗадачеПроекта( ЗадачаПроекта )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланРабот.Номер
		|ИЗ
		|	Документ.ПланРабот КАК ПланРабот
		|ГДЕ
		|	ПланРабот.ЗадачаПроекта = &ЗадачаПроекта";
	
	Запрос.УстановитьПараметр("ЗадачаПроекта", ЗадачаПроекта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.Номер;
	КонецЦикла;
	Возврат "";
КонецФункции

&НаСервере
Процедура СформироватьНаСервере( )
	РезультатОтчета.Очистить();
	//Возврат;

	//тзРез = ПолучитьРаботыПоЗадачеПроекта();
	Макет = Отчеты.ПлановыеЗадачи.ПолучитьМакет("Отчет");
	Обл = Макет.ПолучитьОбласть("Шапка");
	Обл.Параметры.Проект			= ЗадачаПроекта.Владелец.Наименование;
	Обл.Параметры.ПланРабот			= ПланРаботПоЗадачеПроекта( ЗадачаПроекта );
	Обл.Параметры.ПериодОтчета		= ПредставлениеПериода( ПериодОтчета.ДатаНачала, ПериодОтчета.ДатаОкончания, "ДЛФ=D");
	
	Обл.Параметры.КлиентМенеджер	= ЗадачаПроекта.Владелец.МенеджерПроекта;
	Обл.Параметры.ДиректорПроекта   = ЗадачаПроекта.Владелец.ДиректорПроекта;
	Обл.Параметры.ТехническийРук	= ЗадачаПроекта.Владелец.Куратор;
	РезультатОтчета.Вывести( Обл );
	
	ВыбСпр = Справочники.ЗадачиПроектовСтруктура.ВыбратьИерархически(,ЗадачаПроекта,,"Код");
	Пока ВыбСпр.Следующий() Цикл
		Если ВыбСпр.ПометкаУдаления Тогда Продолжить; КонецЕсли;
		//Если ВыбСпр.Суммарная 		Тогда
		//	 ДатаОкончания = "";
		//	 
		//	
		//Иначе
			Если ВыбСпр.ТипРасчетаСрокаРаботы = Перечисления.ТипыРасчетаСрокаРабот.ПоЗадачеПроекта Тогда
				НачалоРаботы	= ЗадачаПроекта.НачалоРабот;
				ОкончаниеРаботы = ЗадачаПроекта.ОкончаниеРабот;
			Иначе
				НачалоРаботы 	= ВыбСпр.РаннийСтарт;
				ОкончаниеРаботы = ВыбСпр.ПозднийФиниш;
			КонецЕсли;
			
			Если (ПериодОтчета.ДатаНачала	 <= ОкончаниеРаботы)
			и	 (ПериодОтчета.ДатаОкончания >= НачалоРаботы) Тогда
			// все хорошо	
			Иначе
				Продолжить;
			КонецЕсли;
			 
			
		//КонецЕсли;
		
		Обл = Макет.ПолучитьОбласть("Работа");
		Обл.Параметры.КодСДР 			= СтрЗаменить(ВыбСпр.Ссылка.ПолныйКод(),"/", ".");
		Обл.Параметры.ПрефиксУровня		= СтроковыеФункцииКлиентСервер.ДополнитьСтроку( "", ВыбСпр.УровеньВВыборке()*5, " "); 			
		Обл.Параметры.Работа 			= ВыбСпр.Наименование;
		Обл.Параметры.ОкончаниеРаботы 	= Формат( ОкончаниеРаботы, "ДЛФ=D");
		
		РезультатОтчета.Вывести( Обл );
	КонецЦикла;
	
	Обл = Макет.ПолучитьОбласть("Подписи");
	РезультатОтчета.Вывести( Обл );
	РезультатОтчета.АвтоМасштаб = Истина;
	РезультатОтчета.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	СформироватьНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ЗадачаПроекта") Тогда
		ЗадачаПроекта = Параметры.ЗадачаПроекта;
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
	СформироватьПриОткрытии = Параметры.СформироватьПриОткрытии;

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если СформироватьПриОткрытии Тогда
		Сформировать("");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПериодОтчетаПриИзменении(Элемент)
	Сформировать("");
КонецПроцедуры
