#Область ПолучениеДанныхДляОтчета

&НаСервереБезКонтекста
Функция ПолучитьДатуРасчета( ГодБюджета )
	Возврат УП_БДР.ПолучитьДатуРасчета( ГодБюджета );
КонецФункции

&НаКлиенте
Процедура ГодБюджетаПриИзменении(Элемент)
	ДатаРасчета = ПолучитьДатуРасчета( ГодБюджета );
КонецПроцедуры

#КонецОбласти


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	СформироватьПриОткрытии	= Параметры.СформироватьПриОткрытии;
	Если СформироватьПриОткрытии Тогда
		ВыводитьОснования		= Истина;
		//ЗаданныйПроект 			= Параметры.Проект;
		Если Параметры.Свойство( "Проект" ) Тогда
			ЗаданныйПроект = Параметры.Проект;
			ГодБюджета = ЗаданныйПроект.ГодПроекта;
			Период.ДатаНачала 		= НачалоМесяца( Дата(ГодБюджета,1,1));
			Период.ДатаОкончания 	= НачалоМесяца( Дата(ГодБюджета,12,1));
		Иначе 
			ЗаданныйПроект 			= Неопределено;
		КонецЕсли;
		
		//ЗаданнаяЗадачаПроекта 	= Параметры.ЗадачаПроекта;
		Если Параметры.Свойство( "ЗадачаПроекта" ) Тогда
			ЗаданнаяЗадачаПроекта = Параметры.ЗадачаПроекта;
			ГодБюджета = ГодЗадачиПроекта( ЗаданнаяЗадачаПроекта );
			Месяцы     = УП_ПланыРаботПоПроектам.МесяцыЗадачиПроекта(ЗаданнаяЗадачаПроекта);
			Период.ДатаНачала 		= НачалоМесяца( Месяцы[0] );
			Период.ДатаОкончания 	= НачалоМесяца( Месяцы[Месяцы.Количество()-1]);
			ВыводитьОснования		= Ложь;
		Иначе
			ЗаданнаяЗадачаПроекта 	= Неопределено;
		КонецЕсли;
		
		
		ТипСуммыБюджета			= Перечисления.ТипСуммыБюджета.План;
	КонецЕсли;
	СформироватьДеревоОтчета();
	СформироватьТаблицуДохода();
КонецПроцедуры

&НаСервереБезКонтекста
Функция КоличествоМесяцевВПериоде( Период )
	КоличествоМесяцев = 1;
	Д1 = НачалоМесяца( Период.ДатаНачала );
	Пока Д1 < НачалоМесяца( Период.ДатаОкончания ) Цикл 
		Д1 = ДобавитьМесяц( Д1, 1 );
		КоличествоМесяцев = КоличествоМесяцев + 1;
	КонецЦикла;
	Возврат КоличествоМесяцев;
КонецФункции

#Область ФормированиеДереваОтчета

&НаСервере
Процедура СформироватьДеревоОтчета()
	ДеревоРасходов = РеквизитФормыВЗначение("ДеревоОтчета");
	// 1 
	СтрДО = ДобавитьСтрокуВГруппу( ДеревоРасходов, "", "Коммерческие расходы");
	ДобавитьСтрокуВГруппу( СтрДО, "002.0102", "Расходы по заключению договора");
	ДобавитьСтрокуВГруппу( СтрДО, "002.0103", "Вознаграждение КМ");
	ДобавитьСтрокуВГруппу( СтрДО, "002.0502", "Фонд КМ (реализация)");
	
	// 2 
	СтрДО = ДобавитьСтрокуВГруппу( ДеревоРасходов, "", "Производственные расходы");
	ДобавитьСтрокуВГруппу( СтрДО, "002.0201", "Фонд ПП");
	
	
	// 3
	СтрДО = ДобавитьСтрокуВГруппу( ДеревоРасходов, "", "Прочие прямые расходы по проекту");
	ДобавитьСтрокуВГруппу( СтрДО, "002.0302", 	"Командировочные расходы");
	ДобавитьСтрокуВГруппу( СтрДО, "002.0303", 	"Компенсация за удаленного клиента");
	ДобавитьСтрокуВГруппу( СтрДО, "002.0304", 	"Подарки");
	ДобавитьСтрокуВГруппу( СтрДО, "002.0305", 	"Прочие расходы");
	ДобавитьСтрокуВГруппу( СтрДО, "002.0301", 	"Вендер_ПП/ЛО/ИТС");
	
	// 4
	СтрДО = ДобавитьСтрокуВГруппу( ДеревоРасходов, "", "Субподряд");
	ДобавитьСтрокуВГруппу( СтрДО, "002.0401", "Субподряд (производство)");
	
	// 5
	СтрДО = ДобавитьСтрокуВГруппу( ДеревоРасходов, "", "Управленческие расходы");
	ДобавитьСтрокуВГруппу( СтрДО, "002.0503", 	"Штрафы, пени, неустойки (по контрактам)");
	ДобавитьСтрокуВГруппу( СтрДО, "002.0501",	"Фонд ДП");
	
	
	ЗначениеВРеквизитФормы( ДеревоРасходов, "ДеревоОтчета");
КонецПроцедуры

&НаСервере
Функция ДобавитьСтрокуВГруппу( СтрДО, КодСтатьи, НазваниеСтатьи)
	Стр = СтрДО.Строки.Добавить();
	Стр.КодСтатьи 				= КодСтатьи;
	Стр.НазваниеСтатьи 			= НазваниеСтатьи;
	
	Возврат Стр;
КонецФункции

&НаСервере
Процедура ДобавитьСтрокуДохода(ТаблицаДоходов, КодСтатьи, НазваниеСтатьи, ТипДохода, Выводить);
	Стр = ТаблицаДоходов.Добавить();
	Стр.КодСтатьи 		= КодСтатьи;
	Стр.НазваниеСтатьи 	= НазваниеСтатьи;
	Стр.ТипДохода		= ТипДохода;
	Стр.Выводить		= Выводить;
	
КонецПроцедуры

&НаСервере
Функция ВыбранныеТипыДоходов()
	мТипы = Новый Массив;
	Для Каждого Стр ИЗ Доходы Цикл
		Если Стр.Выводить Тогда
			мТипы.Добавить( Стр.ТипДохода );
		КонецЕсли;
	КонецЦикла;
	Возврат мТипы;
КонецФункции

&НаСервере
Функция ВыбранныеКодыСтатей()
	мТипы = Новый Массив;
	Для Каждого Стр ИЗ Доходы Цикл
		Если Стр.Выводить Тогда
			мТипы.Добавить( Стр.КодСтатьи );
		КонецЕсли;
	КонецЦикла;
	Возврат мТипы;
КонецФункции


&НаСервере
Функция СформироватьТаблицуДохода()
	ТаблицаДоходов = РеквизитФормыВЗначение("Доходы");
	ДобавитьСтрокуДохода(ТаблицаДоходов, "001.0101", "Договорные", 		1, Истина); //"ЗадачаД");
	ДобавитьСтрокуДохода(ТаблицаДоходов, "001.0102", "Гарантированные", 2, Истина); //"ЗадачаГ");
	ДобавитьСтрокуДохода(ТаблицаДоходов, "001.0103", "Прогнозные", 		3, Истина); //"ЗадачаП");
	ЗначениеВРеквизитФормы( ТаблицаДоходов, "Доходы");
	
КонецФункции


#КонецОбласти

#Область СформироватьОтчетПоРегистру

// 
&НаСервере
Процедура УстановитьОтборПоЗаданнымПараметрам( ПараметрыЗапроса, Проект = Неопределено, ЗадачаПроекта = Неопределено )
	Если ЗаданныйПроект = Неопределено Тогда
		ПараметрыЗапроса.Вставить("Проект", 		Проект );
	Иначе
		ПараметрыЗапроса.Вставить("Проект", 		ЗаданныйПроект );
	КонецЕсли;
	
	Если ЗаданнаяЗадачаПроекта = Неопределено Тогда
		ПараметрыЗапроса.Вставить("ЗадачаПроекта", 		ЗадачаПроекта );
	Иначе
		ПараметрыЗапроса.Вставить("ЗадачаПроекта", 	ЗаданнаяЗадачаПроекта );
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиОснованияСтатей( ТабДок, ПараметрыЗапроса, Макет, НачалоПериода, КоличествоМесяцев )
	// для вызова отчета из проекта или задачи проекта
	УстановитьОтборПоЗаданнымПараметрам( ПараметрыЗапроса );

	тзПроектыИЗадачи = УП_БДР.ПолучитьПроектыБДР( ПараметрыЗапроса, НачалоПериода, КоличествоМесяцев);
	
	тзПроекты = тзПроектыИЗадачи.Скопировать(,"Проект");
	тзПроекты.Свернуть("Проект");
	тзПроекты.Сортировать("Проект");
	
	Для Каждого СтрПроект ИЗ тзПроекты Цикл
		Проект = СтрПроект.Проект;
		УстановитьОтборПоЗаданнымПараметрам( ПараметрыЗапроса, Проект );
		
		СуммаПоПроекту = УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапроса, НачалоПериода, КоличествоМесяцев );
		Если СуммаПоПроекту = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Обл 	= Макет.ПолучитьОбласть("Проект|Начало");
		ЗаполнитьЗначенияСвойств( Обл.Параметры, СтрПроект );
		Обл.Параметры.Сумма = СуммаПоПроекту;
		ТабДок.Вывести( Обл, 2 );
		Для Н = 1 ПО КоличествоМесяцев Цикл
			ТекущийМесяц 		= ДобавитьМесяц( НачалоПериода, Н-1);
			Обл 				= Макет.ПолучитьОбласть("Проект|Месяц");
			Обл.Параметры.Сумма = УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапроса, ТекущийМесяц );
			ТабДок.Присоединить( Обл );
		КонецЦикла;
		
		// задачи проекта
		тзЗадачиПроекта = тзПроектыИЗадачи.Скопировать( Новый Структура("Проект", Проект));
		Для Каждого СтрЗадача ИЗ тзЗадачиПроекта Цикл
			ЗадачаПроекта = СтрЗадача.ЗадачаПроекта;
			УстановитьОтборПоЗаданнымПараметрам( ПараметрыЗапроса, Проект, ЗадачаПроекта );
			
			СуммаПоЗадаче = УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапроса, НачалоПериода, КоличествоМесяцев );
			Если СуммаПоЗадаче = 0 Тогда
				Продолжить;
			КонецЕсли;
			// получаем распределение по месяцам задачи проекта в объеме остатка по смету
			Обл 	= Макет.ПолучитьОбласть("ЗадачаПроекта|Начало");
			ЗаполнитьЗначенияСвойств( Обл.Параметры, СтрЗадача );
			Обл.Параметры.Сумма = СуммаПоЗадаче;
			ТабДок.Вывести( Обл, 3 );
			
			
			Для Н = 1 ПО КоличествоМесяцев Цикл
				ТекущийМесяц = ДобавитьМесяц( НачалоПериода, Н-1);
				Обл 	= Макет.ПолучитьОбласть("ЗадачаПроекта|Месяц");
				Обл.Параметры.Сумма = УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапроса, ТекущийМесяц );
				ТабДок.Присоединить( Обл );
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиШапкуБДР(ТабДок, Макет, ТипыДоходов, НачалоПериода, КоличествоМесяцев)
	ПараметрыЗапросаСумм = Новый Структура;
	ПараметрыЗапросаСумм.Вставить("ГодБюджета", 	ГодБюджета );
	ПараметрыЗапросаСумм.Вставить("ТипыДоходов", 	ТипыДоходов);
	ПараметрыЗапросаСумм.Вставить("ТипСуммы", 		ТипСуммыБюджета);
	ПараметрыЗапросаСумм.Вставить("Доход", 			Истина );
	//
	УстановитьОтборПоЗаданнымПараметрам( ПараметрыЗапросаСумм );
	
	Обл 	= Макет.ПолучитьОбласть("ШапкаОтчета|Начало");
	Обл.Параметры.ПечПериод = ПредставлениеПериода(Период.ДатаНачала, Период.ДатаОкончания, "ФП=Истина");
	Обл.Параметры.ДатаРасчета = "Рассчитан " + УП_БДР.ПолучитьДатуРасчета( ГодБюджета );
	Обл.Параметры.ГодБюджета = "" + ТипСуммыБюджета + ", " + Формат( ГодБюджета, "ЧЦ=4; ЧГ=0")+ " г.";
	// ЗаданныеПараметры
	Если 		ЗначениеЗаполнено( ЗаданныйПроект ) Тогда
		ЗаданныеПараметры = "Проект: " + ЗаданныйПроект;
	ИначеЕсли	ЗначениеЗаполнено( ЗаданнаяЗадачаПроекта ) Тогда
		ЗаданныеПараметры = "Проект: " + ЗаданнаяЗадачаПроекта.Владелец + ", " + ЗаданнаяЗадачаПроекта;
	Иначе
		ЗаданныеПараметры = "";
	КонецЕсли;
	Обл.Параметры.ЗаданныеПараметры = ЗаданныеПараметры;
		
	КодыСтатей = Новый Массив;
	СписокВыводимыхДоход = "";
	Для Каждого СтрДоход ИЗ Доходы Цикл
		Если СтрДоход.Выводить Тогда
			СписокВыводимыхДоход = СписокВыводимыхДоход + ?(ЗначениеЗаполнено(СписокВыводимыхДоход), ", ","") +
									СтрДоход.НазваниеСтатьи;
									
			КодыСтатей.Добавить(СтрДоход.КодСтатьи);									
		КонецЕсли;
	КонецЦикла;
	//
	ПараметрыЗапросаСумм.Вставить("КодыСтатей", 	КодыСтатей);
	
	Обл.Параметры.ТипыДоходов 	= "Типы доходов: " + СписокВыводимыхДоход;
	Обл.Параметры.Сумма 		= УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапросаСумм, НачалоПериода, КоличествоМесяцев );
	ТабДок.Вывести( Обл, 1 );
	
	Для Н = 1 ПО КоличествоМесяцев Цикл
		ТекущийМесяц = ДобавитьМесяц( НачалоПериода, Н-1);
		Обл 	= Макет.ПолучитьОбласть("ШапкаОтчета|Месяц");
		Обл.Параметры.Месяц = Формат( ТекущийМесяц, "ДФ='ММММ гг'");
		Обл.Параметры.Сумма = УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапросаСумм, ТекущийМесяц  );
		ТабДок.Присоединить( Обл );
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВывестиДоходыБДР( ТабДок, Макет, ТипыДоходов, НачалоПериода, КоличествоМесяцев );
	ПараметрыЗапросаСумм = Новый Структура;
	ПараметрыЗапросаСумм.Вставить("ГодБюджета", 	ГодБюджета ); 
	ПараметрыЗапросаСумм.Вставить("Доход", 			Истина );
	ПараметрыЗапросаСумм.Вставить("ТипыДоходов", 	ТипыДоходов);
	ПараметрыЗапросаСумм.Вставить("ТипСуммы", 		ТипСуммыБюджета);
	Для Каждого СтрДоход ИЗ Доходы Цикл 
		// выводим только отмеченные статьи дохода
		Если НЕ СтрДоход.Выводить Тогда
			Продолжить;
		КонецЕсли;
		ПараметрыЗапросаСумм.Вставить("ТипыДоходов", 	СтрДоход.ТипДохода);
		// проект и задача проекта		
		УстановитьОтборПоЗаданнымПараметрам( ПараметрыЗапросаСумм );
		
		
		Обл		= Макет.ПолучитьОбласть("СтатьяДохода|Начало");
		ЗаполнитьЗначенияСвойств( Обл.Параметры, СтрДоход );
		Обл.Параметры.Сумма = УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапросаСумм, НачалоПериода, КоличествоМесяцев );
		ТабДок.Вывести( Обл, 1 );
		Для Н = 1 ПО КоличествоМесяцев Цикл
			ТекущийМесяц = ДобавитьМесяц( НачалоПериода, Н-1);
			Обл 	= Макет.ПолучитьОбласть("СтатьяДохода|Месяц");
			Обл.Параметры.Сумма = УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапросаСумм, ТекущийМесяц );
			ТабДок.Присоединить( Обл );
		КонецЦикла;
		
		Если ВыводитьОснования Тогда
			ВывестиОснованияСтатей( ТабДок, ПараметрыЗапросаСумм, Макет, НачалоПериода, КоличествоМесяцев )	
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВывестиРасходыБДР( ТабДок, Макет, ТипыДоходов, НачалоПериода, КоличествоМесяцев )
	ПараметрыЗапросаСумм = Новый Структура;
	ПараметрыЗапросаСумм.Вставить("ГодБюджета", 	ГодБюджета );
	ПараметрыЗапросаСумм.Вставить("Доход", 			Ложь );
	ПараметрыЗапросаСумм.Вставить("ТипыДоходов", 	ТипыДоходов);
	ПараметрыЗапросаСумм.Вставить("ТипСуммы", 		ТипСуммыБюджета);
	
	
	// расходы
	Разделы = ДеревоОтчета.ПолучитьЭлементы();
	Для Каждого РазделР ИЗ  Разделы Цикл 
		// инциализируем по разделу
		// проект и задача проекта		
		УстановитьОтборПоЗаданнымПараметрам( ПараметрыЗапросаСумм );
		
		// вначале статьи разделов
		КодыСтатей = Новый Массив;
		Статьи = РазделР.ПолучитьЭлементы();
		Для Каждого Статья ИЗ Статьи Цикл
			КодыСтатей.Добавить(Статья.КодСтатьи );
		КонецЦикла;
		ПараметрыЗапросаСумм.Вставить("КодыСтатей", КодыСтатей );
			
		ОблР 	= Макет.ПолучитьОбласть("РазделРасходов|Начало");
		// сначала получаем таблицу расходов по разделу

		ЗаполнитьЗначенияСвойств( ОблР.Параметры, РазделР );
		ОблР.Параметры.Сумма = УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапросаСумм, НачалоПериода,КоличествоМесяцев);
		ТабДок.Вывести( ОблР,1 );
		Для Н = 1 ПО КоличествоМесяцев Цикл
			ТекущийМесяц 		= ДобавитьМесяц( НачалоПериода, Н-1);
			Обл 				= Макет.ПолучитьОбласть("РазделРасходов|Месяц");
			Обл.Параметры.Сумма = УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапросаСумм, ТекущийМесяц);
			ТабДок.Присоединить( Обл );
		КонецЦикла;
		
		// по статьям
		Статьи = РазделР.ПолучитьЭлементы();
		Для Каждого Статья ИЗ Статьи Цикл
			Обл 					= Макет.ПолучитьОбласть("СтатьяРасхода|Начало");
			ЗаполнитьЗначенияСвойств( Обл.Параметры, Статья );
			
			УстановитьОтборПоЗаданнымПараметрам( ПараметрыЗапросаСумм );
			
			ПараметрыЗапросаСумм.Вставить("КодыСтатей", Статья.КодСтатьи );
			
			Обл.Параметры.Сумма = УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапросаСумм, НачалоПериода,КоличествоМесяцев);
			
			
			ТабДок.Вывести( Обл,1 );
			Для Н = 1 ПО КоличествоМесяцев Цикл
				ТекущийМесяц = ДобавитьМесяц( НачалоПериода, Н-1);
				Обл 	= Макет.ПолучитьОбласть("СтатьяРасхода|Месяц");
				Обл.Параметры.Сумма = УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапросаСумм,ТекущийМесяц);
				ТабДок.Присоединить( Обл );
			КонецЦикла;
			
			Если ВыводитьОснования Тогда
				ВывестиОснованияСтатей( ТабДок, ПараметрыЗапросаСумм, Макет, НачалоПериода, КоличествоМесяцев )	;
				
			КонецЕсли;
		
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция Рентабельность( СуммаДохода, СуммаРасхода )
	Если СуммаРасхода = 0 Тогда
		Возврат 100;
	КонецЕсли;
	Возврат (СуммаДохода- СуммаРасхода)/СуммаРасхода * 100;
КонецФункции

&НаСервере
Процедура ВывестиПодвалБДР( ТабДок, Макет, ТипыДоходов, НачалоПериода, КоличествоМесяцев )
	ПараметрыЗапросаСумм = Новый Структура;
	ПараметрыЗапросаСумм.Вставить("ГодБюджета", 	ГодБюджета );
	ПараметрыЗапросаСумм.Вставить("ТипыДоходов", 	ТипыДоходов);
	ПараметрыЗапросаСумм.Вставить("ТипСуммы", 		ТипСуммыБюджета);
	//
	УстановитьОтборПоЗаданнымПараметрам( ПараметрыЗапросаСумм );
	
	Обл 	= Макет.ПолучитьОбласть("Подвал|Начало");
	
	ПараметрыЗапросаСумм.Вставить("Доход", 			Истина );
	СуммаДохода = УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапросаСумм, НачалоПериода, КоличествоМесяцев );
	ПараметрыЗапросаСумм.Вставить("Доход", 			Ложь );
	СуммаРасхода	= УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапросаСумм, НачалоПериода, КоличествоМесяцев );
	
	Обл.Параметры.Сумма 	= СуммаДохода - СуммаРасхода;
	Обл.Параметры.Процент	= Рентабельность( СуммаДохода, СуммаРасхода ); 
	ТабДок.Вывести( Обл, 1 );
	Для Н = 1 ПО КоличествоМесяцев Цикл
		ТекущийМесяц = ДобавитьМесяц( НачалоПериода, Н-1);
		// за месяц
		Обл 	= Макет.ПолучитьОбласть("Подвал|Месяц");
		
		ПараметрыЗапросаСумм.Вставить("Доход", 			Истина );
		СуммаДохода 	= УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапросаСумм, ТекущийМесяц);
		ПараметрыЗапросаСумм.Вставить("Доход", 			Ложь );
		СуммаРасхода	= УП_БДР.ПолучитьСуммуБДР( ПараметрыЗапросаСумм, ТекущийМесяц);
		
		Обл.Параметры.Сумма 	= СуммаДохода - СуммаРасхода;
		Обл.Параметры.Процент	= Рентабельность( СуммаДохода, СуммаРасхода ); 
		
		ТабДок.Присоединить( Обл );
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура СформироватьПоРегиструНаСервере(ТабДок, ТипыДоходов )
	НачалоПериода 		= НачалоМесяца( Период.ДатаНачала );
	КоличествоМесяцев 	= КоличествоМесяцевВПериоде( Период );
	Макет 	= РеквизитФормыВЗначение("Отчет").ПолучитьМакет("БДР");
	
	ТабДок.НачатьАвтогруппировкуСтрок();
	
	// шапка
	ВывестиШапкуБДР(ТабДок, Макет, ТипыДоходов, НачалоПериода, КоличествоМесяцев);
	
	// доходы
	ВывестиДоходыБДР( ТабДок, Макет, ТипыДоходов, НачалоПериода, КоличествоМесяцев );
	//
	//
	ВывестиРасходыБДР( ТабДок, Макет, ТипыДоходов, НачалоПериода, КоличествоМесяцев );
	// 	
	ВывестиПодвалБДР( ТабДок, Макет, ТипыДоходов, НачалоПериода, КоличествоМесяцев );
	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	

КонецПроцедуры

&НаКлиенте
Процедура СформироватьПоРегистру(Команда)
	КоличествоМесяцев 	= КоличествоМесяцевВПериоде( Период );
	// для задачи и проекта - полностью
	Если НЕ СформироватьПриОткрытии И КоличествоМесяцев > 12 Тогда
		ПоказатьПредупреждение(,"В периоде может быть не больше 12 месяцев",10);
		Возврат;
	КонецЕсли;
	мТипыДоходов = ВыбранныеТипыДоходов();
	Если мТипыДоходов.Количество() = 0 Тогда 
		ПоказатьПредупреждение(,"Укажите тип(ы) дохода(ов) для вывода в отчет",10);
		Возврат;
	КонецЕсли;
	
	
	ТабДок = Новый ТабличныйДокумент;
	
	СформироватьПоРегиструНаСервере(ТабДок, мТипыДоходов);
	
	ТабДок.АвтоМасштаб = Истина;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ФиксацияСлева = 4;
	ТабДок.ФиксацияСверху = 7;
	//ТабДок.Защита = Истина;
	ТабДок.ТолькоПросмотр = Истина;
	ТабДок.Показать("Бюджет доходов и расходов по статьям ");
	
КонецПроцедуры

#КонецОбласти


#Область РассчетБюджета


&НаСервере
Процедура РассчитатьБюджетНаСервере()
	УП_БДР.РассчитатьБюджетНаСервере(ГодБюджета);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьБюджет(Команда)
	
	РассчитатьБюджетНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если СформироватьПриОткрытии Тогда
		
		// пока не выводим, а то не понятно где отчет
		//СформироватьПоРегистру("");
	КонецЕсли;
	ГодБюджетаПриИзменении("");
КонецПроцедуры


#КонецОбласти