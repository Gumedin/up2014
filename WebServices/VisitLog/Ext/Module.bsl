
Функция Upload(ид_ФизическогоЛица, МесяцПосещений ) Экспорт
	
	GUID_ФизическогоЛица 	= Новый УникальныйИдентификатор(ид_ФизическогоЛица);
	JSON_Данные 			= УП_ПосещенияКонтрагентов.JSON_ПолучитьЖурналПосещений( GUID_ФизическогоЛица );
	
	Возврат JSON_Данные;
КонецФункции

// загружаем журнал от клиента
// возвращаем обновленный журнал
Функция Download(ЖурналJSON)
	
	ЖурналОтКлиента = УП_ПосещенияКонтрагентов.JSON_ПрочитатьЖурналОтКлиента( ЖурналJSON );
	
	// отрабатываем журнал
	УП_ПосещенияКонтрагентов.ОбновитьЖурналПосещений( ЖурналОтКлиента );
	
	
	// возвращаем обновленный журнал
	GUID_ФизическогоЛица 	= ЖурналОтКлиента.ФизическоеЛицо.УникальныйИдентификатор();
	ЖурналОтСервера			= УП_ПосещенияКонтрагентов.JSON_ПолучитьЖурналПосещений( GUID_ФизическогоЛица );
	
	Возврат ЖурналОтСервера;
КонецФункции


// получить параметры физ.лица
// в формате "Авлеева А.Н."
//
Функция GetPLParameters(КодФизЛица)
	ФизЛицо = Справочники.ФизическиеЛица.НайтиПоКоду( КодФизЛица );
	// уникальный идентификатор физического лица
	Возврат Строка(ФизЛицо.УникальныйИдентификатор());
КонецФункции


// возвращает регистр сведений физического лица в виде массива
// записей
Функция GetVisitDefinition(ид_ФизическогоЛица)
	
	GUID_ФизическогоЛица 	= Новый УникальныйИдентификатор(ид_ФизическогоЛица);
	JSON_Данные 			= УП_ПосещенияКонтрагентов.JSON_ПолучитьКонтрагентовПосещений( GUID_ФизическогоЛица );
	
	Возврат JSON_Данные;
КонецФункции

// по имени пользователя, ищет прикрепленное физическое лицо
// если есть возвращает его GUID
// если нет - пустую строку
Функция Registration( ИмяПользователя )
	Возврат УП_ПосещенияКонтрагентов.ИдентификацияМобильногоКлиента( ИмяПользователя );
КонецФункции

