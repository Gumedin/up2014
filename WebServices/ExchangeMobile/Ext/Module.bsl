
// по фамилии и паролю физического лица 
// после проверки пароля
// возвращает UID физического лица
Функция Registration(КодФизическогоЛица, Пароль)
	
	ИД_ФЛ = УП_ПосещенияКонтрагентов.ИдентификацияМобильногоКлиента( КодФизическогоЛица, Пароль );
	Если ЗначениеЗаполнено( ИД_ФЛ ) Тогда
		Возврат Строка( ИД_ФЛ );
	КонецЕсли;
	Возврат "";
КонецФункции


//// получает журнал с мобильного устройства
//// обновляет его на сервере
//// читает новый журнал и возвращает его на мобильное учтройство
//Функция Sinhronization(ИД_ФизическогоЛица, ЖурналJSON)
//	
//	Возврат ЖурналJSON;
//КонецФункции



// записывает на сервер журнал с мобильного клиента
// возвращает признак - успешно или нет
// 0 - успешно записан
// 1 - физическое лицо недоступно для записи журнала на сервере
// 2 - изменился месяц журнала посещений
// 3 - прочие проблемы
Функция PutVisitLog(ИД_ФизическогоЛица, ЖурналJSON)
	ФизическоеЛицо 	= УП_ПосещенияКонтрагентов.ФизическоеЛицоПоИД( ИД_ФизическогоЛица );
	Если ФизическоеЛицо = Неопределено Тогда
		Возврат 1;
	КонецЕсли;
	
	МесяцПосещений	= НачалоМесяцаПосещений();
	//
	ЖурналОтКлиента = УП_ПосещенияКонтрагентов.JSON_ПрочитатьЖурналОтКлиента( ЖурналJSON );
	
	Если ЖурналОтКлиента.МесяцПосещений <> МесяцПосещений Тогда
		Возврат 2;
	КонецЕсли;
	
	
	УспешноЗаписан = УП_ПосещенияКонтрагентов.ОбновитьЖурналПосещений2( ЖурналОтКлиента );
	Если УспешноЗаписан Тогда
		Возврат 0;
	КонецЕсли;
	Возврат 3;
КонецФункции


// возвращает журнал физического лица за текущий месяц посещений
// если физи лицо не правильное, возвращается пустая строка
Функция GetVisitLog(ИД_ФизическогоЛица)
	ФизическоеЛицо 	= УП_ПосещенияКонтрагентов.ФизическоеЛицоПоИД( ИД_ФизическогоЛица );
	Если ФизическоеЛицо = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	// получаем журнал (с картинками) за месяц посещений
	ЖурналJSON = УП_ПосещенияКонтрагентов.JSON_ПолучитьЖурналПосещений2( ФизическоеЛицо );
	Возврат ЖурналJSON;
КонецФункции

