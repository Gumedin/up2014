// Обновить данные в планировщике.
//
// Параметры:
//  Планировщик - Планировщик - Планировщик.
//  НастройкиОтображения - Структура - Настройки отображения.
//  ДанныеПланировщика - Структура - Данные планировщика.
//  ОчиститьЭлементы - Булево - Принак необходимости очистить элементы перед обновлением.
//
Процедура ОбновитьДанныеПланировщика(Планировщик, НастройкиОтображения, ДанныеПланировщика, ОчиститьЭлементы = Ложь)
	
	Если ОчиститьЭлементы Тогда
		// здесь вылетает Web-клиент
		Если Планировщик.Элементы.Количество() <> 0 Тогда
			Планировщик.Элементы.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого СтруктураЭлемента Из ДанныеПланировщика.Элементы Цикл
		ДобавитьЗаписьКалендаряВПланировщик(
			Планировщик,
			СтруктураЭлемента);
	КонецЦикла;
	
	Планировщик.ИнтервалыФона.Очистить();
	Для Каждого СтруктураИнтервалаФона Из ДанныеПланировщика.ИнтервалыФона Цикл
		ДобавитьИнтервалФонаВПланировщик(
			Планировщик,
			СтруктураИнтервалаФона);
	КонецЦикла;
	
КонецПроцедуры

// Добавляет интервал фона в планировщик.
//
// Параметры:
//  Планировщик						 - Планировщик	 - Планировщик.
//  СтруктураЭлемента				 - Структура	 - Структура элемента планировщика.
//
Процедура ДобавитьИнтервалФонаВПланировщик(Планировщик, СтруктураИнтервалаФона)
	
	ТекущийИнтервалФона = Планировщик.ИнтервалыФона.Добавить(
		СтруктураИнтервалаФона.Начало, СтруктураИнтервалаФона.Конец);
	ТекущийИнтервалФона.Цвет = СтруктураИнтервалаФона.Цвет;
	
КонецПроцедуры


// Обновляет элемент календаря в планировщике.
//
// Параметры:
//  Планировщик						 - Планировщик	 - Планировщик.
//  СтруктураЭлемента				 - Структура	 - Структура элемента планировщика.
//  ОтображатьПомеченныеНаУдаление	 - Булево		 - Отображение помеченных на удаление элементов.
//
Процедура ДобавитьЗаписьКалендаряВПланировщик(Планировщик, СтруктураЭлемента)
	
	ТекущийЭлементПланировщика = Планировщик.Элементы.Добавить(
		СтруктураЭлемента.Начало, СтруктураЭлемента.Конец);
	
	ТекущийЭлементПланировщика.Загрузить(СтруктураЭлемента);
	
КонецПроцедуры



// Обновляет отображение планировщика.
//
// Параметры:
//  Планировщик			 - Планировщик	 - Планировщик.
//  НастройкиОтображения - Структура	 - Настройки отображения планировщика.
//  ИзмененнаяНастройка	 - Строка		 - Имя измененной настройки.
//
Процедура ОбновитьОтображениеПланировщика(Планировщик, НастройкиОтображения,
	ИзмененнаяНастройка = Неопределено) Экспорт
	
	Планировщик.ИнтервалыФона.Очистить();
	//Планировщик.Элементы.Очистить();
	
	// Данные планировщика.
	ДанныеПланировщика = УП_РаботаСРабочимКалендаремСервер.ПолучитьДанныеПланировщика(
		НастройкиОтображения, ИзмененнаяНастройка);
	ОбновитьДанныеПланировщика(
		Планировщик, НастройкиОтображения, ДанныеПланировщика, Истина);
	
	// Настройки отображения.
	УП_РаботаСРабочимКалендаремКлиентСервер.ПрименитьНастройкиОтображения(
		Планировщик, НастройкиОтображения);
	
КонецПроцедуры


Функция ВидимостьУточненияПредметаПосещения( ПредметПосещения ) Экспорт
	Если ТипЗнч( ПредметПосещения ) = Тип("СправочникСсылка.ЗадачиПроектов")
	или	 ТипЗнч( ПредметПосещения ) = Тип("ДокументСсылка.ПланРабот")
	или	 ТипЗнч( ПредметПосещения ) = Тип("ДокументСсылка.ПланРаботТиражный") Тогда
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
КонецФункции
