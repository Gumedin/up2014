#Область РасчетБюджета

Процедура СложитьТаблицы( тз1, тз2)
	Для Каждого Стр2 ИЗ тз2 Цикл
		Стр1 = тз1.Добавить();
		ЗаполнитьЗначенияСвойств( Стр1, Стр2 );
	КонецЦикла;
	тз1.Свернуть("Месяц,Проект,ЗадачаПроекта,РКО", "Сумма");		
КонецПроцедуры

#Область Расходы 
Функция ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  ) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(БюджетПоМесяцам.Месяц, МЕСЯЦ) КАК Месяц,
		|	СУММА(БюджетПоМесяцам.Сумма) КАК Сумма,
		|	БюджетПоМесяцам.ЗадачаПроекта КАК ЗадачаПроекта,
		|	БюджетПоМесяцам.ЗадачаПроекта.Владелец КАК Проект,
		|	БюджетПоМесяцам.РКО
		|ИЗ
		|	РегистрНакопления.БюджетПоМесяцам КАК БюджетПоМесяцам
		|ГДЕ
		|	БюджетПоМесяцам.ТипСуммы = &ТипСуммы
		|	И БюджетПоМесяцам.СтатьяСметы = &СтатьяСметы
		|	И ВЫБОР
		|			КОГДА БюджетПоМесяцам.ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА БюджетПоМесяцам.ЗадачаПроекта.Владелец.ГодПроекта
		|			ИНАЧЕ ГОД(БюджетПоМесяцам.ЗадачаПроекта.НачалоРабот)
		|		КОНЕЦ = &ГодЗадач
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(БюджетПоМесяцам.Месяц, МЕСЯЦ),
		|	БюджетПоМесяцам.ЗадачаПроекта,
		|	БюджетПоМесяцам.ЗадачаПроекта.Владелец,
		|	БюджетПоМесяцам.РКО";
	
		
	Запрос.УстановитьПараметр("ГодЗадач", 		ГодБюджета);
	Запрос.УстановитьПараметр("СтатьяСметы", 	СтатьяСметы);
	Запрос.УстановитьПараметр("ТипСуммы", 		ТипСуммы);
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
КонецФункции

Процедура ДобавитьЗаписьБДР( НаборЗап, СтрЗаписи )
	ЗаписьБДР = НаборЗап.Добавить();
	ЗаполнитьЗначенияСвойств(ЗаписьБДР, СтрЗаписи );
КонецПроцедуры


Функция  ПолучитьТипыДоходовЗадачи( ГодБюджета, ЗадачаПроекта) Экспорт
	сТипы = Новый Соответствие;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТипыДоходовЗадачПроектов.ТипДохода,
		|	ТипыДоходовЗадачПроектов.Доля
		|ИЗ
		|	РегистрСведений.ТипыДоходовЗадачПроектов КАК ТипыДоходовЗадачПроектов
		|ГДЕ
		|	ТипыДоходовЗадачПроектов.ГодБюджета = &ГодБюджета
		|	И ТипыДоходовЗадачПроектов.ЗадачаПроекта = &ЗадачаПроекта";
	
	Запрос.УстановитьПараметр("ГодБюджета", ГодБюджета);
	Запрос.УстановитьПараметр("ЗадачаПроекта", ЗадачаПроекта);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		сТипы.Вставить(ВыборкаДетальныеЗаписи.ТипДохода, ВыборкаДетальныеЗаписи.Доля  );
	КонецЦикла;
	
	// например нет доходов по статье
	Если сТипы.Количество() = 0 Тогда
		// полностью прогноз
		сТипы.Вставить(3, 1 );
	КонецЕсли;
	
	Возврат сТипы;
КонецФункции

Функция КодСтатьиДохода( ТипДохода )
	Если 		ТипДохода = 1 Тогда
		Возврат "001.0101";
	ИначеЕсли ТипДохода = 2 Тогда
		Возврат "001.0102";
	Иначе
		Возврат "001.0103";
	КонецЕсли;
		
КонецФункции

Процедура ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, КодСтатьи, тзРасходы )
	// заполнить статьями
	//
	НаборЗап = РегистрыСведений.БюджетДоходовИРасходов.СоздатьНаборЗаписей();
	НаборЗап.Отбор.ГодБюджета.Установить( 	ГодБюджета );
	НаборЗап.Отбор.ТипСуммы.Установить( 	ТипСуммы );
	НаборЗап.Отбор.КодСтатьи.Установить( 	КодСтатьи );
	НаборЗап.Отбор.Доход.Установить( Ложь );
	
	// постоянные элементы	
	СтрЗаписи = Новый Структура;
	СтрЗаписи.Вставить("Доход", 		Ложь );
	СтрЗаписи.Вставить("ГодБюджета", 	ГодБюджета );
	СтрЗаписи.Вставить("ТипСуммы", 		ТипСуммы);
	СтрЗаписи.Вставить("КодСтатьи", 	КодСтатьи);
	
	Для Каждого СтрР ИЗ тзРасходы Цикл 
		Если СтрР.Сумма = 0 Тогда Продолжить; КонецЕсли;
		
		СтрЗаписи.Вставить("Месяц", 			СтрР.Месяц);
		СтрЗаписи.Вставить("Проект", 			СтрР.Проект);
		СтрЗаписи.Вставить("ЗадачаПроекта", 	СтрР.ЗадачаПроекта);
		СтрЗаписи.Вставить("РКО", 				СтрР.РКО);
		// 2017 07 21
		СтрЗаписи.Вставить("Основание", 		Строка( СтрР.Проект ));
		
		сТипыДоходов = ПолучитьТипыДоходовЗадачи( ГодБюджета, СтрР.ЗадачаПроекта);
		Для Каждого ТипДоходов ИЗ сТипыДоходов Цикл
			СтрЗаписи.Вставить("ТипДохода", ТипДоходов.Ключ);
			Сумма = СтрР.Сумма * ТипДоходов.Значение;
			СтрЗаписи.Вставить("Сумма", Сумма );
			ДобавитьЗаписьБДР( НаборЗап, СтрЗаписи );
		КонецЦикла;
		
	КонецЦикла;
	
	НаборЗап.Записать();
	
КонецПроцедуры

Процедура ОчиститьРегистрБДР( ГодБюджета )
	
	НаборЗап = РегистрыСведений.БюджетДоходовИРасходов.СоздатьНаборЗаписей();
	НаборЗап.Отбор.ГодБюджета.Установить( ГодБюджета );
	НаборЗап.Прочитать();
	НаборЗап.Очистить();
	НаборЗап.Записать();
	
	НаборЗап = РегистрыСведений.ТипыДоходовЗадачПроектов.СоздатьНаборЗаписей();
	НаборЗап.Отбор.ГодБюджета.Установить( ГодБюджета );
	НаборЗап.Прочитать();
	НаборЗап.Очистить();
	НаборЗап.Записать();
	
	
КонецПроцедуры

Процедура ЗаполнитьРегистрРасходамиПлан( ГодБюджета )
	ТипСуммы = Перечисления.ТипСуммыБюджета.План;
	
	
	// 002.0102 Выплата посреднику
	СтатьяСметы = Справочники.СтатьиСметы.ВыплатаВознПосреднику;
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0102", тзРасходы );
	
	// 002.0103 Вознаграждение КМ
	СтатьяСметы = Справочники.СтатьиСметы.ВознаграждениеКМ;
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0103", тзРасходы );
	
	
	// 002.0201
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( Справочники.СтатьиСметы.ФОТ_ПП, ТипСуммы, ГодБюджета  );
	тзРасходы1 	= ПолучитьДанныеПоСтатьеСметы( Справочники.СтатьиСметы.Начисление_ФондПодр, ТипСуммы, ГодБюджета  );
	СложитьТаблицы( тзРасходы, тзРасходы1);
	тзРасходы.Свернуть("Проект,ЗадачаПроекта,Месяц,РКО", "Сумма");
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0201", тзРасходы );	
	
	//002.0301
	СтатьяСметы = Справочники.СтатьиСметы.РасходыППЛО;
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0301", тзРасходы );
	
	// 002.0302
	СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
	СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("002.0103");
	тзРасходы = ПолучитьПланПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0302", тзРасходы );	

	// 002.0303
	СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
	СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("002.0105");
	тзРасходы = ПолучитьПланПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0303", тзРасходы );	
	
	// 002.0304
	СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
	СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("003.0703");
	тзРасходы = ПолучитьПланПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0304", тзРасходы );	
	
	// 002.0305
	СтатьяСметы = Справочники.СтатьиСметы.РасходыППпоПроекту;
	тзРасходы 	= ПолучитьПланПрочиеПрямыеРасходыПрочие( СтатьяСметы, ГодБюджета );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0305", тзРасходы );	
	
	
	//002.0401
	СтатьяСметы = Справочники.СтатьиСметы.Субподряд;
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0401", тзРасходы );
	
	//002.0501
	СтатьяСметы = Справочники.СтатьиСметы.Фонд_ДП;
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0501",  тзРасходы);
	
	//002.0502
	СтатьяСметы = Справочники.СтатьиСметы.Фонд_КМ;
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0502",  тзРасходы);
	
КонецПроцедуры	

Процедура ЗаполнитьРегистрРасходамиФакт( ГодБюджета )
	ТипСуммы = Перечисления.ТипСуммыБюджета.Факт;

	// 002.0102 Выплата посреднику
	СтатьяСметы = Справочники.СтатьиСметы.ВыплатаВознПосреднику;
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0102", тзРасходы );
	
	// 002.0103 Вознаграждение КМ
	СтатьяСметы = Справочники.СтатьиСметы.ВознаграждениеКМ;
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0103", тзРасходы );
	

	//// 002.0201
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( Справочники.СтатьиСметы.ФОТ_ПП, ТипСуммы, ГодБюджета  );
	тзРасходы1 	= ПолучитьДанныеПоСтатьеСметы( Справочники.СтатьиСметы.Начисление_ФондПодр, ТипСуммы, ГодБюджета  );
	СложитьТаблицы( тзРасходы, тзРасходы1);
	тзРасходы.Свернуть("Проект,ЗадачаПроекта,Месяц,РКО", "Сумма");
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0201", тзРасходы );	

	
	//002.0301
	СтатьяСметы = Справочники.СтатьиСметы.РасходыППЛО;
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0301", тзРасходы );
	
	// 002.0302
	СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
	СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("002.0103");
	тзРасходы 		= ПолучитьФактПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0302", тзРасходы );	

	// 002.0303
	СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
	СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("002.0105");
	тзРасходы = ПолучитьФактРасходыПоСотруднику( СтатьяСметы, СтатьяРасходов, ГодБюджета );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0303", тзРасходы );	
	
	// 002.0304
	СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
	СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("003.0703");
	тзРасходы = ПолучитьФактПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0304", тзРасходы );	
	
	// 002.0305
	// прочие статьи расходов
	СтатьяСметы = Справочники.СтатьиСметы.РасходыППпоПроекту;
	тзРасходы1 	= ПолучитьФактПрочиеПрямыеРасходыПрочие( СтатьяСметы, ГодБюджета );
	// проезд сотрудников отражаются  заявкой на расход по сотруднику по статье Проезд
	СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("002.0104");
	тзРасходы2 = ПолучитьФактРасходыПоСотруднику( СтатьяСметы, СтатьяРасходов, ГодБюджета );
	СложитьТаблицы( тзРасходы1, тзРасходы2);
	
	
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0305", тзРасходы1 );	
	
	
	//002.0401
	СтатьяСметы = Справочники.СтатьиСметы.Субподряд;
	//тзРасходы 	= ПолучитьФактПрочиеПрямыеРасходы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0401", тзРасходы );
	
	//002.0501
	СтатьяСметы = Справочники.СтатьиСметы.Фонд_ДП;
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0501",  тзРасходы);
	
	//002.0502
	СтатьяСметы = Справочники.СтатьиСметы.Фонд_КМ;
	тзРасходы 	= ПолучитьДанныеПоСтатьеСметы( СтатьяСметы, ТипСуммы, ГодБюджета  );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0502",  тзРасходы);
	
	//002.0503 штрафы
	СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
	СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("002.0110");
	тзРасходы = ПолучитьФактПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета );
	ЗаполнитьРасходПоСтатье( ГодБюджета, ТипСуммы, "002.0503",  тзРасходы);
	
	
КонецПроцедуры	

Функция ПолучитьФактРасходыПоСотруднику( СтатьяСметы, СтатьяРасходов, ГодБюджета  )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаРасходПоСотрудникуРасходы.Дата, МЕСЯЦ) КАК Месяц,
		|	СУММА(ЗаявкаНаРасходПоСотрудникуРасходы.Сумма) КАК Сумма,
		|	ЗаявкаНаРасходПоСотрудникуРасходы.Ссылка.РКО,
		|	ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта.Владелец КАК Проект,
		|	ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта
		|ИЗ
		|	Документ.ЗаявкаНаРасходПоСотруднику.Расходы КАК ЗаявкаНаРасходПоСотрудникуРасходы
		|ГДЕ
		|	ЗаявкаНаРасходПоСотрудникуРасходы.СтатьяРасходов = &СтатьяРасходов
		|	И ЗаявкаНаРасходПоСотрудникуРасходы.Ссылка.Проведен
		|	И ЗаявкаНаРасходПоСотрудникуРасходы.Ссылка.СтатьяСметы = &СтатьяСметы
		|	И ВЫБОР
		|			КОГДА ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта.Владелец.ГодПроекта
		|			ИНАЧЕ ГОД(ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта.НачалоРабот)
		|		КОНЕЦ = &ГодБюджета
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаРасходПоСотрудникуРасходы.Дата, МЕСЯЦ),
		|	ЗаявкаНаРасходПоСотрудникуРасходы.Ссылка.РКО,
		|	ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта.Владелец,
		|	ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта";
	
	Запрос.УстановитьПараметр("ГодБюджета", 	ГодБюджета);
	Запрос.УстановитьПараметр("СтатьяРасходов", СтатьяРасходов);
	Запрос.УстановитьПараметр("СтатьяСметы", 	СтатьяСметы);
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
КонецФункции


Функция ПолучитьФактПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов = Неопределено, ГодБюджета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ) КАК Месяц,
		|	СУММА(ЗаявкаНаВыплатуРасхода.СуммаДокумента) КАК Сумма,
		|	ЗаявкаНаВыплатуРасхода.РКО,
		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец КАК Проект,
		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта КАК ЗадачаПроекта
		|ИЗ
		|	Документ.ЗаявкаНаВыплатуРасхода КАК ЗаявкаНаВыплатуРасхода
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &СтатьяРасходов = НЕОПРЕДЕЛЕНО
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЗаявкаНаВыплатуРасхода.СтатьяРасходов = &СтатьяРасходов
		|		КОНЕЦ
		|	И ЗаявкаНаВыплатуРасхода.Ссылка.Проведен
		|	И ВЫБОР
		|			КОГДА ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец.ГодПроекта
		|			ИНАЧЕ ГОД(ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.НачалоРабот)
		|		КОНЕЦ = &ГодБюджета
		|	И ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.СтатьяСметы = &СтатьяСметы
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ),
		|	ЗаявкаНаВыплатуРасхода.РКО,
		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец,
		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта";
	
	Запрос.УстановитьПараметр("ГодБюджета", 		ГодБюджета);
	Запрос.УстановитьПараметр("СтатьяРасходов", 	СтатьяРасходов);
	Запрос.УстановитьПараметр("СтатьяСметы", 		СтатьяСметы);
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
КонецФункции

Функция ПолучитьФактПрочиеПрямыеРасходыПрочие( СтатьяСметы, ГодБюджета )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ) КАК Месяц,
		|	СУММА(ЗаявкаНаВыплатуРасхода.СуммаДокумента) КАК Сумма,
		|	ЗаявкаНаВыплатуРасхода.РКО,
		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта КАК ЗадачаПроекта,
		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец КАК Проект
		|ИЗ
		|	Документ.ЗаявкаНаВыплатуРасхода КАК ЗаявкаНаВыплатуРасхода
		|ГДЕ
		|	ЗаявкаНаВыплатуРасхода.Ссылка.Проведен
		|	И ВЫБОР
		|			КОГДА ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец.ГодПроекта
		|			ИНАЧЕ ГОД(ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.НачалоРабот)
		|		КОНЕЦ = &ГодБюджета
		|	И ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.СтатьяСметы = &СтатьяСметы
		|	И ЗаявкаНаВыплатуРасхода.СтатьяРасходов.ПрочиеРасходы
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаявкаНаВыплатуРасхода.РКО,
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ),
		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта,
		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец";
	
	Запрос.УстановитьПараметр("ГодБюджета", 	ГодБюджета);
	Запрос.УстановитьПараметр("СтатьяСметы", 	СтатьяСметы);
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
КонецФункции


Функция ПолучитьПланПрочиеПрямыеРасходыПрочие( СтатьяСметы, ГодБюджета )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РасходПоЗадачеПроектаОписание.Дата, МЕСЯЦ) КАК Месяц,
		|	СУММА(РасходПоЗадачеПроектаОписание.Сумма) КАК Сумма,
		|	РасходПоЗадачеПроектаОписание.РКО,
		|	РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта,
		|	РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.Владелец КАК Проект
		|ИЗ
		|	Документ.РасходПоЗадачеПроекта.Описание КАК РасходПоЗадачеПроектаОписание
		|ГДЕ
		|	РасходПоЗадачеПроектаОписание.Ссылка.СтатьяСметы = &СтатьяСметы
		|	И РасходПоЗадачеПроектаОписание.Ссылка.Проведен
		|	И ВЫБОР
		|			КОГДА РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.Владелец.ГодПроекта
		|			ИНАЧЕ ГОД(РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.НачалоРабот)
		|		КОНЕЦ = &ГодБюджета
		|	И РасходПоЗадачеПроектаОписание.СтатьяРасходов.ПрочиеРасходы
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(РасходПоЗадачеПроектаОписание.Дата, МЕСЯЦ),
		|	РасходПоЗадачеПроектаОписание.РКО,
		|	РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта,
		|	РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.Владелец";
	
	Запрос.УстановитьПараметр("ГодБюджета", 	ГодБюджета);
	Запрос.УстановитьПараметр("СтатьяСметы", 	СтатьяСметы);
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
	
КонецФункции

Функция ПолучитьПланПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РасходПоЗадачеПроектаОписание.Дата, МЕСЯЦ) КАК Месяц,
		|	РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.Владелец КАК Проект,
		|	РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта,
		|	РасходПоЗадачеПроектаОписание.РКО,
		|	СУММА(РасходПоЗадачеПроектаОписание.Сумма) КАК Сумма
		|ИЗ
		|	Документ.РасходПоЗадачеПроекта.Описание КАК РасходПоЗадачеПроектаОписание
		|ГДЕ
		|	РасходПоЗадачеПроектаОписание.СтатьяРасходов = &СтатьяРасходов
		|	И РасходПоЗадачеПроектаОписание.Ссылка.СтатьяСметы = &СтатьяСметы
		|	И РасходПоЗадачеПроектаОписание.Ссылка.Проведен
		|	И ВЫБОР
		|			КОГДА РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.Владелец.ГодПроекта
		|			ИНАЧЕ ГОД(РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.НачалоРабот)
		|		КОНЕЦ = &ГодБюджета
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(РасходПоЗадачеПроектаОписание.Дата, МЕСЯЦ),
		|	РасходПоЗадачеПроектаОписание.РКО,
		|	РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.Владелец,
		|	РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта";
	
	Запрос.УстановитьПараметр("ГодБюджета", 	ГодБюджета);
	Запрос.УстановитьПараметр("СтатьяРасходов", СтатьяРасходов);
	Запрос.УстановитьПараметр("СтатьяСметы", 	СтатьяСметы);

	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
КонецФункции


#КонецОбласти 

#Область Доходы

Функция ПланДоходовПоМесяцамПолностью(ГодБюджета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗадачиПроектов.Ссылка КАК ЗадачаПроекта,
		|	СУММА(ЕСТЬNULL(СметаЗадачиПроектаРасчет.Сумма, 0)) КАК СуммаСмета
		|ПОМЕСТИТЬ ВТ_ОтобранныеЗадачи
		|ИЗ
		|	Справочник.ЗадачиПроектов КАК ЗадачиПроектов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СметаЗадачиПроекта.Расчет КАК СметаЗадачиПроектаРасчет
		|		ПО ЗадачиПроектов.Ссылка = СметаЗадачиПроектаРасчет.Ссылка.ЗадачаПроекта
		|ГДЕ
		|	(&ГодПроекта = 0
		|			ИЛИ ЗадачиПроектов.Владелец.ГодПроекта = &ГодПроекта)
		|	И (&ГодЗадач = 0
		|			ИЛИ ВЫБОР
		|				КОГДА ЗадачиПроектов.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|					ТОГДА ЗадачиПроектов.Владелец.ГодПроекта
		|				ИНАЧЕ ГОД(ЗадачиПроектов.НачалоРабот)
		|			КОНЕЦ = &ГодЗадач)
		|	И СметаЗадачиПроектаРасчет.Статья = &ДоходыФинансовые
		|	И СметаЗадачиПроектаРасчет.Ссылка.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗадачиПроектов.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОтобранныеЗадачи.ЗадачаПроекта,
		|	СУММА(ОбеспечениеОплатаОбороты.СуммаОбеспеченоОборот) КАК СуммаДоговор
		|ПОМЕСТИТЬ ВТ_ПоДоговорам
		|ИЗ
		|	ВТ_ОтобранныеЗадачи КАК ВТ_ОтобранныеЗадачи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеОплата.Обороты КАК ОбеспечениеОплатаОбороты
		|		ПО ВТ_ОтобранныеЗадачи.ЗадачаПроекта = ОбеспечениеОплатаОбороты.ЗадачаПроекта
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОтобранныеЗадачи.ЗадачаПроекта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТ_ОтобранныеЗадачи.ЗадачаПроекта
		|ПОМЕСТИТЬ ВТ_ЗадачиГарантированные
		|ИЗ
		|	ВТ_ОтобранныеЗадачи КАК ВТ_ОтобранныеЗадачи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СметаЗадачиПроекта.Документы КАК СметаЗадачиПроектаДокументы
		|		ПО ВТ_ОтобранныеЗадачи.ЗадачаПроекта = СметаЗадачиПроектаДокументы.Ссылка.ЗадачаПроекта
		|ГДЕ
		|	(ТИПЗНАЧЕНИЯ(СметаЗадачиПроектаДокументы.Документ) = ТИП(Документ.ПланРабот)
		|			ИЛИ ТИПЗНАЧЕНИЯ(СметаЗадачиПроектаДокументы.Документ) = ТИП(Документ.ЗакупкаППЛО))
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОтобранныеЗадачи.ЗадачаПроекта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ОтобранныеЗадачи.ЗадачаПроекта,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ВТ_ЗадачиГарантированные.ЗадачаПроекта ЕСТЬ NULL
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК ЗадачаГ,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ВТ_ПоДоговорам.ЗадачаПроекта ЕСТЬ NULL
		|				ТОГДА 0
		|			ИНАЧЕ 1
		|		КОНЕЦ) КАК ЗадачаД,
		|	ВТ_ОтобранныеЗадачи.ЗадачаПроекта.Владелец КАК Проект,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ВТ_ЗадачиГарантированные.ЗадачаПроекта ЕСТЬ NULL
		|					И ВТ_ПоДоговорам.ЗадачаПроекта ЕСТЬ NULL
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЗадачаП,
		|	СУММА(ЕСТЬNULL(ВТ_ПоДоговорам.СуммаДоговор, 0)) КАК СуммаДоговор,
		|	ВТ_ОтобранныеЗадачи.СуммаСмета КАК СуммаСмета,
		|	ВТ_ОтобранныеЗадачи.СуммаСмета - ЕСТЬNULL(ВТ_ПоДоговорам.СуммаДоговор, 0) КАК ОстатокСметы
		|ПОМЕСТИТЬ ВТ_ПромежуточныйИтог
		|ИЗ
		|	ВТ_ОтобранныеЗадачи КАК ВТ_ОтобранныеЗадачи
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоДоговорам КАК ВТ_ПоДоговорам
		|		ПО ВТ_ОтобранныеЗадачи.ЗадачаПроекта = ВТ_ПоДоговорам.ЗадачаПроекта
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗадачиГарантированные КАК ВТ_ЗадачиГарантированные
		|		ПО ВТ_ОтобранныеЗадачи.ЗадачаПроекта = ВТ_ЗадачиГарантированные.ЗадачаПроекта
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ОтобранныеЗадачи.ЗадачаПроекта.Владелец,
		|	ВТ_ОтобранныеЗадачи.ЗадачаПроекта,
		|	ВТ_ОтобранныеЗадачи.СуммаСмета,
		|	ВТ_ОтобранныеЗадачи.СуммаСмета - ЕСТЬNULL(ВТ_ПоДоговорам.СуммаДоговор, 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПромежуточныйИтог.ЗадачаПроекта,
		|	ОбеспечениеОплатаОбороты.Месяц КАК Месяц,
		|	СУММА(ОбеспечениеОплатаОбороты.СуммаОбеспеченоОборот) КАК СуммаДМесяц,
		|	СУММА(0) КАК СуммаСМесяц,
		|	СУММА(-ОбеспечениеОплатаОбороты.СуммаОбеспеченоОборот) КАК РазницаМесяц
		|ПОМЕСТИТЬ ВТ_СуммыЗаПериод
		|ИЗ
		|	ВТ_ПромежуточныйИтог КАК ВТ_ПромежуточныйИтог
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ОбеспечениеОплата.Обороты(, , , ) КАК ОбеспечениеОплатаОбороты
		|		ПО ВТ_ПромежуточныйИтог.ЗадачаПроекта = ОбеспечениеОплатаОбороты.ЗадачаПроекта
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПромежуточныйИтог.ЗадачаПроекта,
		|	ОбеспечениеОплатаОбороты.Месяц
		|
		|ИМЕЮЩИЕ
		|	СУММА(ОбеспечениеОплатаОбороты.СуммаОбеспеченоОборот) <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта,
		|	БюджетПоМесяцамОбороты.Месяц,
		|	СУММА(0),
		|	СУММА(БюджетПоМесяцамОбороты.СуммаОборот),
		|	СУММА(БюджетПоМесяцамОбороты.СуммаОборот)
		|ИЗ
		|	ВТ_ПромежуточныйИтог КАК ВТ_ПромежуточныйИтог
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.БюджетПоМесяцам.Обороты(
		|				,
		|				,
		|				,
		|				ТипСуммы = &ТипСуммыПлан
		|					И СтатьяСметы В (&СтатьиДоходов)) КАК БюджетПоМесяцамОбороты
		|		ПО ВТ_ПромежуточныйИтог.ЗадачаПроекта = БюджетПоМесяцамОбороты.ЗадачаПроекта
		|
		|СГРУППИРОВАТЬ ПО
		|	БюджетПоМесяцамОбороты.ЗадачаПроекта,
		|	БюджетПоМесяцамОбороты.Месяц
		|
		|ИМЕЮЩИЕ
		|	СУММА(БюджетПоМесяцамОбороты.СуммаОборот) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПромежуточныйИтог.Проект,
		|	ВТ_ПромежуточныйИтог.ЗадачаПроекта,
		|	ЕСТЬNULL(ВТ_СуммыЗаПериод.Месяц, ДАТАВРЕМЯ(1, 1, 1)) КАК Месяц,
		|	СУММА(ЕСТЬNULL(ВТ_СуммыЗаПериод.СуммаДМесяц, 0)) КАК СуммаДМесяц,
		|	СУММА(ЕСТЬNULL(ВТ_СуммыЗаПериод.СуммаСМесяц, 0)) КАК СуммаСМесяц,
		|	СУММА(ЕСТЬNULL(ВТ_СуммыЗаПериод.РазницаМесяц, 0)) КАК РазницаМесяц,
		|	ВЫБОР
		|		КОГДА ВТ_ПромежуточныйИтог.ЗадачаГ = 1
		|				И (ВТ_ПромежуточныйИтог.СуммаСмета = 0
		|					ИЛИ ВТ_ПромежуточныйИтог.ОстатокСметы <> 0)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЗадачаГ,
		|	ВЫБОР
		|		КОГДА ВТ_ПромежуточныйИтог.ЗадачаД = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЗадачаД,
		|	ВЫБОР
		|		КОГДА ВТ_ПромежуточныйИтог.ЗадачаП = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЗадачаП,
		|	ВТ_ПромежуточныйИтог.СуммаДоговор,
		|	ВТ_ПромежуточныйИтог.СуммаСмета,
		|	ВТ_ПромежуточныйИтог.ОстатокСметы,
		|	ВЫБОР
		|		КОГДА ВТ_ПромежуточныйИтог.СуммаДоговор = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВТ_ПромежуточныйИтог.СуммаСмета = 0
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ВТ_ПромежуточныйИтог.СуммаДоговор > ВТ_ПромежуточныйИтог.СуммаСмета
		|							ТОГДА 1
		|						ИНАЧЕ ВТ_ПромежуточныйИтог.СуммаДоговор / ВТ_ПромежуточныйИтог.СуммаСмета
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ КАК ДоляДоговоров,
		|	СУММА(ЕСТЬNULL(ВТ_СуммыЗаПериод.СуммаСМесяц, 0) * ВЫБОР
		|			КОГДА ВТ_ПромежуточныйИтог.СуммаДоговор = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ВТ_ПромежуточныйИтог.СуммаСмета = 0
		|						ТОГДА 1
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ВТ_ПромежуточныйИтог.СуммаДоговор > ВТ_ПромежуточныйИтог.СуммаСмета
		|								ТОГДА 1
		|							ИНАЧЕ ВТ_ПромежуточныйИтог.СуммаДоговор / ВТ_ПромежуточныйИтог.СуммаСмета
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ) КАК СуммаДоговорная,
		|	СУММА(ЕСТЬNULL(ВТ_СуммыЗаПериод.СуммаСМесяц, 0) * (1 - ВЫБОР
		|			КОГДА ВТ_ПромежуточныйИтог.СуммаДоговор = 0
		|				ТОГДА 0
		|			ИНАЧЕ ВЫБОР
		|					КОГДА ВТ_ПромежуточныйИтог.СуммаСмета = 0
		|						ТОГДА 1
		|					ИНАЧЕ ВЫБОР
		|							КОГДА ВТ_ПромежуточныйИтог.СуммаДоговор > ВТ_ПромежуточныйИтог.СуммаСмета
		|								ТОГДА 1
		|							ИНАЧЕ ВТ_ПромежуточныйИтог.СуммаДоговор / ВТ_ПромежуточныйИтог.СуммаСмета
		|						КОНЕЦ
		|				КОНЕЦ
		|		КОНЕЦ)) КАК СуммаГарантия
		|ИЗ
		|	ВТ_ПромежуточныйИтог КАК ВТ_ПромежуточныйИтог
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СуммыЗаПериод КАК ВТ_СуммыЗаПериод
		|		ПО ВТ_ПромежуточныйИтог.ЗадачаПроекта = ВТ_СуммыЗаПериод.ЗадачаПроекта
		|ГДЕ
		|	(ЕСТЬNULL(ВТ_СуммыЗаПериод.СуммаДМесяц, 0) <> 0
		|			ИЛИ ЕСТЬNULL(ВТ_СуммыЗаПериод.СуммаСМесяц, 0) <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПромежуточныйИтог.Проект,
		|	ВТ_ПромежуточныйИтог.ЗадачаПроекта,
		|	ЕСТЬNULL(ВТ_СуммыЗаПериод.Месяц, ДАТАВРЕМЯ(1, 1, 1)),
		|	ВТ_ПромежуточныйИтог.СуммаДоговор,
		|	ВТ_ПромежуточныйИтог.СуммаСмета,
		|	ВТ_ПромежуточныйИтог.ОстатокСметы,
		|	ВЫБОР
		|		КОГДА ВТ_ПромежуточныйИтог.ЗадачаД = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ПромежуточныйИтог.ЗадачаП = 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ПромежуточныйИтог.ЗадачаГ = 1
		|				И (ВТ_ПромежуточныйИтог.СуммаСмета = 0
		|					ИЛИ ВТ_ПромежуточныйИтог.ОстатокСметы <> 0)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ВТ_ПромежуточныйИтог.СуммаДоговор = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫБОР
		|				КОГДА ВТ_ПромежуточныйИтог.СуммаСмета = 0
		|					ТОГДА 1
		|				ИНАЧЕ ВЫБОР
		|						КОГДА ВТ_ПромежуточныйИтог.СуммаДоговор > ВТ_ПромежуточныйИтог.СуммаСмета
		|							ТОГДА 1
		|						ИНАЧЕ ВТ_ПромежуточныйИтог.СуммаДоговор / ВТ_ПромежуточныйИтог.СуммаСмета
		|					КОНЕЦ
		|			КОНЕЦ
		|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("ГодЗадач", 			ГодБюджета);
	Запрос.УстановитьПараметр("ГодПроекта", 		0);
	Запрос.УстановитьПараметр("ДоходыФинансовые", 	Справочники.СтатьиСметы.ДохФинансовые);
	
	// для выборки из регистра бюджеты
	СтатьиДоходов = Новый Массив;
	СтатьиДоходов.Добавить( Справочники.СтатьиСметы.ДоходыВс);
	СтатьиДоходов.Добавить( Справочники.СтатьиСметы.ВознагрПосредника);
	СтатьиДоходов.Добавить( Справочники.СтатьиСметы.РасходыВознПосредника);
	Запрос.УстановитьПараметр("СтатьиДоходов", 		СтатьиДоходов);
	//
	Запрос.УстановитьПараметр("ТипСуммыПлан", Перечисления.ТипСуммыБюджета.План );
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	// для отладки
	РезультатЗапроса.Сортировать("Проект,ЗадачаПроекта,Месяц");
	Возврат РезультатЗапроса;

КонецФункции

Функция ФактДоходовПоМесяцамПолностью(ГодБюджета)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбеспечениеОплатаОбороты.Месяц,
		|	СУММА(ОбеспечениеОплатаОбороты.СуммаОплаченоОборот) КАК Сумма,
		|	ОбеспечениеОплатаОбороты.ЗадачаПроекта.Владелец КАК Проект,
		|	ЛОЖЬ КАК РКО,
		|	ОбеспечениеОплатаОбороты.ЗадачаПроекта
		|ИЗ
		|	РегистрНакопления.ОбеспечениеОплата.Обороты(
		|			,
		|			,
		|			,
		|			ВЫБОР
		|				КОГДА ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|					ТОГДА ЗадачаПроекта.Владелец.ГодПроекта
		|				ИНАЧЕ ГОД(ЗадачаПроекта.НачалоРабот)
		|			КОНЕЦ = &ГодБюджета) КАК ОбеспечениеОплатаОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбеспечениеОплатаОбороты.Месяц,
		|	ОбеспечениеОплатаОбороты.ЗадачаПроекта.Владелец,
		|	ОбеспечениеОплатаОбороты.ЗадачаПроекта";
	
	Запрос.УстановитьПараметр("ГодБюджета", 		ГодБюджета);
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	РезультатЗапроса.Сортировать("Проект,ЗадачаПроекта,Месяц");
	Возврат РезультатЗапроса;
КонецФункции
	

Процедура ЗаполнитьРегистрДоходамиПлан( ГодБюджета )
	ТипСуммы	= Перечисления.ТипСуммыБюджета.План;
	
	// по всем 
	сЗадачи = Новый Соответствие;
	НаборТДЗП   = РегистрыСведений.ТипыДоходовЗадачПроектов.СоздатьНаборЗаписей();
	
	НаборЗап 	= РегистрыСведений.БюджетДоходовИРасходов.СоздатьНаборЗаписей();
	НаборЗап.Отбор.ГодБюджета.Установить( ГодБюджета );
	НаборЗап.Отбор.ТипСуммы.Установить( ТипСуммы );
	
	ТаблицаДоходов 	= ПланДоходовПоМесяцамПолностью( ГодБюджета );

	Для Каждого Стр ИЗ ТаблицаДоходов Цикл
		СтрЗаписи = Новый Структура;
		СтрЗаписи.Вставить("Доход", 		Истина );
		СтрЗаписи.Вставить("ГодБюджета", 	ГодБюджета );
		СтрЗаписи.Вставить("Месяц", 		Стр.Месяц );
		СтрЗаписи.Вставить("Проект", 		Стр.Проект );
		СтрЗаписи.Вставить("ЗадачаПроекта", Стр.ЗадачаПроекта);
		СтрЗаписи.Вставить("ТипСуммы", 		ТипСуммы );
		СтрЗаписи.Вставить("РКО", 			Ложь );
		// 2017 07 21 
		СтрЗаписи.Вставить("Основание", 	Строка( Стр.Проект ));
		
		
		
		Если Стр.ЗадачаД И Стр.СуммаДоговорная <> 0  Тогда
			СтрЗаписи.Вставить("КодСтатьи", 	"001.0101");
			СтрЗаписи.Вставить("Сумма", 		Стр.СуммаДоговорная );
			СтрЗаписи.Вставить("ТипДохода", 	1 );
			ДобавитьЗаписьБДР( НаборЗап, СтрЗаписи );
						
		КонецЕсли;
		Если Стр.ЗадачаГ И Стр.СуммаГарантия <> 0 Тогда
			СтрЗаписи.Вставить("КодСтатьи", 	"001.0102");
			СтрЗаписи.Вставить("Сумма", 		Стр.СуммаГарантия );
			СтрЗаписи.Вставить("ТипДохода", 	2 );
			ДобавитьЗаписьБДР( НаборЗап, СтрЗаписи );
		КонецЕсли;
		Если Стр.ЗадачаП  И Стр.СуммаСМесяц <> 0 Тогда
			СтрЗаписи.Вставить("КодСтатьи", 	"001.0103");
			СтрЗаписи.Вставить("Сумма", 		Стр.СуммаСМесяц );
			СтрЗаписи.Вставить("ТипДохода", 	3 );
			ДобавитьЗаписьБДР( НаборЗап, СтрЗаписи );
		КонецЕсли;
		Если сЗадачи.Получить( Стр.ЗадачаПроекта ) = Неопределено Тогда
			сЗадачи.Вставить( Стр.ЗадачаПроекта, Стр );
			
		КонецЕсли;
	КонецЦикла;
	НаборЗап.Записать();
	
	// структуру задач
	Для Каждого Эл ИЗ сЗадачи Цикл
		СтрЗаписи = Новый Структура;
		СтрЗаписи.Вставить("ЗадачаПроекта", Эл.Ключ);
		СтрЗаписи.Вставить("ГодБюджета", 	ГодБюджета );
		
		Если Эл.Значение.ЗадачаД Тогда
			СтрЗаписи.Вставить("ТипДохода", 	1 );
			СтрЗаписи.Вставить("Доля", 			Эл.Значение.ДоляДоговоров );
			ДобавитьЗаписьБДР( НаборТДЗП, СтрЗаписи );
		КонецЕсли;
		Если Эл.Значение.ЗадачаГ Тогда
			// для гарантии доля гарантии может быть 0, если все оплачено
			Если Эл.Значение.ДоляДоговоров < 1 Тогда
				СтрЗаписи.Вставить("ТипДохода", 	2 );
				СтрЗаписи.Вставить("Доля", 			1-Эл.Значение.ДоляДоговоров );
				ДобавитьЗаписьБДР( НаборТДЗП, СтрЗаписи );
			КонецЕсли;
		КонецЕсли;
		Если Эл.Значение.ЗадачаП Тогда
			СтрЗаписи.Вставить("ТипДохода", 	3 );
			СтрЗаписи.Вставить("Доля", 			1);
			ДобавитьЗаписьБДР( НаборТДЗП, СтрЗаписи );
		КонецЕсли;
	КонецЦикла;
	НаборТДЗП.Записать();
	
	
КонецПроцедуры


// пропорции по задачам не устанавливаем, а читаем по плану
// 
Процедура ЗаполнитьРегистрДоходамиФакт( ГодБюджета )
	ТипСуммы	= Перечисления.ТипСуммыБюджета.Факт;
	
	// по всем 
	
	НаборЗап 	= РегистрыСведений.БюджетДоходовИРасходов.СоздатьНаборЗаписей();
	НаборЗап.Отбор.ГодБюджета.Установить( ГодБюджета );
	НаборЗап.Отбор.ТипСуммы.Установить( ТипСуммы );

	ТаблицаДоходов 	= ФактДоходовПоМесяцамПолностью(ГодБюджета);
	Для Каждого Стр ИЗ ТаблицаДоходов Цикл
		СтрЗаписи = Новый Структура;
		СтрЗаписи.Вставить("Доход", 		Истина );
		СтрЗаписи.Вставить("ГодБюджета", 	ГодБюджета );
		СтрЗаписи.Вставить("Месяц", 		Стр.Месяц );
		СтрЗаписи.Вставить("Проект", 		Стр.Проект );
		СтрЗаписи.Вставить("ЗадачаПроекта", Стр.ЗадачаПроекта);
		СтрЗаписи.Вставить("ТипСуммы", 		ТипСуммы );
		СтрЗаписи.Вставить("РКО", 			Ложь );
		// 2017 07 21
		СтрЗаписи.Вставить("Основание", 	Строка( Стр.Проект ));

		
		
		сТипыДоходов = ПолучитьТипыДоходовЗадачи( ГодБюджета, Стр.ЗадачаПроекта);
		Для Каждого ТипДоходов ИЗ сТипыДоходов Цикл
			СтрЗаписи.Вставить("ТипДохода", ТипДоходов.Ключ);
			СтрЗаписи.Вставить("КодСтатьи", КодСтатьиДохода( ТипДоходов.Ключ ));
			Сумма = Стр.Сумма * ТипДоходов.Значение;
			СтрЗаписи.Вставить("Сумма", Сумма );
			ДобавитьЗаписьБДР( НаборЗап, СтрЗаписи );
		КонецЦикла;

	КонецЦикла;
	НаборЗап.Записать();
	
КонецПроцедуры


#КонецОбласти 

Процедура РассчитатьБюджетНаСервере(ГодБюджета ) Экспорт
	ОчиститьРегистрБДР( ГодБюджета);
	ТипСуммыФакт 	= Перечисления.ТипСуммыБюджета.Факт;
	// Доходы
	// план 
	ЗаполнитьРегистрДоходамиПлан( ГодБюджета );
	// факт
	ЗаполнитьРегистрДоходамиФакт( ГодБюджета);

	
	// Расходы
	
	// план
	ЗаполнитьРегистрРасходамиПлан( ГодБюджета );
	// факт
	ЗаполнитьРегистрРасходамиФакт( ГодБюджета );
	
	// результат
	УстановитьДатуРасчета( ГодБюджета );
КонецПроцедуры

Процедура УстановитьДатуРасчета( ГодБюджета )
	ДатаРасчета = ТекущаяДата();
	
	МенЗап = РегистрыСведений.ДатаРасчетаБДР.СоздатьМенеджерЗаписи();
	МенЗап.ГодБюджета = ГодБюджета;
	МенЗап.ДатаРасчета = ДатаРасчета;
	МенЗап.Записать();
	 
КонецПроцедуры


#КонецОбласти


#Область ВыводОтчета

Функция ПолучитьДатуРасчета( ГодБюджета ) Экспорт
	МенЗап = РегистрыСведений.ДатаРасчетаБДР.Получить(Новый Структура("ГодБюджета", ГодБюджета ));
	Возврат МенЗап.ДатаРасчета;
КонецФункции

Функция ПолучитьСуммуБДР( ПараметрыЗапроса, НачалоПериода, КоличествоМесяцев = 1 ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ЕСТЬNULL(БюджетДоходовИРасходов.Сумма, 0)) КАК Сумма
		|ИЗ
		|	РегистрСведений.БюджетДоходовИРасходов КАК БюджетДоходовИРасходов
		|ГДЕ
		|	БюджетДоходовИРасходов.ГодБюджета = &ГодБюджета
		|	И БюджетДоходовИРасходов.Месяц МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
		|	И (&ВсеПроекты
		|			ИЛИ БюджетДоходовИРасходов.Проект = &Проект)
		|	И (&ВсеЗадачи
		|			ИЛИ БюджетДоходовИРасходов.ЗадачаПроекта = &ЗадачаПроекта)
		|	И БюджетДоходовИРасходов.ТипСуммы = &ТипСуммы
		|	И (&ВсеСтатьи
		|			ИЛИ БюджетДоходовИРасходов.КодСтатьи В (&КодыСтатей))
		|	И (&ВсеТипыДоходов
		|			ИЛИ БюджетДоходовИРасходов.ТипДохода В (&ТипыДоходов))
		|	И БюджетДоходовИРасходов.Доход = &Доход";
	
	
	Запрос.УстановитьПараметр("ГодБюджета", 	ПараметрыЗапроса.ГодБюджета);
	Запрос.УстановитьПараметр("ТипСуммы", 		ПараметрыЗапроса.ТипСуммы);
	Запрос.УстановитьПараметр("Доход", 			ПараметрыЗапроса.Доход);
	
	Запрос.УстановитьПараметр("Проект", 		ПараметрыЗапроса.Проект);
	Запрос.УстановитьПараметр("ВсеПроекты", 	ПараметрыЗапроса.Проект = Неопределено);
	
	Если ПараметрыЗапроса.Свойство("ЗадачаПроекта") Тогда
		Запрос.УстановитьПараметр("ЗадачаПроекта", 	ПараметрыЗапроса.ЗадачаПроекта);
	Иначе
		Запрос.УстановитьПараметр("ЗадачаПроекта", 	Неопределено);
	КонецЕсли;
	Запрос.УстановитьПараметр("ВсеЗадачи", 		Запрос.Параметры.ЗадачаПроекта = Неопределено);
	//
	Если ПараметрыЗапроса.Свойство("ТипыДоходов") Тогда
		Если ТипЗнч( ПараметрыЗапроса.ТипыДоходов) = Тип("Массив") Тогда
			Запрос.УстановитьПараметр("ТипыДоходов", 	ПараметрыЗапроса.ТипыДоходов);
		Иначе
			ТД = Новый Массив;
			ТД.Добавить(ПараметрыЗапроса.ТипыДоходов);
			Запрос.УстановитьПараметр("ТипыДоходов", ТД);
		КонецЕсли;
	Иначе
		Запрос.УстановитьПараметр("ТипыДоходов", 	Неопределено);
	КонецЕсли;
	Запрос.УстановитьПараметр("ВсеТипыДоходов", 	Запрос.Параметры.ТипыДоходов= Неопределено);
		
	
	Если ПараметрыЗапроса.Свойство("КодыСтатей") Тогда
	
		Если ТипЗнч( ПараметрыЗапроса.КодыСтатей) = Тип("Массив") Тогда
			Запрос.УстановитьПараметр("КодыСтатей", 	ПараметрыЗапроса.КодыСтатей);
		Иначе
			КС = Новый Массив;
			КС.Добавить(ПараметрыЗапроса.КодыСтатей);
			Запрос.УстановитьПараметр("КодыСтатей", 	КС);
		КонецЕсли;
	Иначе
		Запрос.УстановитьПараметр("КодыСтатей", 	Неопределено);
	КонецЕсли;
	Запрос.УстановитьПараметр("ВсеСтатьи", 	Запрос.Параметры.КодыСтатей = Неопределено);
		
	// для удобства передаем отдельно
	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода );
	Запрос.УстановитьПараметр("ПоследнийМесяц", ДобавитьМесяц( НачалоПериода, КоличествоМесяцев-1));
	
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ?(ВыборкаДетальныеЗаписи.Сумма=Null, 0, ВыборкаДетальныеЗаписи.Сумма);
	КонецЦикла;
	// заглушка
	Возврат 0;
	
КонецФункции

//Функция ПолучитьПроектыБДР_( Доход, НачалоПериода, КоличествоМесяцев, КодСтатьи = Неопределено, ТипСуммы = Неопределено, ТипыДоходов = Неопределено, Проект = Неопределено, ЗадачаПроекта = Неопределено ) Экспорт
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ РАЗЛИЧНЫЕ
//		|	БюджетДоходовИРасходов.ЗадачаПроекта,
//		|	БюджетДоходовИРасходов.Проект
//		|ИЗ
//		|	РегистрСведений.БюджетДоходовИРасходов КАК БюджетДоходовИРасходов
//		|ГДЕ
//		|	БюджетДоходовИРасходов.Месяц МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
//		|	И (&ВсеТипыСумм
//		|			ИЛИ БюджетДоходовИРасходов.ТипСуммы = &ТипСуммы)
//		|	И (&ВсеСтатьи
//		|			ИЛИ БюджетДоходовИРасходов.КодСтатьи = &КодСтатьи)
//		|	И (&ВсеТипыДоходов
//		|			ИЛИ БюджетДоходовИРасходов.ТипДохода В (&ТипыДоходов))
//		|	И БюджетДоходовИРасходов.Доход = &Доход
//		|	И (&ВсеЗадачи
//		|			ИЛИ БюджетДоходовИРасходов.ЗадачаПроекта = &ЗадачаПроекта)
//		|	И (&ВсеПроекты
//		|			ИЛИ БюджетДоходовИРасходов.Проект = &Проект)";
//	
//	Запрос.УстановитьПараметр("Доход", 			Доход);
//	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода );
//	Запрос.УстановитьПараметр("ПоследнийМесяц", ДобавитьМесяц( НачалоПериода, КоличествоМесяцев-1));
//	//
//	Запрос.УстановитьПараметр("КодСтатьи", 		КодСтатьи);
//	Запрос.УстановитьПараметр("ВсеСтатьи", 		КодСтатьи  = Неопределено);
//	//
//	Запрос.УстановитьПараметр("ТипСуммы",    	ТипСуммы);
//	Запрос.УстановитьПараметр("ВсеТипыСумм", 	ТипСуммы  = Неопределено);
//	//
//	Запрос.УстановитьПараметр("ТипыДоходов",    ТипыДоходов);
//	Запрос.УстановитьПараметр("ВсеТипыДоходов", ТипыДоходов  = Неопределено);
//	//
//	Запрос.УстановитьПараметр("ЗадачаПроекта",  ЗадачаПроекта);
//	Запрос.УстановитьПараметр("ВсеЗадачи", 		ЗадачаПроекта  = Неопределено);
//	//
//	Запрос.УстановитьПараметр("Проект",  		Проект);
//	Запрос.УстановитьПараметр("ВсеПроекты", 	Проект  = Неопределено);
//	
//	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
//	Возврат РезультатЗапроса;
//КонецФункции

Функция ПолучитьПроектыБДР( ПараметрыЗапроса, НачалоПериода, КоличествоМесяцев = 1) Экспорт 
	//, КодСтатьи = Неопределено, ТипСуммы = Неопределено, ТипыДоходов = Неопределено, Проект = Неопределено, ЗадачаПроекта = Неопределено ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	БюджетДоходовИРасходов.ЗадачаПроекта,
		|	БюджетДоходовИРасходов.Проект
		|ИЗ
		|	РегистрСведений.БюджетДоходовИРасходов КАК БюджетДоходовИРасходов
		|ГДЕ
		|	БюджетДоходовИРасходов.Месяц МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
		|	И БюджетДоходовИРасходов.ТипСуммы = &ТипСуммы
		|	И (&ВсеСтатьи
		|			ИЛИ БюджетДоходовИРасходов.КодСтатьи В (&КодыСтатей))
		|	И (&ВсеТипыДоходов
		|			ИЛИ БюджетДоходовИРасходов.ТипДохода В (&ТипыДоходов))
		|	И БюджетДоходовИРасходов.Доход = &Доход
		|	И (&ВсеЗадачи
		|			ИЛИ БюджетДоходовИРасходов.ЗадачаПроекта = &ЗадачаПроекта)
		|	И (&ВсеПроекты
		|			ИЛИ БюджетДоходовИРасходов.Проект = &Проект)
		|	И БюджетДоходовИРасходов.ГодБюджета = &ГодБюджета";
	
	
	Запрос.УстановитьПараметр("ГодБюджета", 	ПараметрыЗапроса.ГодБюджета);
	Запрос.УстановитьПараметр("ТипСуммы", 		ПараметрыЗапроса.ТипСуммы);
	Запрос.УстановитьПараметр("Доход", 			ПараметрыЗапроса.Доход);
	
	Запрос.УстановитьПараметр("Проект", 		ПараметрыЗапроса.Проект);
	Запрос.УстановитьПараметр("ВсеПроекты", 	ПараметрыЗапроса.Проект = Неопределено);
	
	Если ПараметрыЗапроса.Свойство("ЗадачаПроекта") Тогда
		Запрос.УстановитьПараметр("ЗадачаПроекта", 	ПараметрыЗапроса.ЗадачаПроекта);
	Иначе
		Запрос.УстановитьПараметр("ЗадачаПроекта", 	Неопределено);
	КонецЕсли;
	Запрос.УстановитьПараметр("ВсеЗадачи", 		Запрос.Параметры.ЗадачаПроекта = Неопределено);
	
	Если ПараметрыЗапроса.Свойство("ТипыДоходов") Тогда
		Если ТипЗнч( ПараметрыЗапроса.ТипыДоходов) = Тип("Массив") Тогда
			Запрос.УстановитьПараметр("ТипыДоходов", 	ПараметрыЗапроса.ТипыДоходов);
		Иначе
			ТД = Новый Массив;
			ТД.Добавить(ПараметрыЗапроса.ТипыДоходов);
			Запрос.УстановитьПараметр("ТипыДоходов", ТД);
		КонецЕсли;
	Иначе
		Запрос.УстановитьПараметр("ТипыДоходов", 	Неопределено);
	КонецЕсли;
	Запрос.УстановитьПараметр("ВсеТипыДоходов", 	Запрос.Параметры.ТипыДоходов= Неопределено);
		
	
	Если ПараметрыЗапроса.Свойство("КодыСтатей") Тогда
	
		Если ТипЗнч( ПараметрыЗапроса.КодыСтатей) = Тип("Массив") Тогда
			Запрос.УстановитьПараметр("КодыСтатей", 	ПараметрыЗапроса.КодыСтатей);
		Иначе
			КС = Новый Массив;
			КС.Добавить(ПараметрыЗапроса.КодыСтатей);
			Запрос.УстановитьПараметр("КодыСтатей", 	КС);
		КонецЕсли;
	Иначе
		Запрос.УстановитьПараметр("КодыСтатей", 	Неопределено);
	КонецЕсли;
	Запрос.УстановитьПараметр("ВсеСтатьи", 	Запрос.Параметры.КодыСтатей = Неопределено);
	
	
	//Запрос.УстановитьПараметр("Доход", 			Доход);
	//Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода );
	//Запрос.УстановитьПараметр("ПоследнийМесяц", ДобавитьМесяц( НачалоПериода, КоличествоМесяцев-1));
	//
	//Запрос.УстановитьПараметр("КодСтатьи", 		КодСтатьи);
	//Запрос.УстановитьПараметр("ВсеСтатьи", 		КодСтатьи  = Неопределено);
	////
	//Запрос.УстановитьПараметр("ТипСуммы",    	ТипСуммы);
	//Запрос.УстановитьПараметр("ВсеТипыСумм", 	ТипСуммы  = Неопределено);
	////
	//Запрос.УстановитьПараметр("ТипыДоходов",    ТипыДоходов);
	//Запрос.УстановитьПараметр("ВсеТипыДоходов", ТипыДоходов  = Неопределено);
	////
	//Запрос.УстановитьПараметр("ЗадачаПроекта",  ЗадачаПроекта);
	//Запрос.УстановитьПараметр("ВсеЗадачи", 		ЗадачаПроекта  = Неопределено);
	////
	//Запрос.УстановитьПараметр("Проект",  		Проект);
	//Запрос.УстановитьПараметр("ВсеПроекты", 	Проект  = Неопределено);
	
	
	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода );
	Запрос.УстановитьПараметр("ПоследнийМесяц", ДобавитьМесяц( НачалоПериода, КоличествоМесяцев-1));
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;
КонецФункции


#КонецОбласти


#Область ВебСервис

#Область ФункцииПреобразования

Функция ФункцияПреобразованияЗаписиДанныхДляБюджета(Свойство, Значение, ДополнительныеПараметры, Отказ) Экспорт
	ТипСтрокой = Строка(ТипЗнч( Значение ));
	
    Если Свойство = "Основание" Тогда
        Возврат Строка(Значение);
	КонецЕсли;
	Возврат Значение;
КонецФункции


Функция СтрокаСвертки( КоличествоМесяцев )
	СтрокаСвертки = "";
	Для Н = 1 ПО КоличествоМесяцев Цикл
		СтрокаСвертки = СтрокаСвертки + ?(ЗначениеЗаполнено(СтрокаСвертки), ",", "") + "Сумма" + Н;
	КонецЦикла;
	Возврат СтрокаСвертки;
		
КонецФункции


#КонецОбласти


#Область ФункцииВебСервиса

Функция ПреобразоватьВМассив(БюджетПоСтатье, КоличествоМесяцев)
	м = Новый Массив;
	Для Каждого стрБюджетПоСтатье ИЗ БюджетПоСтатье Цикл
		с = Новый Структура("Основание,РКО," + СтрокаСвертки( КоличествоМесяцев ));
		ЗаполнитьЗначенияСвойств( с, стрБюджетПоСтатье );
		м.Добавить( с );
	КонецЦикла;
	Возврат м;
КонецФункции

Функция ПолучитьПланПоСтатьеJSON( ГодБюджета, КодСтатьи, НачалоПериода, КоличествоМесяцев, ТипДохода ) Экспорт
	
	// не в файл, а в строку
	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, " ", Истина);
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку(ПараметрыJSON);
	
	Данные = Новый Структура;
	Данные.Вставить("КодСтатьи", КодСтатьи);
	
	УстановитьПривилегированныйРежим( Истина );
	ТипСуммы 		= Перечисления.ТипСуммыБюджета.План;
	БюджетПоСтатье 	= ПолучитьБДРПоСтатье( ТипСуммы, ГодБюджета, КодСтатьи, НачалоПериода, КоличествоМесяцев, ТипДохода );
	Данные.Вставить("БюджетПоСтатье", ПреобразоватьВМассив(БюджетПоСтатье, КоличествоМесяцев));
	
	
    ЗаписатьJSON(Запись, Данные, Новый НастройкиСериализацииJSON, "ФункцияПреобразованияЗаписиДанныхДляБюджета", УП_БДР);
	JSON_Данные = Запись.Закрыть();
	Возврат JSON_Данные;
КонецФункции


Функция ПолучитьФактПоСтатьеJSON( ГодБюджета, КодСтатьи, НачалоПериода, КоличествоМесяцев, ТипДохода ) Экспорт
	
	// не в файл, а в строку
	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, " ", Истина);
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку(ПараметрыJSON);
	
	Данные = Новый Структура;
	Данные.Вставить("КодСтатьи", КодСтатьи);
	
	УстановитьПривилегированныйРежим( Истина );
	
	ТипСуммы 		= Перечисления.ТипСуммыБюджета.Факт;
	БюджетПоСтатье 	= ПолучитьБДРПоСтатье( ТипСуммы, ГодБюджета, КодСтатьи, НачалоПериода, КоличествоМесяцев, ТипДохода );
	Данные.Вставить("БюджетПоСтатье", ПреобразоватьВМассив(БюджетПоСтатье, КоличествоМесяцев));
	
	
    ЗаписатьJSON(Запись, Данные, Новый НастройкиСериализацииJSON, "ФункцияПреобразованияЗаписиДанныхДляБюджета", УП_БДР );
	JSON_Данные = Запись.Закрыть();
	Возврат JSON_Данные;
КонецФункции

Функция ПолучитьБДРПоСтатье( ТипСуммы, ГодБюджета, КодСтатьи, НачалоПериода, КоличествоМесяцев, ТипДохода )
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(БюджетДоходовИРасходов.Сумма) КАК Сумма,
		|	БюджетДоходовИРасходов.РКО,
		|	БюджетДоходовИРасходов.Месяц,
		|	РАЗНОСТЬДАТ(&НачалоПериода, НАЧАЛОПЕРИОДА(БюджетДоходовИРасходов.Месяц, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца,
		|	БюджетДоходовИРасходов.Основание
		|ИЗ
		|	РегистрСведений.БюджетДоходовИРасходов КАК БюджетДоходовИРасходов
		|ГДЕ
		|	БюджетДоходовИРасходов.ГодБюджета = &ГодБюджета
		|	И БюджетДоходовИРасходов.Месяц МЕЖДУ &НачалоПериода И &КонецПериода
		|	И БюджетДоходовИРасходов.КодСтатьи = &КодСтатьи
		|	И БюджетДоходовИРасходов.ТипСуммы = &ТипСуммы
		|	И БюджетДоходовИРасходов.ТипДохода = &ТипДохода
		|
		|СГРУППИРОВАТЬ ПО
		|	БюджетДоходовИРасходов.РКО,
		|	БюджетДоходовИРасходов.Месяц,
		|	РАЗНОСТЬДАТ(&НачалоПериода, НАЧАЛОПЕРИОДА(БюджетДоходовИРасходов.Месяц, МЕСЯЦ), МЕСЯЦ) + 1,
		|	БюджетДоходовИРасходов.Основание";
	
	Запрос.УстановитьПараметр("ГодБюджета", 	ГодБюджета);
	Запрос.УстановитьПараметр("КодСтатьи", 		КодСтатьи);
	Запрос.УстановитьПараметр("НачалоПериода", 	НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", 	ДобавитьМесяц( НачалоПериода, КоличествоМесяцев - 1));
	Запрос.УстановитьПараметр("ТипДохода", 		ТипДохода);
	Запрос.УстановитьПараметр("ТипСуммы", 		ТипСуммы);
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
	
	Возврат тзДанные;
КонецФункции

Функция ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев )
	тзДанные 		= ТаблицаРезультата( КоличествоМесяцев );
	
	Для Каждого СтрокаЗапроса ИЗ РезультатЗапроса Цикл
		Если СтрокаЗапроса.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура( "Основание,РКО", СтрокаЗапроса.Основание, СтрокаЗапроса.РКО );
		
		СтрР = тзДанные.НайтиСтроки( Отбор );
		Если СтрР.Количество() = 0 Тогда
			СтрокаР = тзДанные.Добавить();
			ЗаполнитьЗначенияСвойств( СтрокаР, СтрокаЗапроса );
		Иначе
			СтрокаР 		= СтрР[0];
			СтрокаР.Сумма 	= СтрокаР.Сумма + СтрокаЗапроса.Сумма;
		КонецЕсли;
		ПолеСуммы = "Сумма" + СтрокаЗапроса.НомерМесяца;
		СтрокаР[ПолеСуммы] = СтрокаР[ПолеСуммы] + СтрокаЗапроса.Сумма;
		
	КонецЦикла;
	
	тзДанные.Свернуть("Основание,РКО", "Сумма," + СтрокаСвертки( КоличествоМесяцев ));
	Возврат тзДанные;
	
КонецФункции

Функция ТаблицаРезультата(КоличествоМесяцев)
	тз = Новый ТаблицаЗначений;
	тз.Колонки.Добавить("Основание");
	тз.Колонки.Добавить("ПорядокОснования");
	тз.Колонки.Добавить("РКО");
	тз.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Для Н = 1 ПО КоличествоМесяцев Цикл
		тз.Колонки.Добавить("Сумма" + Н, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	КонецЦикла;
	Возврат тз;
	
КонецФункции	


#КонецОбласти


#КонецОбласти