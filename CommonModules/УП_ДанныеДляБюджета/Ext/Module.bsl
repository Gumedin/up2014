#Область ФункцииПреобразования

Функция ФункцияПреобразованияЗаписиДанныхДляБюджета(Свойство, Значение, ДополнительныеПараметры, Отказ) Экспорт
	ТипСтрокой = Строка(ТипЗнч( Значение ));
	
    Если Свойство = "Основание" Тогда
        Возврат Строка(Значение);
	КонецЕсли;
	Возврат Значение;
КонецФункции


#КонецОбласти


#Область ФункцииВебСервиса

Функция ПреобразоватьВМассив(БюджетПоСтатье, КоличествоМесяцев)
	м = Новый Массив;
	Для Каждого стрБюджетПоСтатье ИЗ БюджетПоСтатье Цикл
		с = Новый Структура("Основание,РКО," + СтрокаСвертки( КоличествоМесяцев ));
		ЗаполнитьЗначенияСвойств( с, стрБюджетПоСтатье );
		м.Добавить( с );
	КонецЦикла;
	Возврат м;
КонецФункции

Функция ПолучитьПланПоСтатьеJSON( ГодБюджета, КодСтатьи, НачалоПериода, КоличествоМесяцев ) Экспорт
	
	// не в файл, а в строку
	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, " ", Истина);
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку(ПараметрыJSON);
	
	Данные = Новый Структура;
	Данные.Вставить("КодСтатьи", КодСтатьи);
	
	УстановитьПривилегированныйРежим( Истина );
	БюджетПоСтатье = ПолучитьПланПоСтатье( ГодБюджета, КодСтатьи, НачалоПериода, КоличествоМесяцев );
	Данные.Вставить("БюджетПоСтатье", ПреобразоватьВМассив(БюджетПоСтатье, КоличествоМесяцев));
	
	
    ЗаписатьJSON(Запись, Данные, Новый НастройкиСериализацииJSON, "ФункцияПреобразованияЗаписиДанныхДляБюджета", УП_ДанныеДляБюджета );
	JSON_Данные = Запись.Закрыть();
	Возврат JSON_Данные;
КонецФункции


Функция ПолучитьФактПоСтатьеJSON( ГодБюджета, КодСтатьи, НачалоПериода, КоличествоМесяцев ) Экспорт
	
	// не в файл, а в строку
	ПараметрыJSON = Новый ПараметрыЗаписиJSON(ПереносСтрокJSON.Нет, " ", Истина);
	Запись = Новый ЗаписьJSON;
	Запись.УстановитьСтроку(ПараметрыJSON);
	
	Данные = Новый Структура;
	Данные.Вставить("КодСтатьи", КодСтатьи);
	
	УстановитьПривилегированныйРежим( Истина );
	БюджетПоСтатье = ПолучитьФактПоСтатье( ГодБюджета, КодСтатьи, НачалоПериода, КоличествоМесяцев );
	Данные.Вставить("БюджетПоСтатье", ПреобразоватьВМассив(БюджетПоСтатье, КоличествоМесяцев));
	
	
    ЗаписатьJSON(Запись, Данные, Новый НастройкиСериализацииJSON, "ФункцияПреобразованияЗаписиДанныхДляБюджета", УП_ДанныеДляБюджета );
	JSON_Данные = Запись.Закрыть();
	Возврат JSON_Данные;
КонецФункции

#КонецОбласти

#Область ПолучениеДанных

&НаСервере
Функция ТаблицаРезультата(КоличествоМесяцев)
	тз = Новый ТаблицаЗначений;
	тз.Колонки.Добавить("Основание");
	тз.Колонки.Добавить("ПорядокОснования");
	тз.Колонки.Добавить("РКО");
	тз.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	Для Н = 1 ПО КоличествоМесяцев Цикл
		тз.Колонки.Добавить("Сумма" + Н, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	КонецЦикла;
	Возврат тз;
	
КонецФункции	

&НаСервере
Функция СтрокаСвертки( КоличествоМесяцев )
	СтрокаСвертки = "";
	Для Н = 1 ПО КоличествоМесяцев Цикл
		СтрокаСвертки = СтрокаСвертки + ?(ЗначениеЗаполнено(СтрокаСвертки), ",", "") + "Сумма" + Н;
	КонецЦикла;
	Возврат СтрокаСвертки;
		
КонецФункции

&НаСервере
Функция СложитьРезультаты( КоличествоМесяцев, Рез1, Рез2)
	тз = Рез1.Скопировать();
	Для Каждого СтрР2 ИЗ Рез2 Цикл
		СтрТЗ = тЗ.Добавить();
		ЗаполнитьЗначенияСвойств( СтрТЗ, СтрР2 );
	КонецЦикла;
	тз.Свернуть("Основание,РКО", "Сумма," + СтрокаСвертки( КоличествоМесяцев));
	Возврат тз;
	
КонецФункции

&НаСервере
Функция КоличествоМесяцевВПериоде( Период )
	КоличествоМесяцев = 1;
	Д1 = НачалоМесяца( Период.ДатаНачала );
	Пока Д1 < НачалоМесяца( Период.ДатаОкончания ) Цикл 
		Д1 = ДобавитьМесяц( Д1, 1 );
		КоличествоМесяцев = КоличествоМесяцев + 1;
	КонецЦикла;
	Возврат КоличествоМесяцев;
КонецФункции

&НаСервере
Функция ПолучитьМассивМесяцев( НачалоПериода, КоличествоМесяцев)
	мМ = Новый Массив;
	Для Н = 1 По КоличествоМесяцев Цикл
		мМ.Добавить( ДобавитьМесяц( НачалоПериода, Н - 1 ));
	КонецЦикла;
	Возврат мМ;
КонецФункции

&НаСервере
Функция ПоследнийМесяц( НачалоПериода, КоличествоМесяцев )  Экспорт
	Возврат КонецМесяца(ДобавитьМесяц( НачалоПериода, КоличествоМесяцев-1));
КонецФункции

&НаСервере
Функция ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев )
	тзДанные 		= ТаблицаРезультата( КоличествоМесяцев );
	
	Для Каждого СтрокаЗапроса ИЗ РезультатЗапроса Цикл
		Если СтрокаЗапроса.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура( "Основание,РКО", СтрокаЗапроса.Основание, СтрокаЗапроса.РКО );
		
		СтрР = тзДанные.НайтиСтроки( Отбор );
		Если СтрР.Количество() = 0 Тогда
			СтрокаР = тзДанные.Добавить();
			ЗаполнитьЗначенияСвойств( СтрокаР, СтрокаЗапроса );
		Иначе
			СтрокаР 		= СтрР[0];
			СтрокаР.Сумма 	= СтрокаР.Сумма + СтрокаЗапроса.Сумма;
		КонецЕсли;
		ПолеСуммы = "Сумма" + СтрокаЗапроса.НомерМесяца;
		СтрокаР[ПолеСуммы] = СтрокаР[ПолеСуммы] + СтрокаЗапроса.Сумма;
		
	КонецЦикла;
	
	тзДанные.Свернуть("Основание,РКО", "Сумма," + СтрокаСвертки( КоличествоМесяцев ));
	Возврат тзДанные;
	
КонецФункции


#КонецОбласти


#Область ДанныеПоБюджету

//&НаСервере
//Функция ПолучитьДанныеПоБюджету( СтатьяСметы, ТипСуммы, ГодБюджета, НачалоПериода, КоличествоМесяцев )
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	НАЧАЛОПЕРИОДА(БюджетПоМесяцам.Месяц, МЕСЯЦ) КАК Месяц,
//		|	СУММА(БюджетПоМесяцам.Сумма) КАК Сумма,
//		|	БюджетПоМесяцам.РКО,
//		|	БюджетПоМесяцам.ЗадачаПроекта.Владелец КАК Основание,
//		|	БюджетПоМесяцам.ЗадачаПроекта.Владелец.Код КАК КодПроекта,
//		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(БюджетПоМесяцам.Месяц, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца
//		|ИЗ
//		|	РегистрНакопления.БюджетПоМесяцам КАК БюджетПоМесяцам
//		|ГДЕ
//		|	БюджетПоМесяцам.ТипСуммы = &ТипСуммы
//		|	И БюджетПоМесяцам.Месяц МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
//		|	И БюджетПоМесяцам.СтатьяСметы = &СтатьяСметы
//		|	И БюджетПоМесяцам.ЗадачаПроекта.Владелец.ГодПроекта = &ГодПроекта
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	НАЧАЛОПЕРИОДА(БюджетПоМесяцам.Месяц, МЕСЯЦ),
//		|	БюджетПоМесяцам.РКО,
//		|	БюджетПоМесяцам.ЗадачаПроекта.Владелец,
//		|	БюджетПоМесяцам.ЗадачаПроекта.Владелец.Код,
//		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(БюджетПоМесяцам.Месяц, МЕСЯЦ), МЕСЯЦ) + 1
//		|
//		|УПОРЯДОЧИТЬ ПО
//		|	КодПроекта";
//	
//		
//	Запрос.УстановитьПараметр("ГодПроекта", 	ГодБюджета);
//	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода);
//	Запрос.УстановитьПараметр("ПоследнийМесяц", ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
//	Запрос.УстановитьПараметр("СтатьяСметы", 	СтатьяСметы);
//	Запрос.УстановитьПараметр("ТипСуммы", 		ТипСуммы);
//	
//	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
//	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
//	
//	Возврат тзДанные;
//	
//КонецФункции

&НаСервере
Функция ПолучитьДанныеПоБюджету( СтатьяСметы, ТипСуммы, ГодБюджета, НачалоПериода, КоличествоМесяцев, ПреобразоватьВДанныеСервиса = Истина ) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(БюджетПоМесяцам.Месяц, МЕСЯЦ) КАК Месяц,
		|	СУММА(БюджетПоМесяцам.Сумма) КАК Сумма,
		|	БюджетПоМесяцам.РКО,
		|	БюджетПоМесяцам.ЗадачаПроекта.Владелец КАК Основание,
		|	БюджетПоМесяцам.ЗадачаПроекта.Владелец.Код КАК КодПроекта,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(БюджетПоМесяцам.Месяц, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца
		|ИЗ
		|	РегистрНакопления.БюджетПоМесяцам КАК БюджетПоМесяцам
		|ГДЕ
		|	БюджетПоМесяцам.ТипСуммы = &ТипСуммы
		|	И БюджетПоМесяцам.Месяц МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
		|	И БюджетПоМесяцам.СтатьяСметы = &СтатьяСметы
		|	И ВЫБОР
		|			КОГДА БюджетПоМесяцам.ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА БюджетПоМесяцам.ЗадачаПроекта.Владелец.ГодПроекта
		|			ИНАЧЕ ГОД(БюджетПоМесяцам.ЗадачаПроекта.НачалоРабот)
		|		КОНЕЦ = &ГодЗадач
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(БюджетПоМесяцам.Месяц, МЕСЯЦ),
		|	БюджетПоМесяцам.РКО,
		|	БюджетПоМесяцам.ЗадачаПроекта.Владелец,
		|	БюджетПоМесяцам.ЗадачаПроекта.Владелец.Код,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(БюджетПоМесяцам.Месяц, МЕСЯЦ), МЕСЯЦ) + 1
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодПроекта";
	
		
	Запрос.УстановитьПараметр("ГодЗадач", 		ГодБюджета);
	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяц", ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
	Запрос.УстановитьПараметр("СтатьяСметы", 	СтатьяСметы);
	Запрос.УстановитьПараметр("ТипСуммы", 		ТипСуммы);
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	Если ПреобразоватьВДанныеСервиса Тогда
		тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
		
		Возврат тзДанные;
	КонецЕсли;
	Возврат РезультатЗапроса;
КонецФункции


#КонецОбласти


#Область ПрочиеПрямыеРасходы

&НаСервере
Функция ПолучитьПланПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета, НачалоПериода, КоличествоМесяцев )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РасходПоЗадачеПроектаОписание.Дата, МЕСЯЦ) КАК Месяц,
		|	СУММА(РасходПоЗадачеПроектаОписание.Сумма) КАК Сумма,
		|	РасходПоЗадачеПроектаОписание.РКО,
		|	РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.Владелец КАК Основание,
		|	РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.Владелец.Код КАК КодПроекта,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(РасходПоЗадачеПроектаОписание.Дата, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца
		|ИЗ
		|	Документ.РасходПоЗадачеПроекта.Описание КАК РасходПоЗадачеПроектаОписание
		|ГДЕ
		|	РасходПоЗадачеПроектаОписание.СтатьяРасходов = &СтатьяРасходов
		|	И РасходПоЗадачеПроектаОписание.Ссылка.СтатьяСметы = &СтатьяСметы
		|	И РасходПоЗадачеПроектаОписание.Ссылка.Проведен
		|	И РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.Владелец.ГодПроекта = &ГодПроекта
		|	И РасходПоЗадачеПроектаОписание.Дата МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(РасходПоЗадачеПроектаОписание.Дата, МЕСЯЦ),
		|	РасходПоЗадачеПроектаОписание.РКО,
		|	РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.Владелец,
		|	РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.Владелец.Код,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(РасходПоЗадачеПроектаОписание.Дата, МЕСЯЦ), МЕСЯЦ) + 1
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодПроекта";
	
	Запрос.УстановитьПараметр("ГодПроекта", 	ГодБюджета);
	Запрос.УстановитьПараметр("СтатьяРасходов", СтатьяРасходов);
	Запрос.УстановитьПараметр("СтатьяСметы", 	СтатьяСметы);
	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяц", ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
	
	
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
	
	Возврат тзДанные;
КонецФункции

//&НаСервере
//Функция ПолучитьФактПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов = Неопределено, ГодБюджета, НачалоПериода, КоличествоМесяцев )
//	
//	Запрос = Новый Запрос;
//	Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ) КАК Месяц,
//		|	СУММА(ЗаявкаНаВыплатуРасхода.СуммаДокумента) КАК Сумма,
//		|	ЗаявкаНаВыплатуРасхода.РКО,
//		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца,
//		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец КАК Основание,
//		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец.Код КАК КодПроекта
//		|ИЗ
//		|	Документ.ЗаявкаНаВыплатуРасхода КАК ЗаявкаНаВыплатуРасхода
//		|ГДЕ
//		|	ВЫБОР
//		|			КОГДА &СтатьяРасходов = НЕОПРЕДЕЛЕНО
//		|				ТОГДА ИСТИНА
//		|			ИНАЧЕ ЗаявкаНаВыплатуРасхода.СтатьяРасходов = &СтатьяРасходов
//		|		КОНЕЦ
//		|	И ЗаявкаНаВыплатуРасхода.Ссылка.Проведен
//		|	И ЗаявкаНаВыплатуРасхода.Дата МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
//		|	И ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец.ГодПроекта = &ГодПроекта
//		|	И ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.СтатьяСметы = &СтатьяСметы
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ),
//		|	ЗаявкаНаВыплатуРасхода.РКО,
//		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ), МЕСЯЦ) + 1,
//		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец,
//		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец.Код
//		|
//		|УПОРЯДОЧИТЬ ПО
//		|	КодПроекта";
//	
//	Запрос.УстановитьПараметр("ГодПроекта", 		ГодБюджета);
//	Запрос.УстановитьПараметр("СтатьяРасходов", 	СтатьяРасходов);
//	Запрос.УстановитьПараметр("СтатьяСметы", 		СтатьяСметы);
//	Запрос.УстановитьПараметр("ПервыйМесяц", 		НачалоПериода);
//	Запрос.УстановитьПараметр("ПоследнийМесяц", ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
//	
//	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
//	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
//	
//	Возврат тзДанные;
//КонецФункции

&НаСервере
Функция ПолучитьФактПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов = Неопределено, ГодБюджета, НачалоПериода, КоличествоМесяцев )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ) КАК Месяц,
		|	СУММА(ЗаявкаНаВыплатуРасхода.СуммаДокумента) КАК Сумма,
		|	ЗаявкаНаВыплатуРасхода.РКО,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца,
		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец КАК Основание,
		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец.Код КАК КодПроекта
		|ИЗ
		|	Документ.ЗаявкаНаВыплатуРасхода КАК ЗаявкаНаВыплатуРасхода
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &СтатьяРасходов = НЕОПРЕДЕЛЕНО
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЗаявкаНаВыплатуРасхода.СтатьяРасходов = &СтатьяРасходов
		|		КОНЕЦ
		|	И ЗаявкаНаВыплатуРасхода.Ссылка.Проведен
		|	И ЗаявкаНаВыплатуРасхода.Дата МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
		|	И ВЫБОР
		|			КОГДА ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец.ГодПроекта
		|			ИНАЧЕ ГОД(ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.НачалоРабот)
		|		КОНЕЦ = &ГодБюджета
		|	И ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.СтатьяСметы = &СтатьяСметы
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ),
		|	ЗаявкаНаВыплатуРасхода.РКО,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ), МЕСЯЦ) + 1,
		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец,
		|	ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодПроекта";
	
	Запрос.УстановитьПараметр("ГодБюджета", 		ГодБюджета);
	Запрос.УстановитьПараметр("СтатьяРасходов", 	СтатьяРасходов);
	Запрос.УстановитьПараметр("СтатьяСметы", 		СтатьяСметы);
	Запрос.УстановитьПараметр("ПервыйМесяц", 		НачалоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяц", 	ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
	
	Возврат тзДанные;
КонецФункции


&НаСервере
Функция ПолучитьПланПрочиеПрямыеРасходыПрочие( СтатьяСметы, ГодБюджета, НачалоПериода, КоличествоМесяцев )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(РасходПоЗадачеПроектаОписание.Дата, МЕСЯЦ) КАК Месяц,
		|	СУММА(РасходПоЗадачеПроектаОписание.Сумма) КАК Сумма,
		|	РасходПоЗадачеПроектаОписание.РКО,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(РасходПоЗадачеПроектаОписание.Дата, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца,
		|	РасходПоЗадачеПроектаОписание.СтатьяРасходов.Код КАК СтатьяРасходовКод,
		|	РасходПоЗадачеПроектаОписание.СтатьяРасходов.Код + "", "" + РасходПоЗадачеПроектаОписание.СтатьяРасходов.Наименование КАК Основание
		|ИЗ
		|	Документ.РасходПоЗадачеПроекта.Описание КАК РасходПоЗадачеПроектаОписание
		|ГДЕ
		|	РасходПоЗадачеПроектаОписание.Ссылка.СтатьяСметы = &СтатьяСметы
		|	И РасходПоЗадачеПроектаОписание.Ссылка.Проведен
		|	И РасходПоЗадачеПроектаОписание.Ссылка.ЗадачаПроекта.Владелец.ГодПроекта = &ГодПроекта
		|	И РасходПоЗадачеПроектаОписание.Дата МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
		|	И РасходПоЗадачеПроектаОписание.СтатьяРасходов.ПрочиеРасходы
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(РасходПоЗадачеПроектаОписание.Дата, МЕСЯЦ),
		|	РасходПоЗадачеПроектаОписание.РКО,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(РасходПоЗадачеПроектаОписание.Дата, МЕСЯЦ), МЕСЯЦ) + 1,
		|	РасходПоЗадачеПроектаОписание.СтатьяРасходов.Код,
		|	РасходПоЗадачеПроектаОписание.СтатьяРасходов.Код + "", "" + РасходПоЗадачеПроектаОписание.СтатьяРасходов.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатьяРасходовКод";
	
	Запрос.УстановитьПараметр("ГодПроекта", 	ГодБюджета);
	Запрос.УстановитьПараметр("СтатьяСметы", 	СтатьяСметы);
	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяц", ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
	
	Возврат тзДанные;
	
КонецФункции

&НаСервере
Функция ПолучитьФактПрочиеПрямыеРасходыПрочие( СтатьяСметы, ГодБюджета, НачалоПериода, КоличествоМесяцев )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ) КАК Месяц,
		|	СУММА(ЗаявкаНаВыплатуРасхода.СуммаДокумента) КАК Сумма,
		|	ЗаявкаНаВыплатуРасхода.РКО,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца,
		|	ЗаявкаНаВыплатуРасхода.СтатьяРасходов.Код КАК СтатьяРасходовКод,
		|	ЗаявкаНаВыплатуРасхода.СтатьяРасходов.Код + "", "" + ЗаявкаНаВыплатуРасхода.СтатьяРасходов.Наименование КАК Основание
		|ИЗ
		|	Документ.ЗаявкаНаВыплатуРасхода КАК ЗаявкаНаВыплатуРасхода
		|ГДЕ
		|	ЗаявкаНаВыплатуРасхода.Ссылка.Проведен
		|	И ЗаявкаНаВыплатуРасхода.Дата МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
		|	И ВЫБОР
		|			КОГДА ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.Владелец.ГодПроекта
		|			ИНАЧЕ ГОД(ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.ЗадачаПроекта.НачалоРабот)
		|		КОНЕЦ = &ГодБюджета
		|	И ЗаявкаНаВыплатуРасхода.РасходПоЗадаче.СтатьяСметы = &СтатьяСметы
		|	И ЗаявкаНаВыплатуРасхода.СтатьяРасходов.ПрочиеРасходы
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ),
		|	ЗаявкаНаВыплатуРасхода.РКО,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ЗаявкаНаВыплатуРасхода.Дата, МЕСЯЦ), МЕСЯЦ) + 1,
		|	ЗаявкаНаВыплатуРасхода.СтатьяРасходов.Код,
		|	ЗаявкаНаВыплатуРасхода.СтатьяРасходов.Код + "", "" + ЗаявкаНаВыплатуРасхода.СтатьяРасходов.Наименование
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтатьяРасходовКод";
	
	Запрос.УстановитьПараметр("ГодБюджета", 	ГодБюджета);
	Запрос.УстановитьПараметр("СтатьяСметы", 	СтатьяСметы);
	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяц", ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
	
	Возврат тзДанные;
КонецФункции


#КонецОбласти

#Область ПрочиеФактыПоСтатьям


&НаСервере
Функция ПолучитьФактНачислениеФондов( СтатьяСметы, ГодБюджета, НачалоПериода, КоличествоМесяцев )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НачислениеФондов2016Начисление.ЗадачаПроекта.Владелец КАК Основание,
		|	НачислениеФондов2016Начисление.ЗадачаПроекта.Владелец.Код КАК КодПроекта,
		|	НачислениеФондов2016Начисление.СуммаНачислено КАК Сумма,
		|	НАЧАЛОПЕРИОДА(НачислениеФондов2016Начисление.Ссылка.ПериодРегистрации, МЕСЯЦ) КАК Месяц,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(НачислениеФондов2016Начисление.Ссылка.ПериодРегистрации, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца,
		|	ИСТИНА КАК РКО
		|ИЗ
		|	Документ.НачислениеФондов2016.Начисление КАК НачислениеФондов2016Начисление
		|ГДЕ
		|	НачислениеФондов2016Начисление.Ссылка.СтатьяНачисления = &СтатьяСметы
		|	И НачислениеФондов2016Начисление.Ссылка.Проведен
		|	И ВЫБОР
		|			КОГДА НачислениеФондов2016Начисление.ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА НачислениеФондов2016Начисление.ЗадачаПроекта.Владелец.ГодПроекта
		|			ИНАЧЕ ГОД(НачислениеФондов2016Начисление.ЗадачаПроекта.НачалоРабот)
		|		КОНЕЦ = &ГодБюджета
		|	И НАЧАЛОПЕРИОДА(НачислениеФондов2016Начисление.Ссылка.ПериодРегистрации, МЕСЯЦ) МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц";
	
	Запрос.УстановитьПараметр("ГодБюджета", 	ГодБюджета);
	Запрос.УстановитьПараметр("СтатьяСметы", 	СтатьяСметы);
	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяц", ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
	
	Возврат тзДанные;
КонецФункции

&НаСервере
Функция ПолучитьФактФондыПодразделений( ГодБюджета, НачалоПериода, КоличествоМесяцев )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ФондПодразделений.Сумма) КАК Сумма,
		|	НАЧАЛОПЕРИОДА(ФондПодразделений.Период, МЕСЯЦ) КАК Месяц,
		|	ФондПодразделений.Подразделение КАК Основание,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ФондПодразделений.Период, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца,
		|	ИСТИНА КАК РКО
		|ИЗ
		|	РегистрНакопления.ФондПодразделений КАК ФондПодразделений
		|ГДЕ
		|	ФондПодразделений.ВидДвижения = &ВидДвижения
		|	И ФондПодразделений.Период МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
		|	И ФондПодразделений.Год = &ГодПроекта
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ФондПодразделений.Период, МЕСЯЦ),
		|	ФондПодразделений.Подразделение,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ФондПодразделений.Период, МЕСЯЦ), МЕСЯЦ) + 1";
		
	Запрос.УстановитьПараметр("ГодПроекта", 	ГодБюджета);
	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяц", ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
	Запрос.УстановитьПараметр("ВидДвижения", 	ВидДвиженияНакопления.Приход);
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
	
	Возврат тзДанные;
		
КонецФункции

&НаСервере
Функция ПолучитьФактРасходыПоСотруднику( СтатьяСметы, СтатьяРасходов, ГодБюджета, НачалоПериода, КоличествоМесяцев )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаРасходПоСотрудникуРасходы.Дата, МЕСЯЦ) КАК Месяц,
		|	СУММА(ЗаявкаНаРасходПоСотрудникуРасходы.Сумма) КАК Сумма,
		|	ЗаявкаНаРасходПоСотрудникуРасходы.Ссылка.РКО,
		|	ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта.Владелец КАК Основание,
		|	ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта.Владелец.Код КАК КодПроекта,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ЗаявкаНаРасходПоСотрудникуРасходы.Дата, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца
		|ИЗ
		|	Документ.ЗаявкаНаРасходПоСотруднику.Расходы КАК ЗаявкаНаРасходПоСотрудникуРасходы
		|ГДЕ
		|	ЗаявкаНаРасходПоСотрудникуРасходы.СтатьяРасходов = &СтатьяРасходов
		|	И ЗаявкаНаРасходПоСотрудникуРасходы.Ссылка.Проведен
		|	И ЗаявкаНаРасходПоСотрудникуРасходы.Ссылка.СтатьяСметы = &СтатьяСметы
		|	И ВЫБОР
		|			КОГДА ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта.Владелец.ГодПроекта
		|			ИНАЧЕ ГОД(ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта.НачалоРабот)
		|		КОНЕЦ = &ГодБюджета
		|	И ЗаявкаНаРасходПоСотрудникуРасходы.Дата МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаРасходПоСотрудникуРасходы.Дата, МЕСЯЦ),
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ЗаявкаНаРасходПоСотрудникуРасходы.Дата, МЕСЯЦ), МЕСЯЦ) + 1,
		|	ЗаявкаНаРасходПоСотрудникуРасходы.Ссылка.РКО,
		|	ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта.Владелец,
		|	ЗаявкаНаРасходПоСотрудникуРасходы.ЗадачаПроекта.Владелец.Код";
	
	Запрос.УстановитьПараметр("ГодБюджета", 	ГодБюджета);
	Запрос.УстановитьПараметр("СтатьяРасходов", СтатьяРасходов);
	Запрос.УстановитьПараметр("СтатьяСметы", 	СтатьяСметы);
	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяц", ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
	
	Возврат тзДанные;
КонецФункции

&НаСервере
Функция ПолучитьФактВыплатыПосреднику( ГодБюджета, НачалоПериода, КоличествоМесяцев )
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ЗаявкаНаВыплату.СуммаДокумента) КАК Сумма,
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаВыплату.Дата, МЕСЯЦ) КАК Месяц,
		|	ЗаявкаНаВыплату.Проект КАК Основание,
		|	ЗаявкаНаВыплату.Проект.Код КАК КодПроекта,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ЗаявкаНаВыплату.Дата, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца,
		|	ИСТИНА КАК РКО
		|ИЗ
		|	Документ.ЗаявкаНаВыплату КАК ЗаявкаНаВыплату
		|ГДЕ
		|	ЗаявкаНаВыплату.Проведен
		|	И ЗаявкаНаВыплату.Проект.ГодПроекта = &ГодПроекта
		|	И ЗаявкаНаВыплату.Дата МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ЗаявкаНаВыплату.Дата, МЕСЯЦ),
		|	ЗаявкаНаВыплату.Проект,
		|	ЗаявкаНаВыплату.Проект.Код,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ЗаявкаНаВыплату.Дата, МЕСЯЦ), МЕСЯЦ) + 1
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодПроекта";
	
	Запрос.УстановитьПараметр("ГодПроекта", 	ГодБюджета);
	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяц", ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
	
	Возврат тзДанные;
КонецФункции


#КонецОбласти



#Область ПланФактПоСтатье
&НаСервере
Функция ПолучитьФактПоСтатье( ГодБюджета, КодСтатьи, НачалоПериода, КоличествоМесяцев ) Экспорт
	// возвращает структуру
	тзРезультат = ТаблицаРезультата( КоличествоМесяцев );
	
	Если 		КодСтатьи = "002.0301"		Тогда 
		СтатьяСметы = Справочники.СтатьиСметы.РасходыППЛО;
		тзРезультат = ПолучитьДанныеПоБюджету( СтатьяСметы, Перечисления.ТипСуммыБюджета.Факт, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0302"		Тогда 
		СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
		СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("002.0103");
		тзРезультат 	= ПолучитьФактПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0303"		Тогда 
		СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
		СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("002.0105");
		тзРезультат 	= ПолучитьФактРасходыПоСотруднику( СтатьяСметы, СтатьяРасходов, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0304"		Тогда 
		СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
		СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("003.0703");
		тзРезультат 	= ПолучитьФактПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0305"		Тогда 
		СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
		тзРезультат 	= ПолучитьФактПрочиеПрямыеРасходыПрочие( СтатьяСметы, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0401"		Тогда 
		СтатьяСметы 	= Справочники.СтатьиСметы.Субподряд;
		СтатьяРасходов 	= Неопределено;
		тзРезультат 	= ПолучитьФактПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0101"		Тогда 
		
	ИначеЕсли 	КодСтатьи = "002.0102"		Тогда 
	// выплаты посреднику
		тзРезультат 	= ПолучитьФактВыплатыПосреднику( ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0201"		Тогда 
	//  фонд производственного персонала
		тзРезультат 	= ПолучитьФактФондыПодразделений( ГодБюджета, НачалоПериода, КоличествоМесяцев );
	
	ИначеЕсли 	КодСтатьи = "002.0501"		Тогда 
		СтатьяСметы 	= Справочники.СтатьиСметы.Фонд_ДП;
		тзРезультат 	= ПолучитьФактНачислениеФондов( СтатьяСметы, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0502"		Тогда 
		СтатьяСметы 	= Справочники.СтатьиСметы.Фонд_КМ;
		тзРезультат 	= ПолучитьФактНачислениеФондов( СтатьяСметы, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0503"		Тогда 
		
	//// для отладки		
	ИначеЕсли 	КодСтатьи = "001.0101"		Тогда
	//// Законтрактованные
		тзРезультат 	= ПолучитьФактПоДоходам( СтатьяСметы, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	
	
	//или 		КодСтатьи = "001.0102"		
	//// Плановые
	//или 		КодСтатьи = "001.0103"		Тогда 
	//// Перспективные
	//	тзРезультат		= ПолучитьОбеспечениеПоПроектам(  КодСтатьи, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	Иначе
	// нет данных 
	КонецЕсли; 
	Возврат тзРезультат;
КонецФункции

&НаСервере
Функция СтатусыПроектовДляБюджета() Экспорт
	сСтатусы = Новый СписокЗначений;
	сСтатусы.Добавить( Перечисления.СтатусыПроектов.Бланк );
	сСтатусы.Добавить( Перечисления.СтатусыПроектов.ВРаботе);
	сСтатусы.Добавить( Перечисления.СтатусыПроектов.Согласование);
	Возврат сСтатусы;
КонецФункции


// 2017 05 05 так глючит через Веб
// не воспринимает параметр запроса
// Обеспеченность
&НаСервере
Функция ПолучитьОбеспечениеПоПроектам_( КодСтатьи, ГодБюджета, НачалоПериода, КоличествоМесяцев )
	// таблица
	тзРаспр = РаспределениеДоходовПоПроектам( 0, ГодБюджета, СтатусыПроектовДляБюджета(),,Истина);
	Если тзРаспр = Неопределено Тогда
		Возврат ТаблицаРезультата( КоличествоМесяцев );
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ОбеспеченностьПоЗадачамПроекта.ЗадачаПроекта КАК Справочник.ЗадачиПроектов) КАК ЗадачаПроекта,
		|	ОбеспеченностьПоЗадачамПроекта.Месяц,
		|	ОбеспеченностьПоЗадачамПроекта.ОбеспеченоДоговорами,
		|	ОбеспеченностьПоЗадачамПроекта.ОбеспеченоГарантия,
		|	ОбеспеченностьПоЗадачамПроекта.ОбеспеченоПоЗадаче
		|ПОМЕСТИТЬ ВТ_Обесепечено
		|ИЗ
		|	&Обеспеченность КАК ОбеспеченностьПоЗадачамПроекта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ВТ_Обесепечено.Месяц, МЕСЯЦ) КАК Месяц,
		|	СУММА(ВТ_Обесепечено.ОбеспеченоДоговорами) КАК ОбеспеченоДоговорами,
		|	СУММА(ВТ_Обесепечено.ОбеспеченоГарантия) КАК ОбеспеченоГарантия,
		|	СУММА(ВТ_Обесепечено.ОбеспеченоПоЗадаче) КАК ОбеспеченоПоЗадаче,
		|	СУММА(ВЫБОР
		|			КОГДА &ПоДоговорам
		|				ТОГДА ВТ_Обесепечено.ОбеспеченоДоговорами
		|			ИНАЧЕ ВЫБОР
		|					КОГДА &Гарантия
		|						ТОГДА ВТ_Обесепечено.ОбеспеченоГарантия
		|					ИНАЧЕ ВТ_Обесепечено.ОбеспеченоПоЗадаче
		|				КОНЕЦ
		|		КОНЕЦ) КАК Сумма,
		|	ЛОЖЬ КАК РКО,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ВТ_Обесепечено.Месяц, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца,
		|	ВТ_Обесепечено.ЗадачаПроекта.Владелец КАК Основание,
		|	ВТ_Обесепечено.ЗадачаПроекта.Владелец.Код КАК КодПроекта
		|ИЗ
		|	ВТ_Обесепечено КАК ВТ_Обесепечено
		|ГДЕ
		|	ВТ_Обесепечено.Месяц МЕЖДУ &ПервыйМесяц И &ПоследнийМесяц
		|
		|СГРУППИРОВАТЬ ПО
		|	НАЧАЛОПЕРИОДА(ВТ_Обесепечено.Месяц, МЕСЯЦ),
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ВТ_Обесепечено.Месяц, МЕСЯЦ), МЕСЯЦ) + 1,
		|	ВТ_Обесепечено.ЗадачаПроекта.Владелец,
		|	ВТ_Обесепечено.ЗадачаПроекта.Владелец.Код
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодПроекта";
		
		
	Запрос.УстановитьПараметр("Обеспеченность", тзРаспр );
	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяц", ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
	Запрос.УстановитьПараметр("ПоДоговорам", 	(КодСтатьи = "001.0101"));
	Запрос.УстановитьПараметр("Гарантия", 		(КодСтатьи = "001.0102"));
	
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
	
	Возврат тзДанные;
КонецФункции

&НаСервере
Функция ПолучитьОбеспечениеПоПроектам( КодСтатьи, ГодБюджета, НачалоПериода, КоличествоМесяцев )
	// таблица
	тзРаспр 	= РаспределениеДоходовПоПроектам( 0, ГодБюджета, СтатусыПроектовДляБюджета(),, Истина);
	
	тзДанные 	= ТаблицаРезультата( КоличествоМесяцев );
	Если тзРаспр = Неопределено Тогда
		Возврат тзДанные;
	КонецЕсли;
	
	
	// крайние точки
	ПервыйМесяц 	= НачалоПериода;
	ПоследнийМесяц 	= ПоследнийМесяц( НачалоПериода, КоличествоМесяцев);
	мМесяцы			= ПолучитьМассивМесяцев( НачалоПериода, КоличествоМесяцев);
	
	Для Каждого СтрРаспр ИЗ тзРаспр Цикл
		Если СтрРаспр.Месяц < ПервыйМесяц ИЛИ СтрРаспр.Месяц > ПоследнийМесяц Тогда
			Продолжить;
		КонецЕсли;
		// в зависимости от статьи
		Если 		КодСтатьи = "001.0101" Тогда
			Сумма = СтрРаспр.ОбеспеченоДоговорами;
		ИначеЕсли 	КодСтатьи = "001.0102" Тогда
			Сумма = СтрРаспр.ОбеспеченоГарантия;
		Иначе
			Сумма = СтрРаспр.ОбеспеченоПоЗадаче;
		КонецЕсли;
		Если Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
			
		
		// номер месяца
		НомерМесяца = мМесяцы.Найти( СтрРаспр.Месяц )+1;
		
		
		Основание = СтрРаспр.ЗадачаПроекта.Владелец;
		
		СтрТЗ = тзДанные.Найти( Основание, "Основание");
		Если СтрТЗ = Неопределено Тогда
			СтрТЗ 			= тзДанные.Добавить();
			СтрТЗ.Основание = Основание;
			СтрТЗ.РКО 		= Ложь;
			СтрТЗ.ПорядокОснования = Основание.Код;
		КонецЕсли;
		СтрТЗ.Сумма 					= СтрТЗ.Сумма + Сумма;
		СтрТЗ["Сумма" + НомерМесяца] 	= СтрТЗ["Сумма" + НомерМесяца] + Сумма;
		
	КонецЦикла;
	

	тзДанные.Сортировать("ПорядокОснования");
	Возврат тзДанные;
КонецФункции



&НаСервере
Функция ПолучитьФактПоДоходам( КодСтатьи, ГодЗадач, НачалоПериода, КоличествоМесяцев )
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОбеспечениеОплатаОбороты.Месяц,
		|	СУММА(ОбеспечениеОплатаОбороты.СуммаОплаченоОборот) КАК Сумма,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ОбеспечениеОплатаОбороты.Месяц, МЕСЯЦ), МЕСЯЦ) + 1 КАК НомерМесяца,
		|	ОбеспечениеОплатаОбороты.ЗадачаПроекта.Владелец КАК Основание,
		|	ЛОЖЬ КАК РКО
		|ИЗ
		|	РегистрНакопления.ОбеспечениеОплата.Обороты(
		|			,
		|			,
		|			,
		|			Месяц >= &ПервыйМесяц
		|				И Месяц <= &ПоследнийМесяц
		|				И ВЫБОР
		|					КОГДА ЗадачаПроекта.НачалоРабот = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|						ТОГДА ЗадачаПроекта.Владелец.ГодПроекта
		|					ИНАЧЕ ГОД(ЗадачаПроекта.НачалоРабот)
		|				КОНЕЦ = &ГодЗадач) КАК ОбеспечениеОплатаОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ОбеспечениеОплатаОбороты.Месяц,
		|	ОбеспечениеОплатаОбороты.ЗадачаПроекта.Владелец,
		|	РАЗНОСТЬДАТ(&ПервыйМесяц, НАЧАЛОПЕРИОДА(ОбеспечениеОплатаОбороты.Месяц, МЕСЯЦ), МЕСЯЦ) + 1";
	
	Запрос.УстановитьПараметр("ПервыйМесяц", 	НачалоПериода);
	Запрос.УстановитьПараметр("ПоследнийМесяц", ПоследнийМесяц( НачалоПериода, КоличествоМесяцев));
	Запрос.УстановитьПараметр("ГодЗадач", 		ГодЗадач);
	
	РезультатЗапроса 	= Запрос.Выполнить().Выгрузить();
	тзДанные 			= ПреобразоватьРезультатЗапросаВДанные( РезультатЗапроса, КоличествоМесяцев );
	
	Возврат тзДанные;
КонецФункции

&НаСервере
Функция ПолучитьПланПоСтатье( ГодБюджета, КодСтатьи, НачалоПериода, КоличествоМесяцев ) Экспорт
	
	// возвращает структуру
	тзРезультат = ТаблицаРезультата( КоличествоМесяцев );
	
	
	Если 		КодСтатьи = "002.0301"		Тогда 
		СтатьяСметы = Справочники.СтатьиСметы.РасходыППЛО;
		тзРезультат	= ПолучитьДанныеПоБюджету( СтатьяСметы, Перечисления.ТипСуммыБюджета.План, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0302"		Тогда 
		СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
		СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("002.0103");
		тзРезультат 	= ПолучитьПланПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0303"		Тогда 
		СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
		СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("002.0105");
		тзРезультат 	= ПолучитьПланПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0304"		Тогда 
		СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
		СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("003.0703");
		тзРезультат 	= ПолучитьПланПрочиеПрямыеРасходы( СтатьяСметы, СтатьяРасходов, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0305"		Тогда 
	// прочие расходы
		СтатьяСметы 	= Справочники.СтатьиСметы.РасходыППпоПроекту;
		СтатьяРасходов 	= Справочники.СтатьиРасходов.НайтиПоКоду("003.0703");
		тзРезультат 	= ПолучитьПланПрочиеПрямыеРасходыПрочие( СтатьяСметы, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0401"		Тогда 
		СтатьяСметы = Справочники.СтатьиСметы.Субподряд;
		тзРезультат	= ПолучитьДанныеПоБюджету( СтатьяСметы, Перечисления.ТипСуммыБюджета.План, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0101"		Тогда 
	// Фонд КМ
		СтатьяСметы = Справочники.СтатьиСметы.Фонд_КМ;
		тзРезультат	= ПолучитьДанныеПоБюджету( СтатьяСметы, Перечисления.ТипСуммыБюджета.План, ГодБюджета, НачалоПериода, КоличествоМесяцев );
	
	ИначеЕсли 	КодСтатьи = "002.0102"		Тогда 
	// Выплата посреднику
		СтатьяСметы = Справочники.СтатьиСметы.ВыплатаВознПосреднику;
		тзРезультат	= ПолучитьДанныеПоБюджету( СтатьяСметы, Перечисления.ТипСуммыБюджета.План, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0201"		Тогда 
	// начисления в Фонд производственного персонала
		СтатьяСметы 	= Справочники.СтатьиСметы.ФОТ_ПП;
		тзРезультат61 	= ПолучитьДанныеПоБюджету( СтатьяСметы, Перечисления.ТипСуммыБюджета.План, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		СтатьяСметы 	= Справочники.СтатьиСметы.Начисление_ФондПодр;
		тзРезультат62 	= ПолучитьДанныеПоБюджету( СтатьяСметы, Перечисления.ТипСуммыБюджета.План, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
		тзРезультат		= СложитьРезультаты( КоличествоМесяцев, тзРезультат61, тзРезультат62);
		
	ИначеЕсли 	КодСтатьи = "002.0501"		Тогда 
		СтатьяСметы = Справочники.СтатьиСметы.Фонд_ДП;
		тзРезультат	= ПолучитьДанныеПоБюджету( СтатьяСметы, Перечисления.ТипСуммыБюджета.План, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0502"		Тогда 
		СтатьяСметы = Справочники.СтатьиСметы.Фонд_КМ;
		тзРезультат	= ПолучитьДанныеПоБюджету( СтатьяСметы, Перечисления.ТипСуммыБюджета.План, ГодБюджета, НачалоПериода, КоличествоМесяцев );
		
	ИначеЕсли 	КодСтатьи = "002.0503"		Тогда 
		
	// для отладки		
	ИначеЕсли 	КодСтатьи = "001.0101"		
	// Законтрактованные
	или 		КодСтатьи = "001.0102"		
	// Плановые
	или 		КодСтатьи = "001.0103"		Тогда 
	// Перспективные
		тзРезультат		= ПолучитьОбеспечениеПоПроектам(  КодСтатьи, ГодБюджета, НачалоПериода, КоличествоМесяцев );
	Иначе
	// нет данных 
	
	КонецЕсли; 

	Возврат тзРезультат;
КонецФункции

#КонецОбласти

