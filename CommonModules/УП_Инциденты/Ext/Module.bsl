Функция ПодготовитьПараметрыИнцидента( Инцидент, Поручить, ДатаСобытия = Неопределено) Экспорт
	
	сПараметры = Новый Структура;
	сПараметры.Вставить("Инцидент", Инцидент);
	сПараметры.Вставить("Поручить", Поручить);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнцидентыИсторияСрезПоследних.Период,
		|	ИнцидентыИсторияСрезПоследних.Инцидент,
		|	ИнцидентыИсторияСрезПоследних.ОтКого,
		|	ИнцидентыИсторияСрезПоследних.Кому,
		|	ИнцидентыИсторияСрезПоследних.СтатусИнцидента
		|ИЗ
		|	РегистрСведений.ИнцидентыИстория.СрезПоследних(&ДатаСобытия, Инцидент = &Инцидент) КАК ИнцидентыИсторияСрезПоследних";

	Запрос.УстановитьПараметр("ДатаСобытия", 	?(ДатаСобытия =Неопределено, ТекущаяДата(),ДатаСобытия ));	
	Запрос.УстановитьПараметр("Инцидент",		Инцидент);	
	РезультатЗапроса = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	// инцидент был
		сПараметры.Вставить("Период", 				ВыборкаДетальныеЗаписи.Период );
		сПараметры.Вставить("ПредыдущийСтатус", 	ВыборкаДетальныеЗаписи.СтатусИнцидента );
		сПараметры.Вставить("ОтКого", 				ВыборкаДетальныеЗаписи.Кому);
		
		Возврат сПараметры;		
	КонецЦикла;

	// инцидент новый
	сПараметры.Вставить("СтатусИнцидента", 	Справочники.СтатусыИнцидентов.Новый);
	сПараметры.Вставить("Период", 		 	ТекущаяДата() );
	// проект менеджер
	сПараметры.Вставить("ОтКого", 			ПараметрыСеанса.ТекущийПользователь.ФизическоеЛицо );
	сПараметры.Вставить("Кому", 			Инцидент.Владелец.Владелец.ПроектМенеджер );
	сПараметры.Вставить("Результат", 		"Устранить проблему");
	Возврат сПараметры;		
	

КонецФункции

Функция ОтработкаИнцидента( Инцидент, НаДату )  Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ИнцидентыИстория.Количество) КАК Количество,
		|	СУММА(1) КАК КоличествоСобытий
		|ИЗ
		|	РегистрСведений.ИнцидентыИстория КАК ИнцидентыИстория
		|ГДЕ
		|	ИнцидентыИстория.Период <= &НаДату
		|	И ИнцидентыИстория.Инцидент = &Инцидент";

	Запрос.УстановитьПараметр("Инцидент", 	Инцидент.Ссылка);
	Запрос.УстановитьПараметр("НаДату", 	НаДату);

	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Возврат РезультатЗапроса;

КонецФункции

Функция ПериодИнцидента( Инцидент ) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Инцидент.ДатаНачала ) Тогда
		ГодПроекта			= Инцидент.Владелец.Владелец.Владелец.ГодПроекта;
		ДатаНачалаИнцидента = Дата( ГодПроекта, 1, 1);
		
	Иначе
		ДатаНачалаИнцидента  = Инцидент.ДатаНачала;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Инцидент.ДатаОкончания) Тогда
		Год	= Инцидент.Владелец.Владелец.Владелец.ГодПроекта;
		ДатаОкончанияИнцидента = Дата( Год, 12, 31);
	Иначе
		ДатаОкончанияИнцидента = Инцидент.ДатаОкончания;
	КонецЕсли;
	
	// 
	ПериодИнц = Новый СтандартныйПериод;
	ПериодИнц.ДатаНачала	= ДатаНачалаИнцидента;
	ПериодИнц.ДатаОкончания = МАКС( ДатаНачалаИнцидента, ДатаОкончанияИнцидента);
	
	Возврат ПериодИнц;
	
КонецФункции

// в днях 
Функция ПродолжительностьИнцидента( Инцидент ) Экспорт
	ПериодИнц = ПериодИнцидента( Инцидент );
	Секунд 	= 24 * 60 * 60;
	Дней	= (КонецДня( ПериодИнц.ДатаОкончания)+ 1 - НачалоДня(ПериодИнц.ДатаНачала)) / Секунд;
	Возврат Дней;
	
КонецФункции

// в днях 
// на дтау - день считается прошедшим
Функция ПрошедшаяДоляИнцидента( Инцидент, НаДату ) Экспорт
	ПериодИнц = ПериодИнцидента( Инцидент );
	Если НаДату < ПериодИнц.ДатаНачала Тогда
		Возврат 0;
	КонецЕсли;	
	//
	Секунд 		= 24 * 60 * 60;
	Дней		= (КонецДня(ПериодИнц.ДатаОкончания)+ 1 - НачалоДня(ПериодИнц.ДатаНачала)) / Секунд;
	ДнейПрошло 	= (КонецДня(НаДату)+ 1 - НачалоДня(ПериодИнц.ДатаНачала)) / Секунд;
	// прошедшая доля
	Возврат ДнейПрошло/Дней;
	
КонецФункции

// в часах
Функция ЗакрытыеЧасыПоИнциденту( Инцидент ) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ИнцидентыИстория.Количество) КАК Количество
		|ИЗ
		|	РегистрСведений.ИнцидентыИстория КАК ИнцидентыИстория
		|ГДЕ
		|	ИнцидентыИстория.Инцидент = &Инцидент";

	Запрос.УстановитьПараметр("Инцидент", Инцидент);

	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	Если РезультатЗапроса.Количество() = 0 Тогда
		Возврат 0;
	КонецЕсли;
	Возврат РезультатЗапроса[0].Количество;


КонецФункции